<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<!-- Made by Thot-->
<thot:document
xmlns="Rapport"
xmlns:thot="Thot application special elements"
xmlns:Pa0="Paragraphe">

<thot:presschema thot:prefix="default" thot:presentation="RapportPP"/>
<thot:presschema thot:prefix="Pa0" thot:presentation="ParagraphP"/>

  <Report xml:lang="EN">
    <Page_break/>
    <Page_break/>
    <Header>
      <Title_head>
        <Unit>
        </Unit>
      </Title_head>
      <Author_head>
        <Unit>
        </Unit>
      </Author_head>
      <Title>
        Introducing Thot to XML
      </Title>
      <Authors>
        <Author>
          MONTE Regis
        </Author>
        <Author>
          BONHOMME Stephane
        </Author>
      </Authors>
      <Affiliations>
        <Affiliation>
          INRIA Rhones - Alpes
        </Affiliation>
      </Affiliations>
      <Abstract>
        <Pa0:Paragraph>
          <Pa0:Simple_paragraph>
            Some news about the XML development of Thot.
          </Pa0:Simple_paragraph>
        </Pa0:Paragraph>
        <Pa0:Paragraph>
          <Pa0:Simple_paragraph>
            The ressource is taken from EDITOR.A: Xml.
          </Pa0:Simple_paragraph>
        </Pa0:Paragraph>
      </Abstract>
    </Header>
    <Body>
      <Sequence_of_sections>
        <Section>
          <Section_title>
            Thot/XML translation tables
          </Section_title>
          <Seq._of_paragraphs>
            <Pa0:Paragraph>
              <Pa0:Simple_paragraph>
                The Thot/XML translation tables are used to define XML tags names. It makes the translation from Thot original elements or attributes names to user defined XML names.
              </Pa0:Simple_paragraph>
            </Pa0:Paragraph>
            <Pa0:Paragraph>
              <Pa0:Simple_paragraph>
                Those tables are used for Export, Import and should be used in Thot editing environnement.
              </Pa0:Simple_paragraph>
            </Pa0:Paragraph>
          </Seq._of_paragraphs>
          <Sequence_of_sections>
            <Section xml:id="Sec_ec_76">
              <Section_title>
                How to use it
              </Section_title>
              <Seq._of_paragraphs>
                <Pa0:Paragraph>
                  <Pa0:Simple_paragraph>
                    Files containing the tables data are: &quot;name of the schema&quot;.X in the Thot schema directories.
                  </Pa0:Simple_paragraph>
                </Pa0:Paragraph>
                <Pa0:Paragraph>
                  <Pa0:Simple_paragraph>
                    The structure of thoses schema is generated by thot using &quot;printstr -l xxx &amp;gt; ouput file&quot; and suppessing first lines until &quot;translation:&quot; (included). Then, to configure your XML Export, you just have to edit that file:
                  </Pa0:Simple_paragraph>
                </Pa0:Paragraph>
                <Pa0:Paragraph>
                  <Pa0:List Pa0:Item_mark="7">
                    <Pa0:List_item>
                      <Pa0:Paragraph>
                        <Pa0:Simple_paragraph>
                          Write the XML translated name in right hand of the Thot name.
                        </Pa0:Simple_paragraph>
                      </Pa0:Paragraph>
                    </Pa0:List_item>
                    <Pa0:List_item>
                      <Pa0:Paragraph>
                        <Pa0:Simple_paragraph>
                          Suppress the whole line if you want the original Thot name for  XML name.
                        </Pa0:Simple_paragraph>
                      </Pa0:Paragraph>
                    </Pa0:List_item>
                    <Pa0:List_item>
                      <Pa0:Paragraph>
                        <Pa0:Simple_paragraph>
                          Leave the right hand blank if you don&apos;t want any translation to XML which implies that the tag won&apos;t appear in editor tree structure nor in the exported document.
                        </Pa0:Simple_paragraph>
                      </Pa0:Paragraph>
                    </Pa0:List_item>
                    <Pa0:List_item>
                      <Pa0:Paragraph>
                        <Pa0:Simple_paragraph>
                          Warning: Files have to respect the order given by printstr, i.e. element-&gt;attribute-&gt;attributevalue even if some line are supressed
                        </Pa0:Simple_paragraph>
                      </Pa0:Paragraph>
                    </Pa0:List_item>
                  </Pa0:List>
                </Pa0:Paragraph>
                <Pa0:Paragraph>
                  <Pa0:Simple_paragraph>
                    You don&apos;t need all translation files for using Thot. The application will automaticly use Thot original names if no .X file corresponding to the wanted schema is found.  Beware that, by changing a schema file, the export and import will be different  i.e. trying to open a previous XML document after changing one of its .X translation schema may  cause problem at parsing such as &quot;Unknown XML Tag&quot;. So, if you want to change a schema you better save your document in pivot, change the .X file, restart application, and then save the document again.
                  </Pa0:Simple_paragraph>
                </Pa0:Paragraph>
                <Pa0:Paragraph>
                  <Pa0:Simple_paragraph>
                    Now available schemas are: Rapport.X, Paragraphe.X, Expose.X
                  </Pa0:Simple_paragraph>
                </Pa0:Paragraph>
              </Seq._of_paragraphs>
            </Section>
            <Section>
              <Section_title>
                Implementation
              </Section_title>
              <Sequence_of_sections>
                <Section>
                  <Section_title>
                    Interface
                  </Section_title>
                  <Seq._of_paragraphs>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Three of the module thotlib/xml/translatexml.c are accessible:
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:List Pa0:Item_mark="7">
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              NameThotToXml : Return the Xml name of a thot type (or attr value)<thot:br/>
schema : the schema of the type which name is searched<thot:br/>
elTypeNum : the type number of the element which name is searched<thot:br/>
attrTypeNum : the type of the attribute which name or value    is<thot:br/>
searched ( 0 if an element name is searched)<thot:br/>
attrVal : The name of the attibute enum value is searched<thot:br/>
(0 if an attribute name is searched)
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                          <Pa0:Paragraph>
                            <Pa0:example>
                              <Pa0:line_of_example>
                                char *NameThotToXml(SSchema schema,<thot:br/>
int elTypeNum,<thot:br/>
int attrTypeNum,<thot:br/>
int attrVal)
                              </Pa0:line_of_example>
                            </Pa0:example>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              NameXmlToThot: returns the element or attr type number or an attribute                  value corresponding to a given name<thot:br/>
schema : the schema of the searched type<thot:br/>
xmlName : the xml name<thot:br/>
elTypeNum : the type number of the element if an attribute type or value is searched else 0<thot:br/>
attrTypeNum : the type number of the attribute if an enumerated attr                    value is searched else 0
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                          <Pa0:Paragraph>
                            <Pa0:example>
                              <Pa0:line_of_example>
                                int NameXmlToThot(SSchema schema,<thot:br/>
char *xmlName,<thot:br/>
int elTypeNum,<thot:br/>
int attrTypeNum)
                              </Pa0:line_of_example>
                            </Pa0:example>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              FreeThotXmlTables : Free all loaded tables
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                          <Pa0:Paragraph>
                            <Pa0:example>
                              <Pa0:line_of_example>
                                void  FreeThotXmlTables()
                              </Pa0:line_of_example>
                            </Pa0:example>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                      </Pa0:List>
                    </Pa0:Paragraph>
                  </Seq._of_paragraphs>
                </Section>
                <Section>
                  <Section_title>
                    Structure
                  </Section_title>
                  <Seq._of_paragraphs>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Structure types are defined in thotlib/internals/h/typexml.h
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Figure>
                      <Illustration>
                        <Picture>
                          <img thot:style="Texte_integral:5:0;Texte_integral:4:0;" thot:src="ThotXml.ps"/>
                        </Picture>
                      </Illustration>
                      <Caption>
                        Schema of Thot/XML tables structures
                      </Caption>
                    </Figure>
                    <Figure>
                      <Illustration>
                        <Pa0:Paragraph>
                          <Pa0:example thot:style="Texte_integral:8:10;">
                            <Pa0:line_of_example>
                              /* reference to an XML attribute name and its values */
                            </Pa0:line_of_example>
                            <Pa0:line_of_example>
                              typedef struct _AttrTable  {<thot:br/>
TYPETABLE  AttrNameRank;<thot:br/>
/* rank in the XmlNameTable of the */<thot:br/>
/* attribute type */<thot:br/>
TYPETABLE  AttrFirstValue;<thot:br/>
/* rank in the XmlNameTable of the */<thot:br/>
/* first attribute value */<thot:br/>
/* 0 if the attribute is NOT enum */<thot:br/>
TYPETABLE  AttrNbValue;<thot:br/>
/* number of attribute values */<thot:br/>
/* 0 if the attribute is NOT enum */ }AttrTable;
                            </Pa0:line_of_example>
                            <Pa0:line_of_example>
                              /* translation schema */
                            </Pa0:line_of_example>
                            <Pa0:line_of_example>
                              typedef struct _TranslationSchema *PtrTranslationSchema;
                            </Pa0:line_of_example>
                            <Pa0:line_of_example>
                              typedef struct _TranslationSchema {<thot:br/>
char       *SchemaName;<thot:br/>
/*SSchema which was given to */<thot:br/>
/* construct the tables */<thot:br/>
TYPETABLE   FirstAttr;<thot:br/>
/* rank of the first attribute name */<thot:br/>
TYPETABLE   FirstAttrValue;<thot:br/>
/* rank of the first attribute value */<thot:br/>
TYPETABLE   XmlElemNameTable[MAXNTYPE];<thot:br/>
/* entry in the XmlNameTable for */<thot:br/>
/* each thot element type */<thot:br/>
AttrTable   XmlAttrNameTable[MAXNTYPE];<thot:br/>
/* entry in the XmlNameTable for */<thot:br/>
/* thot attr type and values */<thot:br/>
char       *XmlNameTable[MAXNTYPE];<thot:br/>
/* the alphabetical ordered */<thot:br/>
/* Xml name table */<thot:br/>
TYPETABLE   XmlReverseTable[MAXNTYPE];<thot:br/>
/* The reverse of XmlElemNameTable */<thot:br/>
/* and XmlAttrNameTable */<thot:br/>
PtrTranslationSchema Next<thot:br/>
}TranslationSchema;
                            </Pa0:line_of_example>
                          </Pa0:example>
                        </Pa0:Paragraph>
                      </Illustration>
                      <Caption>
                        Structures
                      </Caption>
                    </Figure>
                  </Seq._of_paragraphs>
                </Section>
              </Sequence_of_sections>
            </Section>
            <Section>
              <Section_title>
                Remarks
              </Section_title>
              <Seq._of_paragraphs>
                <Group_with_heading>
                  <Group_heading>
                    Editing Interface
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Implementation of editing interface using the Thot/XML tables to show tree structure in XML shall be made.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Enumerate attribute value:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        The enumerate attribute value translation is not fully implemented because of problems searching inside an attribute and instability of ennumerate attribute name, and is not used by export and import. Only original integer values are used as in integer attributes.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Needed API
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Some very specific API are needed such as accessing an attribute type with its original name without giving the element containing it. The implementation now use internals structures to access those informations. See source code for details by searching with chain &quot;Warning: No API&quot;
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Questions and evolutions
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        The question of missing tags and how to manage it is still asked:
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        In the future XML interface, shall we show the user all the tree structure or suppress tags that are not traduced in .X file.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        How to manage missing tags in XML files
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
              </Seq._of_paragraphs>
            </Section>
          </Sequence_of_sections>
        </Section>
        <Section>
          <Section_title>
            Thot XML Export
          </Section_title>
          <Seq._of_paragraphs>
            <Pa0:Paragraph>
              <Pa0:Simple_paragraph>
                An XML export have been made for the Thot application.
              </Pa0:Simple_paragraph>
            </Pa0:Paragraph>
            <Pa0:Paragraph>
              <Pa0:Simple_paragraph>
                It&apos;s aim, as we can guess,  is to produce a well formed XML format of Thot documents. It provides greater readability compared to Pivot format, and enable then the users to interact easily with the document content if some error while saving may have occured or to try to change document structure and schema. But, most of all, it&apos;s a standart language (or, at least, tries to be the most possible).
              </Pa0:Simple_paragraph>
            </Pa0:Paragraph>
            <Pa0:Paragraph>
              <Pa0:Simple_paragraph>
                The well-formedness is related to the XML Recommandation 1.0 version, with a bit of the XLL and Namespace drafts. As the last two of them are still in progress, there may changing that will affect this  well-formedness.
              </Pa0:Simple_paragraph>
            </Pa0:Paragraph>
            <Pa0:Paragraph>
              <Pa0:Simple_paragraph>
                The XML will not be &quot;valide&quot; for the simple fact that exported documents do not correspond to any XML DTD. So, the only validity that can be checked is S Schema validity while parsing.
              </Pa0:Simple_paragraph>
            </Pa0:Paragraph>
          </Seq._of_paragraphs>
          <Sequence_of_sections>
            <Section>
              <Section_title>
                Using the XML Export
              </Section_title>
              <Sequence_of_sections>
                <Section>
                  <Section_title>
                    Exporting documents
                  </Section_title>
                  <Seq._of_paragraphs>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        The XML Export is fully integrated and accessible thorought the application: All you have to do is click on the &quot;Save&quot; button and your document will be succesfully exported.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Warning: This button saves in XML even if the opened document was in Pivot format. So, if you want to save in Pivot (which is preferable nowadays), select the &quot;Save as&quot; menu.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Note: Fonctions of automatic saving and emergency saving use XML.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Seq._of_paragraphs>
                </Section>
                <Section>
                  <Section_title>
                    Configuring XML Export
                  </Section_title>
                  <Seq._of_paragraphs>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        For Thot/XML schema configuration see section
                        <Ref_section xml:link="simple" xml:href="#Sec_ec_76"/>
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        There are more global options that can be put but need to recompile Thot. In the Thot Options file, put or remove:
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:List Pa0:Item_mark="7">
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              -DNAMESPACE: Write the document using XML Namespaces for schema description (Necessary for reopning it with Thot).
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              -DINDENT: Write your document with indentation.
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                      </Pa0:List>
                    </Pa0:Paragraph>
                  </Seq._of_paragraphs>
                </Section>
              </Sequence_of_sections>
            </Section>
            <Section>
              <Section_title>
                Implementation
              </Section_title>
              <Sequence_of_sections>
                <Section>
                  <Section_title>
                    Interface
                  </Section_title>
                  <Seq._of_paragraphs>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Only the saving function is accessible:
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        SauveXmlDoc: save Document in &apos;xmlFile&apos; file in XML format<thot:br/>
File must be opened before calling this functions and will still       be after.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:example>
                        <Pa0:line_of_example>
                          boolean SauveXmlDoc (BinFile xmlFile,<thot:br/>
Document doc,<thot:br/>
boolean withEvent)
                        </Pa0:line_of_example>
                      </Pa0:example>
                    </Pa0:Paragraph>
                  </Seq._of_paragraphs>
                </Section>
                <Section>
                  <Section_title>
                    Module Structure
                  </Section_title>
                  <Seq._of_paragraphs>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        The module thotlib/xml/writexml.c is composed of function of different level.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:List Pa0:Item_mark="7">
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              high-level:<thot:br/>
WriteXmlHeader<thot:br/>
XmlWriteComments<thot:br/>
XmlWriteDocSchemaNames<thot:br/>
XmlWriteSchemaPres<thot:br/>
XmlWriteDocAssocRoot<thot:br/>
XmlExternalise
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              medium level:<thot:br/>
XmlWriteReference<thot:br/>
XmlPutAttribut<thot:br/>
XmlWriteLeaf
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              low-level:XmlWriteString, XmlWriteCharData, XmlWriteInteger, XmlWriteElementName, XmlWriteAttrName, XmlWriteAttrIntValue, XmlWriteAttrStrValue, XmlMakePrefix, XmlWritePrefix, XmlFreePrefixs, XmlWriteVersionNumber, XmlCloseRefDoc.<thot:br/>

                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                      </Pa0:List>
                    </Pa0:Paragraph>
                  </Seq._of_paragraphs>
                </Section>
                <Section>
                  <Section_title>
                    Special tags and attributes addition
                  </Section_title>
                  <Seq._of_paragraphs>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        &quot;xml:&quot; and &quot;thot:&quot; prefix are added  before special xml and thot elements and attributes but they aren&apos;t real schema. Thot prefix is used for expressing thot extension to normal XML document and xml prefix for XML/XLL standart  attribute.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        The problem with thot prefix is that it isn&apos;t a real nature and doesn&apos;t correspond then to any DTD.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        The problem with xml prefix is, as it&apos;s standart, it shall not be putted but it may cause conflicts with default schema if Translation files are not edited properly. Suppressing this prefix has to be done otherwise document are not valid.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Group_with_heading>
                      <Group_heading>
                        Thot Tags addition
                      </Group_heading>
                      <Group>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            They are Thot tags added for thot structure extensions  so they don&apos;t respect the S schema structure:
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            DOCUMENT_TAG          &quot;document&quot;   /* main tag for namespace declaration<thot:br/>
and unique root level */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            PRES_SCHEMA_TAG    &quot;presschema&quot; /* presentation schema element */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            PARAM_TAG                   &quot;parameters&quot; /* parameter element. not used */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            BR_TAG             &quot;br&quot;         /* BreakLine element */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                      </Group>
                    </Group_with_heading>
                    <Group_with_heading>
                      <Group_heading>
                        XML/XLL parameter addition
                      </Group_heading>
                      <Group>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            XML_LANG_ATTR               &quot;lang&quot;
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            XML_NAMESPACE_ATTR &quot;xmlns&quot;
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            XML_ID_ATTR        &quot;id&quot;
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            XML_HREF_ATTR      &quot;href&quot;
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            XML_LINK_ATTR      &quot;link&quot;
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            XML_INLINE_ATTR    &quot;inline&quot;    /* included element */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                      </Group>
                    </Group_with_heading>
                    <Group_with_heading>
                      <Group_heading>
                        Thot parameter addition
                      </Group_heading>
                      <Group>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            They are often used to express elements&apos; content
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            P_PREFIX_ATTR      &quot;prefix&quot;       /* for PSchema */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            P_SCHEMA_ATTR      &quot;presentation&quot; /* for PSchema */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            STYLE_ATTR         &quot;style&quot;        /* Specific presentation like CSS  */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            HOLOPHRASTE_ATTR   &quot;holophraste&quot;/* holophrased elements */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            GRAPH_CODE_ATTR    &quot;code&quot;       /* graphic designation code */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            PG_NUM_ATTR        &quot;number&quot;     /* page number, not used yet */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            PG_VIEW_ATTR       &quot;view&quot;       /* page view, not used yet */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            LINE_POINTS_ATTR   &quot;points&quot;     /* polyline points */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            SRC_ATTR           &quot;src&quot;        /* picture source */
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                      </Group>
                    </Group_with_heading>
                  </Seq._of_paragraphs>
                </Section>
              </Sequence_of_sections>
            </Section>
            <Section>
              <Section_title>
                Remarks
              </Section_title>
              <Seq._of_paragraphs>
                <Group_with_heading>
                  <Group_heading>
                    Reference:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        All reference are exported execpt maybe reference from external xml document.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Reference are formed with the first 3 letters of the referred original elementType name, a &apos;_&apos; and the referred thot label number (without the &apos;L&apos;). This encoding  avoid label duplication while parsing (Thot creates automaticly labels in form L000 so referred surely will have a unique label) and provides a bit of readability (Note: often reference to a section is element ref_section, reference to a group is ref_group,.. so it may not be pertinent to write referred element type again ).
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Example: reference to a groupe is:  xml:href=&quot;Gro_320&quot;
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Text:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        TEXT_UNIT element created only if it contains attributes such as presentation attribute, reference attribute...
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Page Break
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Only user&apos;s and begining pagebreak are exported.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Presentation Rules and CSS:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        CSS not yet implemented in XML Export (Waiting Irene&apos;s contribution), so it will appear as a code conaining the view name, rule code and rule value.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Enumerate attribute value
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        They are now exported in integer valuebecause of problems of instability of their original names and the access to them
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Warning
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        For more details about modifications that could be added, search &quot;Warning:&quot; in the export module.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
              </Seq._of_paragraphs>
            </Section>
          </Sequence_of_sections>
        </Section>
        <Section>
          <Section_title>
            Thot XML Import
          </Section_title>
          <Seq._of_paragraphs>
            <Pa0:Paragraph>
              <Pa0:Simple_paragraph>
                As the Export is almost fully implemented, tested, and shall not produce any major error, the import still contains  lacks
              </Pa0:Simple_paragraph>
            </Pa0:Paragraph>
            <Pa0:Paragraph>
              <Pa0:Simple_paragraph>
                This Thot development parse XML documents but, as it doesn&apos;t work with DTD&apos;s documents have to be conform to S Schemas, i.e. be generated by thot. Otherwise I do not guarantee any of the result.
              </Pa0:Simple_paragraph>
            </Pa0:Paragraph>
            <Pa0:Paragraph>
              <Pa0:Simple_paragraph>
                At this state of implementation it is a softfull euphemism to say that you should better save your important document in Pivot format.
              </Pa0:Simple_paragraph>
            </Pa0:Paragraph>
          </Seq._of_paragraphs>
          <Sequence_of_sections>
            <Section>
              <Section_title>
                Using Thot Import
              </Section_title>
              <Seq._of_paragraphs>
                <Pa0:Paragraph>
                  <Pa0:Simple_paragraph>
                    Simply select the &quot;xml&quot; button in the open menu and choose your file...
                  </Pa0:Simple_paragraph>
                </Pa0:Paragraph>
              </Seq._of_paragraphs>
            </Section>
            <Section>
              <Section_title>
                Implementation
              </Section_title>
              <Seq._of_paragraphs>
                <Pa0:Paragraph>
                  <Pa0:Simple_paragraph>
                    The main module is thotlib/xml/parserxml.c. thotlib/xml/xmlmodule.c and thotlib/xml/thotmodule.c are used to parse special XML/XLL and Thot attributes and are called by the parser. thotlib/xml/savexml.c implements all interfacing saving function (automatic save, simple save, emergency save...)
                  </Pa0:Simple_paragraph>
                </Pa0:Paragraph>
                <Pa0:Paragraph>
                  <Pa0:Simple_paragraph>
                    The main module is based on a state automaton
                  </Pa0:Simple_paragraph>
                </Pa0:Paragraph>
              </Seq._of_paragraphs>
              <Sequence_of_sections>
                <Section>
                  <Section_title>
                    Interface
                  </Section_title>
                  <Seq._of_paragraphs>
                    <Group_with_heading>
                      <Group_heading>
                        In parsexml.c:
                      </Group_heading>
                      <Group>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            XmlParseDoc:    Parse the current file and  build the corresponding Thot abstract tree.
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:example>
                            <Pa0:line_of_example>
                              DocumentXmlParseDoc (char* name)
                            </Pa0:line_of_example>
                          </Pa0:example>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            Note: no context has to be implemented because external reference are updated after the end of file parsing and Thot doesn&apos;t open two document at  the same time.
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                      </Group>
                    </Group_with_heading>
                    <Group_with_heading>
                      <Group_heading>
                        In xmlmodule.c:
                      </Group_heading>
                      <Group>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            ParseXmlAttribute: handle a special XML/XLL attribute
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:example>
                            <Pa0:line_of_example>
                              boolean ParseXmlAttribute (<thot:br/>
PrefixType **pPrefixs,<thot:br/>
Document doc,<thot:br/>
Element el,<thot:br/>
unsigned char *attrName,<thot:br/>
unsigned char *value)
                            </Pa0:line_of_example>
                          </Pa0:example>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            pPrefixs is the pointeur to parser prefix list.
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            XmlSetRef: Update references after the end of parsing
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:example>
                            <Pa0:line_of_example>
                              void XmlSetRef (Document doc)
                            </Pa0:line_of_example>
                          </Pa0:example>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                      </Group>
                    </Group_with_heading>
                    <Group_with_heading>
                      <Group_heading>
                        In thotmodule.c:
                      </Group_heading>
                      <Group>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            ParseThotAttribute:handle special Thot attribute.
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:example>
                            <Pa0:line_of_example>
                              boolean ParseThotAttribute (<thot:br/>
PrefixType *Prefixs,<thot:br/>
Document doc,<thot:br/>
Element el,<thot:br/>
char *attrName,<thot:br/>
char *value)
                            </Pa0:line_of_example>
                          </Pa0:example>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            Prefixs is the pointeur to parser prefixs list.
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            XmlSetPresentation: Update doc presentation after views are opened
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:example>
                            <Pa0:line_of_example>
                              void  XmlSetPresentation(Document doc)
                            </Pa0:line_of_example>
                          </Pa0:example>
                        </Pa0:Paragraph>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            Warning: box values don&apos;t work yet: TtaGetPruleValue gives percent and absolute position from upper box, as TtaChangeBoxe are offset.
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                      </Group>
                    </Group_with_heading>
                  </Seq._of_paragraphs>
                </Section>
                <Section>
                  <Section_title>
                    Structures
                  </Section_title>
                  <Seq._of_paragraphs>
                    <Group_with_heading>
                      <Group_heading>
                        parsexml.c:
                      </Group_heading>
                      <Group>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            Upper fuctions are called from states of automaton, in XmlParseDoc
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                      </Group>
                    </Group_with_heading>
                    <Group_with_heading>
                      <Group_heading>
                        xmlmodule.c:
                      </Group_heading>
                      <Group>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            Upper functions are called from the attributes table in ParseXmlAttribute.
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                      </Group>
                    </Group_with_heading>
                    <Group_with_heading>
                      <Group_heading>
                        In thotmodule.c:
                      </Group_heading>
                      <Group>
                        <Pa0:Paragraph>
                          <Pa0:Simple_paragraph>
                            Upper functions are called from the attributes table in ParseXmlAttribute.
                          </Pa0:Simple_paragraph>
                        </Pa0:Paragraph>
                      </Group>
                    </Group_with_heading>
                  </Seq._of_paragraphs>
                </Section>
              </Sequence_of_sections>
            </Section>
            <Section>
              <Section_title>
                Remarks
              </Section_title>
              <Seq._of_paragraphs>
                <Group_with_heading>
                  <Group_heading>
                    Improvment: Associated trees
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Associated trees are not parsed yet
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Improvment:  Wrong XML tags
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        At that time, unknown XML tags disable the creation of all their descendants. We could try to insert descendants anyway ...
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Improvment: PageBreak:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Tey are still some problems with PageBreak ...
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Improvment: Adding natures
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        We now need to wait for presentation schema element to insert natures to document because there is no API TtaChangeNaturePSchema(...). It would be betterto insert them at xmlns attribute so that specifying PSchema won&apos;t be necessary anymore.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Element Tag:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Import support translated name as well as Thot original name, i.e. you can save document without the .xml translation schemas and reopen them.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Improvment: Reference:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        Extern references are not parsed.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Improvment: Structures:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        No handling of structure errors yet.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Enumerate value:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        are not parsed yet for same reasons as export.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Warning
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:Simple_paragraph>
                        For more details about modifications that could be added, search &quot;Warning:&quot; in the modules.
                      </Pa0:Simple_paragraph>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
              </Seq._of_paragraphs>
            </Section>
          </Sequence_of_sections>
        </Section>
        <Section>
          <Section_title>
            Added and modified files
          </Section_title>
          <Sequence_of_sections>
            <Section>
              <Section_title>
                Translation tables
              </Section_title>
              <Seq._of_paragraphs>
                <Pa0:Paragraph>
                  <Pa0:Simple_paragraph>
                    translatexml.c: Thot/Xml tables module.
                  </Pa0:Simple_paragraph>
                </Pa0:Paragraph>
              </Seq._of_paragraphs>
            </Section>
            <Section>
              <Section_title>
                Export
              </Section_title>
              <Seq._of_paragraphs>
                <Group_with_heading>
                  <Group_heading>
                    Added Files:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:List Pa0:Item_mark="7">
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              writexml.c: main module.
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              constxml.h:define thot and xml tags and attributes. Used also by parser for coherence.
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              typexml.h: types for writexml and translatexml.
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              savexml.c: deal with all sort of savings
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                      </Pa0:List>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Modified Files:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:List Pa0:Item_mark="7">
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              docs.c: saving in Xml
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                      </Pa0:List>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
              </Seq._of_paragraphs>
            </Section>
            <Section>
              <Section_title>
                Import
              </Section_title>
              <Seq._of_paragraphs>
                <Group_with_heading>
                  <Group_heading>
                    Added files:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:List Pa0:Item_mark="7">
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              parsexml.c: main module.
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              thotmodule.c: Thot attributes handling module.
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              xmlmodule.c: Xml attributes handling module.
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                      </Pa0:List>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
                <Group_with_heading>
                  <Group_heading>
                    Modified Files:
                  </Group_heading>
                  <Group>
                    <Pa0:Paragraph>
                      <Pa0:List Pa0:Item_mark="7">
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              writeapp.c: showing Xml files
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              opendoc.c, closedoc.c: appel du parser
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                        <Pa0:List_item>
                          <Pa0:Paragraph>
                            <Pa0:Simple_paragraph>
                              docs.c: Adding LoadXmlDocument function
                            </Pa0:Simple_paragraph>
                          </Pa0:Paragraph>
                        </Pa0:List_item>
                      </Pa0:List>
                    </Pa0:Paragraph>
                  </Group>
                </Group_with_heading>
              </Seq._of_paragraphs>
            </Section>
          </Sequence_of_sections>
        </Section>
      </Sequence_of_sections>
    </Body>
  </Report>
</thot:document>
