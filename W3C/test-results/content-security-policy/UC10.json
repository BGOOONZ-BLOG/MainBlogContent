{
  "results": [
    {
      "test": "/content-security-policy/generic/generic-0_10.html",
      "subtests": [
        {
          "name": "Violation report status OK.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: getExtractedNovelData is not defined"
    },
    {
      "test": "/content-security-policy/generic/generic-0_10_1.sub.html",
      "subtests": [
        {
          "name": "Prevents access to external scripts.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: getExtractedNovelData is not defined"
    },
    {
      "test": "/content-security-policy/generic/generic-0_2.html",
      "subtests": [
        {
          "name": "Violation report status OK.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Allows scripts from the same host.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: getExtractedNovelData is not defined"
    },
    {
      "test": "/content-security-policy/generic/generic-0_2_2.sub.html",
      "subtests": [
        {
          "name": "Prevents access to external scripts.",
          "status": "FAIL",
          "message": "assert_unreached: Script should not have ran. Reached unreachable code"
        },
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: getExtractedNovelData is not defined"
    },
    {
      "test": "/content-security-policy/generic/generic-0_2_3.html",
      "subtests": [
        {
          "name": "Prevents access to external scripts.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/generic/generic-0_8.html",
      "subtests": [
        {
          "name": "Violation report status OK.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Wildcard host matching works.",
          "status": "FAIL",
          "message": "assert_true: Script should have ran. expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/generic/generic-0_8_1.sub.html",
      "subtests": [
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        },
        {
          "name": "Wildcard host matching works.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/generic/generic-0_9.sub.html",
      "subtests": [
        {
          "name": "Violation report status OK.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Wildcard port matching works.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/object-src/object-src-2_1.html",
      "subtests": [
        {
          "name": "Async SWF load test",
          "status": "FAIL",
          "message": "assert_true: No Flash Player, cannot run test. expected true got false"
        },
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/object-src/object-src-2_2.html",
      "subtests": [
        {
          "name": "Async SWF load test",
          "status": "FAIL",
          "message": "assert_true: No Flash Player, cannot run test. expected true got false"
        },
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/script-src/script-src-1_1.html",
      "subtests": [
        {
          "name": "Inline script block",
          "status": "FAIL",
          "message": "assert_unreached: Unsafe inline script ran. Reached unreachable code"
        },
        {
          "name": "Inline event handler",
          "status": "FAIL",
          "message": "assert_unreached: Unsafe inline event handler ran. Reached unreachable code"
        },
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/script-src/script-src-1_2_1.html",
      "subtests": [
        {
          "name": "DOM manipulation inline tests",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: dmTest is not defined"
    },
    {
      "test": "/content-security-policy/script-src/script-src-1_3.html",
      "subtests": [
        {
          "name": "Violation report status OK.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inline script in a script tag should  run with an unsafe-inline directive",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/script-src/script-src-1_4.html",
      "subtests": [
        {
          "name": "eval() should throw without 'unsafe-eval' keyword source in script-src directive.",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { eval('evalRan = true;') }\" did not throw"
        },
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/style-src/style-src-3_1.html",
      "subtests": [
        {
          "name": "Inline style should not be applied",
          "status": "FAIL",
          "message": "assert_false: expected false got true"
        },
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/style-src/style-src-3_2.html",
      "subtests": [
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        },
        {
          "name": "Inline style attributes should not be applied without 'unsafe-inline' style-src directive.",
          "status": "FAIL",
          "message": "assert_true: Inline style attribute should not be applied to text expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/content-security-policy/style-src/style-src-3_4.html",
      "subtests": [
        {
          "name": "@import stylesheet should not be applied",
          "status": "FAIL",
          "message": "assert_false: expected false got true"
        },
        {
          "name": "Violation report status OK.",
          "status": "FAIL",
          "message": "assert_equals: No report sent. expected \"\" but got \"false\""
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}sert_idl_attribute: navigator must have battery attribute property \"battery\" found on object expected in prototype chain"
        },
        {
          "name": "battery is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "window has an own property BatteryManager",
          "status": "FAIL",
          "message": "assert_own_property: expected property \"BatteryManager\" missing"
        },
        {
          "name": "battery inherits from EventTarget",
          "status": "FAIL",
          "message": "EventTarget is not defined(stack: ReferenceError: EventTarget is not defined\n    at Object.desc (http://www.w3c-test.org/battery-status/battery-interface.js:70:48)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at test (http://www.w3c-test.org/resources/testharness.js:73:18)\n    at http://www.w3c-test.org/battery-status/battery-interface.js:69:3\n    at http://www.w3c-test.org/battery-status/battery-interface.js:393:3)"
        },
        {
          "name": "charging attribute exists",
          "status": "FAIL",
          "message": "assert_idl_attribute: battery must have charging attribute property \"charging\" found on object expected in prototype chain"
        },
        {
          "name": "charging attribute is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "chargingTime attribute exists",
          "status": "FAIL",
          "message": "assert_idl_attribute: battery must have chargingTime attribute property \"chargingTime\" found on object expected in prototype chain"
        },
        {
          "name": "chargingTime attribute is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dischargingTime attribute exists",
          "status": "FAIL",
          "message": "assert_idl_attribute: battery must have dischargingTime attribute property \"dischargingTime\" found on object expected in prototype chain"
        },
        {
          "name": "dischargingTime attribute is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "level attribute exists",
          "status": "FAIL",
          "message": "assert_idl_attribute: battery must have level attribute property \"level\" found on object expected in prototype chain"
        },
        {
          "name": "level attribute is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onchargingchange attribute exists",
          "status": "FAIL",
          "message": "assert_idl_attribute: battery must have onchargingchange attribute property \"onchargingchange\" found on object expected in prototype chain"
        },
        {
          "name": "onchargingchange is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onchargingchange is set to function",
          "status": "FAIL",
          "message": "assert_idl_attribute: Expected to find onchargingchange attribute on battery object property \"onchargingchange\" found on object expected in prototype chain"
        },
        {
          "name": "onchargingchange: treat object as null",
          "status": "FAIL",
          "message": "assert_equals: onchargingchange did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "onchargingchange: treat object with non-callable call property as null",
          "status": "FAIL",
          "message": "assert_equals: onchargingchange did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "onchargingchange: treat string as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onchargingchange: treat number as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onchargingchange: treat undefined as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onchargingchange: treat array as null",
          "status": "FAIL",
          "message": "assert_equals: onchargingchange did not treat noncallable (array) as null expected null but got []"
        },
        {
          "name": "onchargingchange: treat non-callable host object as null",
          "status": "FAIL",
          "message": "assert_equals: onchargingchange did not treat noncallable host object as null expected (object) null but got (function) function \"function Node() { [native code] }\""
        },
        {
          "name": "onchargingtimechange attribute exists",
          "status": "FAIL",
          "message": "assert_idl_attribute: battery must have onchargingtimechange attribute property \"onchargingtimechange\" found on object expected in prototype chain"
        },
        {
          "name": "onchargingtimechange is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onchargingtimechange is set to function",
          "status": "FAIL",
          "message": "assert_idl_attribute: Expected to find onchargingtimechange attribute on battery object property \"onchargingtimechange\" found on object expected in prototype chain"
        },
        {
          "name": "onchargingtimechange: treat object as null",
          "status": "FAIL",
          "message": "assert_equals: onchargingtimechange did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "onchargingtimechange: treat object with non-callable call property as null",
          "status": "FAIL",
          "message": "assert_equals: onchargingtimechange did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "onchargingtimechange: treat string as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onchargingtimechange: treat number as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onchargingtimechange: treat undefined as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onchargingtimechange: treat array as null",
          "status": "FAIL",
          "message": "assert_equals: onchargingtimechange did not treat noncallable (array) as null expected null but got []"
        },
        {
          "name": "onchargingtimechange: treat non-callable host object as null",
          "status": "FAIL",
          "message": "assert_equals: onchargingtimechange did not treat noncallable host object as null expected (object) null but got (function) function \"function Node() { [native code] }\""
        },
        {
          "name": "ondischargingtimechange attribute exists",
          "status": "FAIL",
          "message": "assert_idl_attribute: battery must have ondischargingtimechange attribute property \"ondischargingtimechange\" found on object expected in prototype chain"
        },
        {
          "name": "ondischargingtimechange is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "ondischargingtimechange is set to function",
          "status": "FAIL",
          "message": "assert_idl_attribute: Expected to find ondischargingtimechange attribute on battery object property \"ondischargingtimechange\" found on object expected in prototype chain"
        },
        {
          "name": "ondischargingtimechange: treat object as null",
          "status": "FAIL",
          "message": "assert_equals: ondischargingtimechange did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "ondischargingtimechange: treat object with non-callable call property as null",
          "status": "FAIL",
          "message": "assert_equals: ondischargingtimechange did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "ondischargingtimechange: treat string as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "ondischargingtimechange: treat number as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "ondischargingtimechange: treat undefined as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "ondischargingtimechange: treat array as null",
          "status": "FAIL",
          "message": "assert_equals: ondischargingtimechange did not treat noncallable (array) as null expected null but got []"
        },
        {
          "name": "ondischargingtimechange: treat non-callable host object as null",
          "status": "FAIL",
          "message": "assert_equals: ondischargingtimechange did not treat noncallable host object as null expected (object) null but got (function) function \"function Node() { [native code] }\""
        },
        {
          "name": "onlevelchange attribute exists",
          "status": "FAIL",
          "message": "assert_idl_attribute: battery must have onlevelchange attribute property \"onlevelchange\" found on object expected in prototype chain"
        },
        {
          "name": "onlevelchange is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onlevelchange is set to function",
          "status": "FAIL",
          "message": "assert_idl_attribute: Expected to find onlevelchange attribute on battery object property \"onlevelchange\" found on object expected in prototype chain"
        },
        {
          "name": "onlevelchange: treat object as null",
          "status": "FAIL",
          "message": "assert_equals: onlevelchange did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "onlevelchange: treat object with non-callable call property as null",
          "status": "FAIL",
          "message": "assert_equals: onlevelchange did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "onlevelchange: treat string as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onlevelchange: treat number as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onlevelchange: treat undefined as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onlevelchange: treat array as null",
          "status": "FAIL",
          "message": "assert_equals: onlevelchange did not treat noncallable (array) as null expected null but got []"
        },
        {
          "name": "onlevelchange: treat non-callable host object as null",
          "status": "FAIL",
          "message": "assert_equals: onlevelchange did not treat noncallable host object as null expected (object) null but got (function) function \"function Node() { [native code] }\""
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}