{
  "results": [
    {
      "test": "/proximity/ProximityEvent_tests.html",
      "subtests": [
        {
          "name": "the event is an instance of DeviceProximityEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "the event inherits from Event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Missing type argument",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Event type set to undefined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is number",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is Number",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is array",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is instance of Array",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is nested array",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is host object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is boolean (true)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is instance of Boolean (true)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is boolean (false)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is instance of Boolean (false)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is string",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is instance of String",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is function",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is complext object, with toString method",
          "status": "PASS",
          "message": null
        },
        {
          "name": "toString is of type function",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument sets to undefined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is Date object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is RegExp object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is boolean",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is number",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is string",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value attribute exist",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value attribute is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value initializes to positive Infinity",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value set to positive Infinity",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value set to negative Infinity",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value set to 0",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value set to 1",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value set to 0.5",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value set to false",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value set to true",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value of undefined resolves to NaN",
          "status": "FAIL",
          "message": "assert_unreached: error message: assert_true: expected true got false Reached unreachable code"
        },
        {
          "name": "value of null resolves to 0",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value of empty string must resolve to 0",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value of U+0020 must resolve to 0",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value of multiple U+0020 must resolve to 0",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value converts to 1234",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value converts to 0",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value of {} resolves to NaN",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value resolves to NaN",
          "status": "PASS",
          "message": null
        },
        {
          "name": "value resolves 123",
          "status": "PASS",
          "message": null
        },
        {
          "name": "min attribute exist",
          "status": "PASS",
          "message": null
        },
        {
          "name": "min attribute is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "min initializes to negative Infinity",
          "status": "PASS",
          "message": null
        },
        {
          "name": "max attribute exist",
          "status": "PASS",
          "message": null
        },
        {
          "name": "max attribute is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "max initializes to positive Infinity",
          "status": "PASS",
          "message": null
        },
        {
          "name": "ondeviceproximity exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "ondeviceproximity is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "ondeviceproximity is set to function",
          "status": "PASS",
          "message": null
        },
        {
          "name": "treat object as null",
          "status": "FAIL",
          "message": "assert_equals: window.ondeviceproximity did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "treat object with non-callable call property as null",
          "status": "FAIL",
          "message": "assert_equals: window.ondeviceproximity did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "treat string as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "treat number as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "treat undefined as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "treat array as null",
          "status": "FAIL",
          "message": "assert_equals: window.ondeviceproximity did not treat noncallable (array) as null expected null but got []"
        },
        {
          "name": "treat non-callable host object as null",
          "status": "FAIL",
          "message": "assert_equals: window.ondeviceproximity did not treat noncallable host object as null expected (object) null but got (function) function \"function Node() {\n    [native code]\n}\""
        },
        {
          "name": "test if device proximity event received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "test if user proximity event received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "the event is an instance of UserProximityEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "the event inherits from Event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Missing type argument",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Event type set to undefined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is number",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is Number",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is array",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is instance of Array",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is nested array",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is host object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is boolean (true)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is instance of Boolean (true)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is boolean (false)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is instance of Boolean (false)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is string",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is instance of String",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is function",
          "status": "PASS",
          "message": null
        },
        {
          "name": "type argument is complext object, with toString method",
          "status": "PASS",
          "message": null
        },
        {
          "name": "toString is of type function",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument sets to undefined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is Date object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is RegExp object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is boolean",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is number",
          "status": "PASS",
          "message": null
        },
        {
          "name": "eventInitDict argument is string",
          "status": "PASS",
          "message": null
        },
        {
          "name": "must have attribute near",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near initializes to false",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to false",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to true",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to undefined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to 0",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to empty string",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to U+0020",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to 1",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to []",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to {}",
          "status": "PASS",
          "message": null
        },
        {
          "name": "near set to object that resolves to false",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onuserproximity exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onuserproximity is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "onuserproximity exists and can be set to a function",
          "status": "PASS",
          "message": null
        },
        {
          "name": "treat object as null",
          "status": "FAIL",
          "message": "assert_equals: window.onuserproximity did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "treat object with non-callable call property as null",
          "status": "FAIL",
          "message": "assert_equals: window.onuserproximity did not treat noncallable as null expected null but got object \"[object Object]\""
        },
        {
          "name": "treat string as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "treat number as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "treat undefined as null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "treat array as null",
          "status": "FAIL",
          "message": "assert_equals: window.onuserproximity did not treat noncallable (array) as null expected null but got []"
        },
        {
          "name": "treat non-callable host object as null",
          "status": "FAIL",
          "message": "assert_equals: window.onuserproximity did not treat noncallable host object as null expected (object) null but got (function) function \"function Node() {\n    [native code]\n}\""
        },
        {
          "name": "test if user proximity event received",
          "status": "NOTRUN",
          "message": null
        },
        {
          "name": "test if user proximity event received",
          "status": "NOTRUN",
          "message": null
        }
      ],
      "status": "TIMEOUT",
      "message": null
    },
    {
      "test": "/proximity/idlharness.html",
      "subtests": [
        {
          "name": "Window interface: attribute ondeviceproximity",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Window interface: attribute onuserproximity",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Window must be primary interface of window",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Stringification of window",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Window interface: window must inherit property \"ondeviceproximity\" with the proper type (0)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Window interface: window must inherit property \"onuserproximity\" with the proper type (1)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "DeviceProximityEvent interface: existence and properties of interface object",
          "status": "FAIL",
          "message": "assert_equals: prototype of window's property \"DeviceProximityEvent\" is not Function.prototype expected function \"function () {\n}\" but got function \"function Event() {\n    [native code]\n}\""
        },
        {
          "name": "DeviceProximityEvent interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "DeviceProximityEvent interface: existence and properties of interface prototype object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "DeviceProximityEvent interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "DeviceProximityEvent interface: attribute value",
          "status": "PASS",
          "message": null
        },
        {
          "name": "DeviceProximityEvent interface: attribute min",
          "status": "PASS",
          "message": null
        },
        {
          "name": "DeviceProximityEvent interface: attribute max",
          "status": "PASS",
          "message": null
        },
        {
          "name": "DeviceProximityEvent must be primary interface of new DeviceProximityEvent(\"foo\")",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Stringification of new DeviceProximityEvent(\"foo\")",
          "status": "PASS",
          "message": null
        },
        {
          "name": "DeviceProximityEvent interface: new DeviceProximityEvent(\"foo\") must inherit property \"value\" with the proper type (0)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "DeviceProximityEvent interface: new DeviceProximityEvent(\"foo\") must inherit property \"min\" with the proper type (1)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "DeviceProximityEvent interface: new DeviceProximityEvent(\"foo\") must inherit property \"max\" with the proper type (2)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "UserProximityEvent interface: existence and properties of interface object",
          "status": "FAIL",
          "message": "assert_equals: prototype of window's property \"UserProximityEvent\" is not Function.prototype expected function \"function () {\n}\" but got function \"function Event() {\n    [native code]\n}\""
        },
        {
          "name": "UserProximityEvent interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "UserProximityEvent interface: existence and properties of interface prototype object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "UserProximityEvent interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "UserProximityEvent interface: attribute near",
          "status": "PASS",
          "message": null
        },
        {
          "name": "UserProximityEvent must be primary interface of new UserProximityEvent(\"foo\")",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Stringification of new UserProximityEvent(\"foo\")",
          "status": "PASS",
          "message": null
        },
        {
          "name": "UserProximityEvent interface: new UserProximityEvent(\"foo\") must inherit property \"near\" with the proper type (0)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}