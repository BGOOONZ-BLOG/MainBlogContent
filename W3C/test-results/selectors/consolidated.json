{
  "ua": [
    "UC10"
  ],
  "results": {
    "/selectors-api/tests/submissions/Opera/level2-baseline.html": {
      "byUA": {
        "UC10": "ERROR"
      },
      "totals": {
        "ERROR": 1
      },
      "subtests": {
        "Document supports find": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document supports findAll": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element supports find": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element supports findAll": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element supports matches": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment supports find": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment supports findAll": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element supports find": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element supports findAll": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element supports matches": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll null": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll undefined": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll no parameter": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "Document.find null": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find undefined": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find no parameter.": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "Document.findAll tree order": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll null": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll undefined": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll no parameter": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "Detached Element.find null": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find undefined": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find no parameter.": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "Detached Element.findAll tree order": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll null": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll undefined": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll no parameter": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "Fragment.find null": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find undefined": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find no parameter.": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "Fragment.findAll tree order": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll null": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll undefined": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll no parameter": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "In-document Element.find null": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find undefined": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find no parameter.": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "In-document Element.findAll tree order": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "DIV Element.matches(null)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "DIV Element.matches(undefined)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "DIV Element.matches no parameter": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "NULL Element.matches(null)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "NULL Element.matches(undefined)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "NULL Element.matches no parameter": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "UNDEFINED Element.matches(null)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "UNDEFINED Element.matches(undefined)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "UNDEFINED Element.matches no parameter": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "Document: static NodeList": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document: new NodeList": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element: static NodeList": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element: new NodeList": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment: static NodeList": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment: new NodeList": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element: static NodeList": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element: new NodeList": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Empty String: ": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Empty String: ": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid character: [": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid character: [": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid character: ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid character: ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid character: (": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid character: (": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid character: )": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid character: )": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid character: {": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid character: {": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid character: }": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid character: }": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid character: <": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid character: <": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid character: >": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid character: >": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid ID: #": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid ID: #": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid group of selectors: div,": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid group of selectors: div,": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid class: .": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid class: .": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid class: .5cm": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid class: .5cm": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid class: ..test": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid class: ..test": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid class: .foo..quux": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid class: .foo..quux": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid class: .bar.": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid class: .bar.": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid combinator: div & address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid combinator: div & address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid combinator: div >> address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid combinator: div >> address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid combinator: div ++ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid combinator: div ++ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid combinator: div ~~ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid combinator: div ~~ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid [att=value] selector: [*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid [att=value] selector: [*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid [att=value] selector: [*|*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid [att=value] selector: [*|*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid [att=value] selector: [class= space unquoted ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid [att=value] selector: [class= space unquoted ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Unknown pseudo-class: div:example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Unknown pseudo-class: div:example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Unknown pseudo-class: :example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Unknown pseudo-class: :example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Unknown pseudo-element: div::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Unknown pseudo-element: div::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Unknown pseudo-element: ::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Unknown pseudo-element: ::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid pseudo-element: :::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid pseudo-element: :::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Undeclared namespace: ns|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Undeclared namespace: ns|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Undeclared namespace: :not(ns|div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Undeclared namespace: :not(ns|div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid namespace: ^|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid namespace: ^|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.find: Invalid namespace: $|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Document.findAll: Invalid namespace: $|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Empty String: ": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Empty String: ": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Empty String: ": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid character: [": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid character: [": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid character: [": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid character: ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid character: ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid character: ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid character: (": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid character: (": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid character: (": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid character: )": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid character: )": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid character: )": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid character: {": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid character: {": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid character: {": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid character: }": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid character: }": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid character: }": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid character: <": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid character: <": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid character: <": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid character: >": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid character: >": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid character: >": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid ID: #": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid ID: #": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid ID: #": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid group of selectors: div,": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid group of selectors: div,": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid group of selectors: div,": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid class: .": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid class: .": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid class: .": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid class: .5cm": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid class: .5cm": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid class: .5cm": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid class: ..test": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid class: ..test": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid class: ..test": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid class: .foo..quux": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid class: .foo..quux": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid class: .foo..quux": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid class: .bar.": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid class: .bar.": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid class: .bar.": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid combinator: div & address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid combinator: div & address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid combinator: div & address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid combinator: div >> address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid combinator: div >> address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid combinator: div >> address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid combinator: div ++ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid combinator: div ++ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid combinator: div ++ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid combinator: div ~~ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid combinator: div ~~ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid combinator: div ~~ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid [att=value] selector: [*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid [att=value] selector: [*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid [att=value] selector: [*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid [att=value] selector: [*|*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid [att=value] selector: [*|*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid [att=value] selector: [*|*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid [att=value] selector: [class= space unquoted ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid [att=value] selector: [class= space unquoted ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid [att=value] selector: [class= space unquoted ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Unknown pseudo-class: div:example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Unknown pseudo-class: div:example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Unknown pseudo-class: div:example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Unknown pseudo-class: :example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Unknown pseudo-class: :example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Unknown pseudo-class: :example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Unknown pseudo-element: div::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Unknown pseudo-element: div::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Unknown pseudo-element: div::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Unknown pseudo-element: ::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Unknown pseudo-element: ::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Unknown pseudo-element: ::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid pseudo-element: :::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid pseudo-element: :::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid pseudo-element: :::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Undeclared namespace: ns|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Undeclared namespace: ns|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Undeclared namespace: ns|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Undeclared namespace: :not(ns|div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Undeclared namespace: :not(ns|div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Undeclared namespace: :not(ns|div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid namespace: ^|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid namespace: ^|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid namespace: ^|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.find: Invalid namespace: $|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.findAll: Invalid namespace: $|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Invalid namespace: $|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Empty String: ": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Empty String: ": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid character: [": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid character: [": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid character: ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid character: ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid character: (": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid character: (": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid character: )": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid character: )": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid character: {": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid character: {": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid character: }": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid character: }": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid character: <": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid character: <": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid character: >": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid character: >": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid ID: #": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid ID: #": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid group of selectors: div,": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid group of selectors: div,": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid class: .": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid class: .": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid class: .5cm": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid class: .5cm": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid class: ..test": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid class: ..test": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid class: .foo..quux": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid class: .foo..quux": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid class: .bar.": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid class: .bar.": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid combinator: div & address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid combinator: div & address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid combinator: div >> address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid combinator: div >> address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid combinator: div ++ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid combinator: div ++ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid combinator: div ~~ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid combinator: div ~~ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid [att=value] selector: [*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid [att=value] selector: [*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid [att=value] selector: [*|*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid [att=value] selector: [*|*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid [att=value] selector: [class= space unquoted ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid [att=value] selector: [class= space unquoted ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Unknown pseudo-class: div:example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Unknown pseudo-class: div:example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Unknown pseudo-class: :example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Unknown pseudo-class: :example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Unknown pseudo-element: div::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Unknown pseudo-element: div::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Unknown pseudo-element: ::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Unknown pseudo-element: ::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid pseudo-element: :::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid pseudo-element: :::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Undeclared namespace: ns|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Undeclared namespace: ns|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Undeclared namespace: :not(ns|div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Undeclared namespace: :not(ns|div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid namespace: ^|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid namespace: ^|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.find: Invalid namespace: $|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment.findAll: Invalid namespace: $|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Empty String: ": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Empty String: ": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Empty String: ": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid character: [": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid character: [": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid character: [": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid character: ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid character: ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid character: ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid character: (": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid character: (": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid character: (": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid character: )": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid character: )": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid character: )": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid character: {": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid character: {": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid character: {": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid character: }": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid character: }": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid character: }": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid character: <": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid character: <": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid character: <": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid character: >": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid character: >": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid character: >": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid ID: #": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid ID: #": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid ID: #": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid group of selectors: div,": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid group of selectors: div,": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid group of selectors: div,": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid class: .": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid class: .": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid class: .": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid class: .5cm": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid class: .5cm": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid class: .5cm": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid class: ..test": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid class: ..test": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid class: ..test": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid class: .foo..quux": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid class: .foo..quux": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid class: .foo..quux": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid class: .bar.": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid class: .bar.": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid class: .bar.": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid combinator: div & address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid combinator: div & address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid combinator: div & address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid combinator: div >> address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid combinator: div >> address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid combinator: div >> address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid combinator: div ++ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid combinator: div ++ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid combinator: div ++ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid combinator: div ~~ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid combinator: div ~~ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid combinator: div ~~ address, p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid [att=value] selector: [*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid [att=value] selector: [*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid [att=value] selector: [*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid [att=value] selector: [*|*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid [att=value] selector: [*|*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid [att=value] selector: [*|*=test]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid [att=value] selector: [class= space unquoted ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid [att=value] selector: [class= space unquoted ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid [att=value] selector: [class= space unquoted ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Unknown pseudo-class: div:example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Unknown pseudo-class: div:example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Unknown pseudo-class: div:example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Unknown pseudo-class: :example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Unknown pseudo-class: :example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Unknown pseudo-class: :example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Unknown pseudo-element: div::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Unknown pseudo-element: div::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Unknown pseudo-element: div::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Unknown pseudo-element: ::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Unknown pseudo-element: ::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Unknown pseudo-element: ::example": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid pseudo-element: :::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid pseudo-element: :::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid pseudo-element: :::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Undeclared namespace: ns|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Undeclared namespace: ns|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Undeclared namespace: ns|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Undeclared namespace: :not(ns|div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Undeclared namespace: :not(ns|div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Undeclared namespace: :not(ns|div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid namespace: ^|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid namespace: ^|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid namespace: ^|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.find: Invalid namespace: $|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.findAll: Invalid namespace: $|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Invalid namespace: $|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Type selector, matching html element (with no refNodes): html": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Type selector, matching body element (with no refNodes): body": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Universal selector, matching all children of element with specified ID (with no refNodes): #universal>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Universal selector, matching all grandchildren of element with specified ID (with no refNodes): #universal>*>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Universal selector, matching all descendants of element with specified ID (with no refNodes): #universal *": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching align attribute with value (with no refNodes): .attr-presence-div1[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching align attribute with empty value (with no refNodes): .attr-presence-div2[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching title attribute, case insensitivity (with no refNodes): #attr-presence [TiTlE]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching custom data-* attribute (with no refNodes): [data-attr-presence]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching attribute with non-ASCII characters (with no refNodes): ul[data-中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching option with selected attribute (with no refNodes): #attr-presence-select2 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching multiple options with selected attributes (with no refNodes): #attr-presence-select3 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector, matching align attribute with value (with no refNodes): #attr-value [align=\"center\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector, matching align attribute with empty value (with no refNodes): #attr-value [align=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-value=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-value_foo=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type='hidden'],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=\"hidden\"],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=hidden],#attr-value input[type=radio]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector, matching attribute with value using non-ASCII characters (with no refNodes): [data-attr-value=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector, matching class attribute with value (with no refNodes): #attr-whitespace [class~=\"div1\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-whitespace~=\"\\0000e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-whitespace_foo~=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with no refNodes): #attr-whitespace [title~=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute hyphen-separated list selector, matching lang attribute with exact value (with no refNodes): #attr-hyphen-div2[lang|=\"fr\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute hyphen-separated list selector, matching lang attribute with partial value (with no refNodes): #attr-hyphen-div3[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute begins with selector, matching href attributes beginning with specified substring (with no refNodes): #attr-begins a[href^=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-begins [lang^=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute ends with selector, matching href attributes ending with specified substring (with no refNodes): #attr-ends a[href$=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute ends with selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-ends [lang$=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$='apple ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$=\"apple \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector, matching href attributes beginning with specified substring (with no refNodes): #attr-contains a[href*=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector, matching href attributes ending with specified substring (with no refNodes): #attr-contains a[href*=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector, matching href attributes containing specified substring (with no refNodes): #attr-contains a[href*=\".example.\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-contains [lang*=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-contains [lang*=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*='orange ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*='ple banana ora']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=\"orange \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*=\"ple banana ora\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=orange ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*= banana ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :root pseudo-class selector, matching document root element (with no refNodes): :root": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-child selector, matching the third child element (with no refNodes): #pseudo-nth-table1 :nth-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-child selector, matching every third child element (with no refNodes): #pseudo-nth li:nth-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-child selector, matching every second child element, starting from the fourth (with no refNodes): #pseudo-nth li:nth-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-child selector, matching every fourth child element, starting from the third (with no refNodes): #pseudo-nth-p1 :nth-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-child selector, matching the third last child element (with no refNodes): #pseudo-nth-table1 :nth-last-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-child selector, matching every third child element from the end (with no refNodes): #pseudo-nth li:nth-last-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with no refNodes): #pseudo-nth li:nth-last-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with no refNodes): #pseudo-nth-p1 :nth-last-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-of-type selector, matching the third em element (with no refNodes): #pseudo-nth-p1 em:nth-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-of-type selector, matching every second element of their type (with no refNodes): #pseudo-nth-p1 :nth-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with no refNodes): #pseudo-nth-p1 span:nth-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-of-type selector, matching the thrid last em element (with no refNodes): #pseudo-nth-p1 em:nth-last-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-of-type selector, matching every second last element of their type (with no refNodes): #pseudo-nth-p1 :nth-last-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with no refNodes): #pseudo-nth-p1 span:nth-last-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :first-of-type selector, matching the first em element (with no refNodes): #pseudo-nth-p1 em:first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :first-of-type selector, matching the first of every type of element (with no refNodes): #pseudo-nth-p1 :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :first-of-type selector, matching the first td element in each table row (with no refNodes): #pseudo-nth-table1 tr :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :last-of-type selector, matching the last em elemnet (with no refNodes): #pseudo-nth-p1 em:last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :last-of-type selector, matching the last of every type of element (with no refNodes): #pseudo-nth-p1 :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :last-of-type selector, matching the last td element in each table row (with no refNodes): #pseudo-nth-table1 tr :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :first-child pseudo-class selector, matching first child div element (with no refNodes): #pseudo-first-child div:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :first-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-first-child span:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :last-child pseudo-class selector, matching last child div element (with no refNodes): #pseudo-last-child div:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :last-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-last-child span:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :pseudo-only-child pseudo-class selector, matching all only-child elements (with no refNodes): #pseudo-only :only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with no refNodes): #pseudo-only :only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with no refNodes): #pseudo-only em:only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :empty pseudo-class selector, matching empty p elements (with no refNodes): #pseudo-empty p:empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :empty pseudo-class selector, matching all empty elements (with no refNodes): #pseudo-empty :empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with no refNodes): #pseudo-link :link, #pseudo-link :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :link and :visited pseudo-class selectors, matching link elements with href attributes (with no refNodes): #head :link, #head :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :target pseudo-class selector, matching the element referenced by the URL fragment identifier (with no refNodes): :target": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :lang pseudo-class selector, matching inherited language (with no refNodes): #pseudo-lang-div1:lang(en)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :lang pseudo-class selector, matching specified language with exact value (with no refNodes): #pseudo-lang-div2:lang(fr)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :lang pseudo-class selector, matching specified language with partial value (with no refNodes): #pseudo-lang-div3:lang(en)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :enabled pseudo-class selector, matching all enabled form controls (with no refNodes): #pseudo-ui :enabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :enabled pseudo-class selector, matching all disabled form controls (with no refNodes): #pseudo-ui :disabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :checked pseudo-class selector, matching checked radio buttons and checkboxes (with no refNodes): #pseudo-ui :checked": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not>:not(div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not * :not(:first-child)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class selector, matching element with specified class (with no refNodes): .class-p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class selector, chained, matching only elements with all specified classes (with no refNodes): #class .apple.orange.banana": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class Selector, chained, with type selector (with no refNodes): div.apple.banana.orange": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class selector, matching element with class value using non-ASCII characters (with no refNodes): .台北Táiběi": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "In-document Element.matches: Class selector, matching multiple elements with class value using non-ASCII characters (with no refNodes): .台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class selector, chained, matching element with multiple class values using non-ASCII characters (with no refNodes): .台北Táiběi.台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "In-document Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .foo\\:bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .test\\.foo\\[5\\]bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, matching element with specified id (with no refNodes): #id #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID Selector, chained, with type selector (with no refNodes): div#id-div1, div#id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, matching multiple elements with duplicate id (with no refNodes): #id-li-duplicate": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, matching id value using non-ASCII characters (with no refNodes): #台北Táiběi": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "In-document Element.matches: ID selector, matching id value using non-ASCII characters (with no refNodes): #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, matching id values using non-ASCII characters (with no refNodes): #台北Táiběi, #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "In-document Element.matches: Descendant combinator, matching element that is a descendant of an element with id (with no refNodes): #descendant div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): body #descendant-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): div #descendant-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element with id (with no refNodes): #descendant #descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element with class that is a descendant of an element with id (with no refNodes): #descendant .descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element with class that is a descendant of an element with class (with no refNodes): .descendant-div1 .descendant-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, whitespace characters (with no refNodes): #descendant\t\r\n#descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, matching element that is a child of an element with id (with no refNodes): #child>div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, matching element with id that is a child of an element (with no refNodes): div>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, matching element with id that is a child of an element with id (with no refNodes): #child>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, matching element with id that is a child of an element with class (with no refNodes): #child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, matching element with class that is a child of an element with class (with no refNodes): .child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, surrounded by whitespace (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, whitespace after (with no refNodes): #child-div1>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, whitespace before (with no refNodes): #child-div1\t\r\n>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, no whitespace (with no refNodes): #child-div1>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (with no refNodes): div+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (with no refNodes): .adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (with no refNodes): #adjacent div+p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, surrounded by whitespace (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, whitespace after (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, whitespace before (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, no whitespace (with no refNodes): #adjacent-p2+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, matching element that is a sibling of an element with id (with no refNodes): #sibling-div2~div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, matching element with id that is a sibling of an element (with no refNodes): div~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, matching element with id that is a sibling of an element with id (with no refNodes): #sibling-div2~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, matching element with class that is a sibling of an element with id (with no refNodes): #sibling-div2~.sibling-div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, matching p element that is a sibling of a div element (with no refNodes): #sibling div~p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, surrounded by whitespace (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, whitespace after (with no refNodes): #sibling-p2~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, whitespace before (with no refNodes): #sibling-p2\t\r\n~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, no whitespace (with no refNodes): #sibling-p2~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Syntax, group of selectors separator, surrounded by whitespace (with no refNodes): #group em\t\r \n,\t\r \n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Syntax, group of selectors separator, whitespace after (with no refNodes): #group em,\t\r\n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Syntax, group of selectors separator, whitespace before (with no refNodes): #group em\t\r\n,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Syntax, group of selectors separator, no whitespace (with no refNodes): #group em,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Universal selector, matching all children of element with specified ID (with no refNodes): #universal>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Universal selector, matching all grandchildren of element with specified ID (with no refNodes): #universal>*>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Universal selector, matching all descendants of element with specified ID (with no refNodes): #universal *": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute presence selector, matching align attribute with value (with no refNodes): .attr-presence-div1[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute presence selector, matching align attribute with empty value (with no refNodes): .attr-presence-div2[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute presence selector, matching title attribute, case insensitivity (with no refNodes): #attr-presence [TiTlE]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute presence selector, matching custom data-* attribute (with no refNodes): [data-attr-presence]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute presence selector, matching attribute with non-ASCII characters (with no refNodes): ul[data-中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute presence selector, matching option with selected attribute (with no refNodes): #attr-presence-select2 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute presence selector, matching multiple options with selected attributes (with no refNodes): #attr-presence-select3 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute value selector, matching align attribute with value (with no refNodes): #attr-value [align=\"center\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute value selector, matching align attribute with empty value (with no refNodes): #attr-value [align=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute value selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-value=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute value selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-value_foo=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type='hidden'],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=\"hidden\"],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=hidden],#attr-value input[type=radio]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute value selector, matching attribute with value using non-ASCII characters (with no refNodes): [data-attr-value=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute whitespace-separated list selector, matching class attribute with value (with no refNodes): #attr-whitespace [class~=\"div1\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-whitespace~=\"\\0000e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-whitespace_foo~=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with no refNodes): #attr-whitespace [title~=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute hyphen-separated list selector, matching lang attribute with exact value (with no refNodes): #attr-hyphen-div2[lang|=\"fr\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute hyphen-separated list selector, matching lang attribute with partial value (with no refNodes): #attr-hyphen-div3[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute begins with selector, matching href attributes beginning with specified substring (with no refNodes): #attr-begins a[href^=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-begins [lang^=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute ends with selector, matching href attributes ending with specified substring (with no refNodes): #attr-ends a[href$=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute ends with selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-ends [lang$=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$='apple ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$=\"apple \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector, matching href attributes beginning with specified substring (with no refNodes): #attr-contains a[href*=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector, matching href attributes ending with specified substring (with no refNodes): #attr-contains a[href*=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector, matching href attributes containing specified substring (with no refNodes): #attr-contains a[href*=\".example.\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-contains [lang*=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-contains [lang*=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*='orange ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*='ple banana ora']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=\"orange \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*=\"ple banana ora\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=orange ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*= banana ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-child selector, matching the third child element (with no refNodes): #pseudo-nth-table1 :nth-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-child selector, matching every third child element (with no refNodes): #pseudo-nth li:nth-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-child selector, matching every second child element, starting from the fourth (with no refNodes): #pseudo-nth li:nth-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-child selector, matching every fourth child element, starting from the third (with no refNodes): #pseudo-nth-p1 :nth-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-last-child selector, matching the third last child element (with no refNodes): #pseudo-nth-table1 :nth-last-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-last-child selector, matching every third child element from the end (with no refNodes): #pseudo-nth li:nth-last-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with no refNodes): #pseudo-nth li:nth-last-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with no refNodes): #pseudo-nth-p1 :nth-last-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-of-type selector, matching the third em element (with no refNodes): #pseudo-nth-p1 em:nth-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-of-type selector, matching every second element of their type (with no refNodes): #pseudo-nth-p1 :nth-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with no refNodes): #pseudo-nth-p1 span:nth-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-last-of-type selector, matching the thrid last em element (with no refNodes): #pseudo-nth-p1 em:nth-last-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-last-of-type selector, matching every second last element of their type (with no refNodes): #pseudo-nth-p1 :nth-last-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with no refNodes): #pseudo-nth-p1 span:nth-last-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :first-of-type selector, matching the first em element (with no refNodes): #pseudo-nth-p1 em:first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :first-of-type selector, matching the first of every type of element (with no refNodes): #pseudo-nth-p1 :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :first-of-type selector, matching the first td element in each table row (with no refNodes): #pseudo-nth-table1 tr :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :last-of-type selector, matching the last em elemnet (with no refNodes): #pseudo-nth-p1 em:last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :last-of-type selector, matching the last of every type of element (with no refNodes): #pseudo-nth-p1 :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :last-of-type selector, matching the last td element in each table row (with no refNodes): #pseudo-nth-table1 tr :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :first-child pseudo-class selector, matching first child div element (with no refNodes): #pseudo-first-child div:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :first-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-first-child span:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :last-child pseudo-class selector, matching last child div element (with no refNodes): #pseudo-last-child div:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :last-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-last-child span:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :pseudo-only-child pseudo-class selector, matching all only-child elements (with no refNodes): #pseudo-only :only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with no refNodes): #pseudo-only :only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with no refNodes): #pseudo-only em:only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :empty pseudo-class selector, matching empty p elements (with no refNodes): #pseudo-empty p:empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :empty pseudo-class selector, matching all empty elements (with no refNodes): #pseudo-empty :empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with no refNodes): #pseudo-link :link, #pseudo-link :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :lang pseudo-class selector, matching specified language with exact value (with no refNodes): #pseudo-lang-div2:lang(fr)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :lang pseudo-class selector, matching specified language with partial value (with no refNodes): #pseudo-lang-div3:lang(en)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :enabled pseudo-class selector, matching all enabled form controls (with no refNodes): #pseudo-ui :enabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :enabled pseudo-class selector, matching all disabled form controls (with no refNodes): #pseudo-ui :disabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :checked pseudo-class selector, matching checked radio buttons and checkboxes (with no refNodes): #pseudo-ui :checked": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not>:not(div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not * :not(:first-child)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Class selector, matching element with specified class (with no refNodes): .class-p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Class selector, chained, matching only elements with all specified classes (with no refNodes): #class .apple.orange.banana": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Class Selector, chained, with type selector (with no refNodes): div.apple.banana.orange": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Class selector, matching element with class value using non-ASCII characters (with no refNodes): .台北Táiběi": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Class selector, matching multiple elements with class value using non-ASCII characters (with no refNodes): .台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Class selector, chained, matching element with multiple class values using non-ASCII characters (with no refNodes): .台北Táiběi.台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .foo\\:bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .test\\.foo\\[5\\]bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: ID selector, matching element with specified id (with no refNodes): #id #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: ID Selector, chained, with type selector (with no refNodes): div#id-div1, div#id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: ID selector, matching multiple elements with duplicate id (with no refNodes): #id-li-duplicate": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: ID selector, matching id value using non-ASCII characters (with no refNodes): #台北Táiběi": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: ID selector, matching id value using non-ASCII characters (with no refNodes): #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: ID selector, matching id values using non-ASCII characters (with no refNodes): #台北Táiběi, #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Descendant combinator, matching element that is a descendant of an element with id (with no refNodes): #descendant div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): div #descendant-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Descendant combinator, matching element with id that is a descendant of an element with id (with no refNodes): #descendant #descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Descendant combinator, matching element with class that is a descendant of an element with id (with no refNodes): #descendant .descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Descendant combinator, matching element with class that is a descendant of an element with class (with no refNodes): .descendant-div1 .descendant-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Descendant combinator, whitespace characters (with no refNodes): #descendant\t\r\n#descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Child combinator, matching element that is a child of an element with id (with no refNodes): #child>div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Child combinator, matching element with id that is a child of an element (with no refNodes): div>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Child combinator, matching element with id that is a child of an element with id (with no refNodes): #child>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Child combinator, matching element with id that is a child of an element with class (with no refNodes): #child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Child combinator, matching element with class that is a child of an element with class (with no refNodes): .child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Child combinator, surrounded by whitespace (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Child combinator, whitespace after (with no refNodes): #child-div1>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Child combinator, whitespace before (with no refNodes): #child-div1\t\r\n>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Child combinator, no whitespace (with no refNodes): #child-div1>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (with no refNodes): div+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (with no refNodes): .adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (with no refNodes): #adjacent div+p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Adjacent sibling combinator, surrounded by whitespace (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Adjacent sibling combinator, whitespace after (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Adjacent sibling combinator, whitespace before (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Adjacent sibling combinator, no whitespace (with no refNodes): #adjacent-p2+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: General sibling combinator, matching element that is a sibling of an element with id (with no refNodes): #sibling-div2~div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: General sibling combinator, matching element with id that is a sibling of an element (with no refNodes): div~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: General sibling combinator, matching element with id that is a sibling of an element with id (with no refNodes): #sibling-div2~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: General sibling combinator, matching element with class that is a sibling of an element with id (with no refNodes): #sibling-div2~.sibling-div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: General sibling combinator, matching p element that is a sibling of a div element (with no refNodes): #sibling div~p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: General sibling combinator, surrounded by whitespace (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: General sibling combinator, whitespace after (with no refNodes): #sibling-p2~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: General sibling combinator, whitespace before (with no refNodes): #sibling-p2\t\r\n~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: General sibling combinator, no whitespace (with no refNodes): #sibling-p2~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Syntax, group of selectors separator, surrounded by whitespace (with no refNodes): #group em\t\r \n,\t\r \n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Syntax, group of selectors separator, whitespace after (with no refNodes): #group em,\t\r\n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Syntax, group of selectors separator, whitespace before (with no refNodes): #group em\t\r\n,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Detached Element.matches: Syntax, group of selectors separator, no whitespace (with no refNodes): #group em,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Universal selector, matching all children of element with specified ID (with no refNodes): #universal>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Universal selector, matching all grandchildren of element with specified ID (with no refNodes): #universal>*>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Universal selector, matching all descendants of element with specified ID (with no refNodes): #universal *": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute presence selector, matching align attribute with value (with no refNodes): .attr-presence-div1[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute presence selector, matching align attribute with empty value (with no refNodes): .attr-presence-div2[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute presence selector, matching title attribute, case insensitivity (with no refNodes): #attr-presence [TiTlE]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute presence selector, matching custom data-* attribute (with no refNodes): [data-attr-presence]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute presence selector, matching attribute with non-ASCII characters (with no refNodes): ul[data-中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute presence selector, matching option with selected attribute (with no refNodes): #attr-presence-select2 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute presence selector, matching multiple options with selected attributes (with no refNodes): #attr-presence-select3 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute value selector, matching align attribute with value (with no refNodes): #attr-value [align=\"center\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute value selector, matching align attribute with empty value (with no refNodes): #attr-value [align=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute value selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-value=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute value selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-value_foo=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type='hidden'],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=\"hidden\"],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=hidden],#attr-value input[type=radio]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute value selector, matching attribute with value using non-ASCII characters (with no refNodes): [data-attr-value=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute whitespace-separated list selector, matching class attribute with value (with no refNodes): #attr-whitespace [class~=\"div1\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-whitespace~=\"\\0000e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-whitespace_foo~=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with no refNodes): #attr-whitespace [title~=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute hyphen-separated list selector, matching lang attribute with exact value (with no refNodes): #attr-hyphen-div2[lang|=\"fr\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute hyphen-separated list selector, matching lang attribute with partial value (with no refNodes): #attr-hyphen-div3[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute begins with selector, matching href attributes beginning with specified substring (with no refNodes): #attr-begins a[href^=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-begins [lang^=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute ends with selector, matching href attributes ending with specified substring (with no refNodes): #attr-ends a[href$=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute ends with selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-ends [lang$=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$='apple ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$=\"apple \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector, matching href attributes beginning with specified substring (with no refNodes): #attr-contains a[href*=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector, matching href attributes ending with specified substring (with no refNodes): #attr-contains a[href*=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector, matching href attributes containing specified substring (with no refNodes): #attr-contains a[href*=\".example.\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-contains [lang*=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-contains [lang*=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*='orange ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*='ple banana ora']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=\"orange \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*=\"ple banana ora\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=orange ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*= banana ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-child selector, matching the third child element (with no refNodes): #pseudo-nth-table1 :nth-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-child selector, matching every third child element (with no refNodes): #pseudo-nth li:nth-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-child selector, matching every second child element, starting from the fourth (with no refNodes): #pseudo-nth li:nth-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-child selector, matching every fourth child element, starting from the third (with no refNodes): #pseudo-nth-p1 :nth-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-last-child selector, matching the third last child element (with no refNodes): #pseudo-nth-table1 :nth-last-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-last-child selector, matching every third child element from the end (with no refNodes): #pseudo-nth li:nth-last-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with no refNodes): #pseudo-nth li:nth-last-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with no refNodes): #pseudo-nth-p1 :nth-last-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-of-type selector, matching the third em element (with no refNodes): #pseudo-nth-p1 em:nth-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-of-type selector, matching every second element of their type (with no refNodes): #pseudo-nth-p1 :nth-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with no refNodes): #pseudo-nth-p1 span:nth-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-last-of-type selector, matching the thrid last em element (with no refNodes): #pseudo-nth-p1 em:nth-last-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-last-of-type selector, matching every second last element of their type (with no refNodes): #pseudo-nth-p1 :nth-last-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with no refNodes): #pseudo-nth-p1 span:nth-last-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :first-of-type selector, matching the first em element (with no refNodes): #pseudo-nth-p1 em:first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :first-of-type selector, matching the first of every type of element (with no refNodes): #pseudo-nth-p1 :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :first-of-type selector, matching the first td element in each table row (with no refNodes): #pseudo-nth-table1 tr :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :last-of-type selector, matching the last em elemnet (with no refNodes): #pseudo-nth-p1 em:last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :last-of-type selector, matching the last of every type of element (with no refNodes): #pseudo-nth-p1 :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :last-of-type selector, matching the last td element in each table row (with no refNodes): #pseudo-nth-table1 tr :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :first-child pseudo-class selector, matching first child div element (with no refNodes): #pseudo-first-child div:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :first-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-first-child span:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :last-child pseudo-class selector, matching last child div element (with no refNodes): #pseudo-last-child div:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :last-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-last-child span:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :pseudo-only-child pseudo-class selector, matching all only-child elements (with no refNodes): #pseudo-only :only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with no refNodes): #pseudo-only :only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with no refNodes): #pseudo-only em:only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :empty pseudo-class selector, matching empty p elements (with no refNodes): #pseudo-empty p:empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :empty pseudo-class selector, matching all empty elements (with no refNodes): #pseudo-empty :empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with no refNodes): #pseudo-link :link, #pseudo-link :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :lang pseudo-class selector, matching specified language with exact value (with no refNodes): #pseudo-lang-div2:lang(fr)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :lang pseudo-class selector, matching specified language with partial value (with no refNodes): #pseudo-lang-div3:lang(en)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :enabled pseudo-class selector, matching all enabled form controls (with no refNodes): #pseudo-ui :enabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :enabled pseudo-class selector, matching all disabled form controls (with no refNodes): #pseudo-ui :disabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :checked pseudo-class selector, matching checked radio buttons and checkboxes (with no refNodes): #pseudo-ui :checked": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not>:not(div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not * :not(:first-child)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Class selector, matching element with specified class (with no refNodes): .class-p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Class selector, chained, matching only elements with all specified classes (with no refNodes): #class .apple.orange.banana": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Class Selector, chained, with type selector (with no refNodes): div.apple.banana.orange": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Class selector, matching element with class value using non-ASCII characters (with no refNodes): .台北Táiběi": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Class selector, matching multiple elements with class value using non-ASCII characters (with no refNodes): .台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Class selector, chained, matching element with multiple class values using non-ASCII characters (with no refNodes): .台北Táiběi.台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .foo\\:bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .test\\.foo\\[5\\]bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: ID selector, matching element with specified id (with no refNodes): #id #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: ID Selector, chained, with type selector (with no refNodes): div#id-div1, div#id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: ID selector, matching multiple elements with duplicate id (with no refNodes): #id-li-duplicate": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: ID selector, matching id value using non-ASCII characters (with no refNodes): #台北Táiběi": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: ID selector, matching id value using non-ASCII characters (with no refNodes): #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: ID selector, matching id values using non-ASCII characters (with no refNodes): #台北Táiběi, #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Descendant combinator, matching element that is a descendant of an element with id (with no refNodes): #descendant div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): div #descendant-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Descendant combinator, matching element with id that is a descendant of an element with id (with no refNodes): #descendant #descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Descendant combinator, matching element with class that is a descendant of an element with id (with no refNodes): #descendant .descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Descendant combinator, matching element with class that is a descendant of an element with class (with no refNodes): .descendant-div1 .descendant-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Descendant combinator, whitespace characters (with no refNodes): #descendant\t\r\n#descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Child combinator, matching element that is a child of an element with id (with no refNodes): #child>div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Child combinator, matching element with id that is a child of an element (with no refNodes): div>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Child combinator, matching element with id that is a child of an element with id (with no refNodes): #child>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Child combinator, matching element with id that is a child of an element with class (with no refNodes): #child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Child combinator, matching element with class that is a child of an element with class (with no refNodes): .child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Child combinator, surrounded by whitespace (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Child combinator, whitespace after (with no refNodes): #child-div1>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Child combinator, whitespace before (with no refNodes): #child-div1\t\r\n>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Child combinator, no whitespace (with no refNodes): #child-div1>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (with no refNodes): div+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (with no refNodes): .adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (with no refNodes): #adjacent div+p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Adjacent sibling combinator, surrounded by whitespace (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Adjacent sibling combinator, whitespace after (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Adjacent sibling combinator, whitespace before (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Adjacent sibling combinator, no whitespace (with no refNodes): #adjacent-p2+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: General sibling combinator, matching element that is a sibling of an element with id (with no refNodes): #sibling-div2~div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: General sibling combinator, matching element with id that is a sibling of an element (with no refNodes): div~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: General sibling combinator, matching element with id that is a sibling of an element with id (with no refNodes): #sibling-div2~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: General sibling combinator, matching element with class that is a sibling of an element with id (with no refNodes): #sibling-div2~.sibling-div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: General sibling combinator, matching p element that is a sibling of a div element (with no refNodes): #sibling div~p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: General sibling combinator, surrounded by whitespace (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: General sibling combinator, whitespace after (with no refNodes): #sibling-p2~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: General sibling combinator, whitespace before (with no refNodes): #sibling-p2\t\r\n~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: General sibling combinator, no whitespace (with no refNodes): #sibling-p2~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Syntax, group of selectors separator, surrounded by whitespace (with no refNodes): #group em\t\r \n,\t\r \n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Syntax, group of selectors separator, whitespace after (with no refNodes): #group em,\t\r\n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Syntax, group of selectors separator, whitespace before (with no refNodes): #group em\t\r\n,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "Fragment Element.matches: Syntax, group of selectors separator, no whitespace (with no refNodes): #group em,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Universal selector, matching all children of the specified reference element (with refNode Element): >*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Universal selector, matching all grandchildren of the specified reference element (with refNode Element): >*>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Universal selector, matching all descendants of the specified reference element (with refNode Element): *": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching align attribute with value (with refNode Element): .attr-presence-div1[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching align attribute with empty value (with refNode Element): .attr-presence-div2[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching title attribute, case insensitivity (with refNode Element): [TiTlE]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching custom data-* attribute (with refNode Element): [data-attr-presence]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching attribute with non-ASCII characters (with refNode Element): ul[data-中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching option with selected attribute (with refNode Element): #attr-presence-select2 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute presence selector, matching multiple options with selected attributes (with refNode Element): #attr-presence-select3 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector, matching align attribute with value (with refNode Element): [align=\"center\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector, matching align attribute with empty value (with refNode Element): [align=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-value=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-value_foo=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type='hidden'],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type=\"hidden\"],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with refNode Element): input[type=hidden],#attr-value input[type=radio]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute value selector, matching attribute with value using non-ASCII characters (with refNode Element): [data-attr-value=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector, matching class attribute with value (with refNode Element): [class~=\"div1\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-whitespace~=\"\\0000e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-whitespace_foo~=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with refNode Element): [title~=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute hyphen-separated list selector, matching lang attribute with exact value (with refNode Element): #attr-hyphen-div2[lang|=\"fr\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute hyphen-separated list selector, matching lang attribute with partial value (with refNode Element): #attr-hyphen-div3[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute begins with selector, matching href attributes beginning with specified substring (with refNode Element): a[href^=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang^=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute ends with selector, matching href attributes ending with specified substring (with refNode Element): a[href$=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute ends with selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang$=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$='apple ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$=\"apple \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector, matching href attributes beginning with specified substring (with refNode Element): a[href*=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector, matching href attributes ending with specified substring (with refNode Element): a[href*=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector, matching href attributes containing specified substring (with refNode Element): a[href*=\".example.\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang*=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang*=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*='orange ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with refNode Element): [class*='ple banana ora']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*=\"orange \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with refNode Element): [class*=\"ple banana ora\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with refNode Element): [class*= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with refNode Element): [class*=orange ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with refNode Element): [class*= banana ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-child selector, matching the third child element (with refNode Element): :nth-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-child selector, matching every third child element (with refNode Element): li:nth-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-child selector, matching every second child element, starting from the fourth (with refNode Element): li:nth-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-child selector, matching every fourth child element, starting from the third (with refNode Element): :nth-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-child selector, matching the third last child element (with refNode Element): :nth-last-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-child selector, matching every third child element from the end (with refNode Element): li:nth-last-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with refNode Element): li:nth-last-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with refNode Element): :nth-last-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-of-type selector, matching the third em element (with refNode Element): em:nth-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-of-type selector, matching every second element of their type (with refNode Element): :nth-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with refNode Element): span:nth-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-of-type selector, matching the thrid last em element (with refNode Element): em:nth-last-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-of-type selector, matching every second last element of their type (with refNode Element): :nth-last-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with refNode Element): span:nth-last-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :first-of-type selector, matching the first em element (with refNode Element): em:first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :first-of-type selector, matching the first of every type of element (with refNode Element): :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :first-of-type selector, matching the first td element in each table row (with refNode Element): tr :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :last-of-type selector, matching the last em elemnet (with refNode Element): em:last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :last-of-type selector, matching the last of every type of element (with refNode Element): :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :last-of-type selector, matching the last td element in each table row (with refNode Element): tr :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :first-child pseudo-class selector, matching first child div element (with refNode Element): div:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :first-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :last-child pseudo-class selector, matching last child div element (with refNode Element): div:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :last-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :pseudo-only-child pseudo-class selector, matching all only-child elements (with refNode Element): :only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with refNode Element):  :only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with refNode Element):  em:only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :empty pseudo-class selector, matching empty p elements (with refNode Element): p:empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :empty pseudo-class selector, matching all empty elements (with refNode Element): :empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with refNode Element):  :link, #pseudo-link :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :link and :visited pseudo-class selectors, matching link elements with href attributes (with refNode Element):  :link, #head :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :lang pseudo-class selector, matching inherited language (1) (with no refNodes): #pseudo-lang-div1:lang(en)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :lang pseudo-class selector, matching specified language with exact value (1) (with no refNodes): #pseudo-lang-div2:lang(fr)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :lang pseudo-class selector, matching specified language with partial value (1) (with no refNodes): #pseudo-lang-div3:lang(en)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :enabled pseudo-class selector, matching all enabled form controls (1) (with no refNodes): #pseudo-ui :enabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :enabled pseudo-class selector, matching all disabled form controls (1) (with no refNodes): #pseudo-ui :disabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :checked pseudo-class selector, matching checked radio buttons and checkboxes (1) (with no refNodes): #pseudo-ui :checked": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :not pseudo-class selector, matching (1) (with no refNodes): #not>:not(div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: :not pseudo-class selector, matching (1) (with no refNodes): #not * :not(:first-child)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class selector, matching element with specified class (1) (with no refNodes): .class-p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class selector, chained, matching only elements with all specified classes (1) (with no refNodes): #class .apple.orange.banana": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class Selector, chained, with type selector (1) (with no refNodes): div.apple.banana.orange": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class selector, matching multiple elements with class value using non-ASCII characters (1) (with no refNodes): .台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class selector, matching element with class with escaped character (1) (with no refNodes): .foo\\:bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Class selector, matching element with class with escaped character (1) (with no refNodes): .test\\.foo\\[5\\]bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, matching element with specified id (1) (with no refNodes): #id #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, chained, matching element with specified id (1) (with no refNodes): #id-div1, #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, chained, matching element with specified id (1) (with no refNodes): #id-div1, #id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID Selector, chained, with type selector (1) (with no refNodes): div#id-div1, div#id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, matching multiple elements with duplicate id (1) (with no refNodes): #id-li-duplicate": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: ID selector, matching id value using non-ASCII characters (1) (with no refNodes): #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element that is a descendant of an element with id (1) (with no refNodes): #descendant div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element (1) (with no refNodes): body #descendant-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element (1) (with no refNodes): div #descendant-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element with id (1) (with no refNodes): #descendant #descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element with class that is a descendant of an element with id (1) (with no refNodes): #descendant .descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, matching element with class that is a descendant of an element with class (1) (with no refNodes): .descendant-div1 .descendant-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Descendant combinator, whitespace characters (1) (with no refNodes): #descendant\t\r\n#descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, matching element that is a child of an element with id (1) (with no refNodes): #child>div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, matching element with id that is a child of an element (1) (with no refNodes): div>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, matching element with id that is a child of an element with id (1) (with no refNodes): #child>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, matching element with id that is a child of an element with class (1) (with no refNodes): #child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, matching element with class that is a child of an element with class (1) (with no refNodes): .child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, surrounded by whitespace (1) (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, whitespace after (1) (with no refNodes): #child-div1>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, whitespace before (1) (with no refNodes): #child-div1\t\r\n>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Child combinator, no whitespace (1) (with no refNodes): #child-div1>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (1) (with no refNodes): div+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (1) (with no refNodes): .adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (1) (with no refNodes): #adjacent div+p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, surrounded by whitespace (1) (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, whitespace after (1) (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, whitespace before (1) (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Adjacent sibling combinator, no whitespace (1) (with no refNodes): #adjacent-p2+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, matching element that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, matching element with id that is a sibling of an element (1) (with no refNodes): div~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, matching element with id that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, matching element with class that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~.sibling-div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, matching p element that is a sibling of a div element (1) (with no refNodes): #sibling div~p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, surrounded by whitespace (1) (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, whitespace after (1) (with no refNodes): #sibling-p2~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, whitespace before (1) (with no refNodes): #sibling-p2\t\r\n~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: General sibling combinator, no whitespace (1) (with no refNodes): #sibling-p2~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Syntax, group of selectors separator, surrounded by whitespace (1) (with no refNodes): #group em\t\r \n,\t\r \n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Syntax, group of selectors separator, whitespace after (1) (with no refNodes): #group em,\t\r\n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Syntax, group of selectors separator, whitespace before (1) (with no refNodes): #group em\t\r\n,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document Element.matches: Syntax, group of selectors separator, no whitespace (1) (with no refNodes): #group em,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Universal selector, matching all children of the specified reference element (with no refNodes): >*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Universal selector, matching all children of the specified reference element (with no refNodes): >*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Universal selector, matching all children of the specified reference element (with refNode Element): >*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Universal selector, matching all children of the specified reference element (with refNode Element): >*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Universal selector, matching all grandchildren of the specified reference element (with no refNodes): >*>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Universal selector, matching all grandchildren of the specified reference element (with no refNodes): >*>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Universal selector, matching all grandchildren of the specified reference element (with refNode Element): >*>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Universal selector, matching all grandchildren of the specified reference element (with refNode Element): >*>*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Universal selector, matching all descendants of the specified reference element (with no refNodes): *": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Universal selector, matching all descendants of the specified reference element (with no refNodes): *": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Universal selector, matching all descendants of the specified reference element (with refNode Element): *": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Universal selector, matching all descendants of the specified reference element (with refNode Element): *": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute presence selector, matching align attribute with value (with no refNodes): .attr-presence-div1[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute presence selector, matching align attribute with value (with no refNodes): .attr-presence-div1[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute presence selector, matching align attribute with value (with refNode Element): .attr-presence-div1[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute presence selector, matching align attribute with value (with refNode Element): .attr-presence-div1[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute presence selector, matching align attribute with empty value (with no refNodes): .attr-presence-div2[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute presence selector, matching align attribute with empty value (with no refNodes): .attr-presence-div2[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute presence selector, matching align attribute with empty value (with refNode Element): .attr-presence-div2[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute presence selector, matching align attribute with empty value (with refNode Element): .attr-presence-div2[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute presence selector, matching title attribute, case insensitivity (with no refNodes): [TiTlE]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute presence selector, matching title attribute, case insensitivity (with no refNodes): [TiTlE]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute presence selector, matching title attribute, case insensitivity (with refNode Element): [TiTlE]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute presence selector, matching title attribute, case insensitivity (with refNode Element): [TiTlE]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute presence selector, matching custom data-* attribute (with no refNodes): [data-attr-presence]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute presence selector, matching custom data-* attribute (with no refNodes): [data-attr-presence]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute presence selector, matching custom data-* attribute (with refNode Element): [data-attr-presence]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute presence selector, matching custom data-* attribute (with refNode Element): [data-attr-presence]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute presence selector, not matching attribute with similar name (with no refNodes): .attr-presence-div3[align], .attr-presence-div4[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute presence selector, not matching attribute with similar name (with no refNodes): .attr-presence-div3[align], .attr-presence-div4[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute presence selector, not matching attribute with similar name (with refNode Element): .attr-presence-div3[align], .attr-presence-div4[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute presence selector, not matching attribute with similar name (with refNode Element): .attr-presence-div3[align], .attr-presence-div4[align]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute presence selector, matching attribute with non-ASCII characters (with no refNodes): ul[data-中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute presence selector, matching attribute with non-ASCII characters (with no refNodes): ul[data-中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute presence selector, matching attribute with non-ASCII characters (with refNode Element): ul[data-中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute presence selector, matching attribute with non-ASCII characters (with refNode Element): ul[data-中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute presence selector, not matching default option without selected attribute (with no refNodes): #attr-presence-select1 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute presence selector, not matching default option without selected attribute (with no refNodes): #attr-presence-select1 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute presence selector, not matching default option without selected attribute (with refNode Element): #attr-presence-select1 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute presence selector, not matching default option without selected attribute (with refNode Element): #attr-presence-select1 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute presence selector, matching option with selected attribute (with no refNodes): #attr-presence-select2 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute presence selector, matching option with selected attribute (with no refNodes): #attr-presence-select2 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute presence selector, matching option with selected attribute (with refNode Element): #attr-presence-select2 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute presence selector, matching option with selected attribute (with refNode Element): #attr-presence-select2 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute presence selector, matching multiple options with selected attributes (with no refNodes): #attr-presence-select3 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute presence selector, matching multiple options with selected attributes (with no refNodes): #attr-presence-select3 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute presence selector, matching multiple options with selected attributes (with refNode Element): #attr-presence-select3 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute presence selector, matching multiple options with selected attributes (with refNode Element): #attr-presence-select3 option[selected]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute value selector, matching align attribute with value (with no refNodes): [align=\"center\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute value selector, matching align attribute with value (with no refNodes): [align=\"center\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute value selector, matching align attribute with value (with refNode Element): [align=\"center\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute value selector, matching align attribute with value (with refNode Element): [align=\"center\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute value selector, matching align attribute with empty value (with no refNodes): [align=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute value selector, matching align attribute with empty value (with no refNodes): [align=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute value selector, matching align attribute with empty value (with refNode Element): [align=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute value selector, matching align attribute with empty value (with refNode Element): [align=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute value selector, not matching align attribute with partial value (with no refNodes): [align=\"c\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute value selector, not matching align attribute with partial value (with no refNodes): [align=\"c\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute value selector, not matching align attribute with partial value (with refNode Element): [align=\"c\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute value selector, not matching align attribute with partial value (with refNode Element): [align=\"c\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute value selector, not matching align attribute with incorrect value (with no refNodes): [align=\"centera\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute value selector, not matching align attribute with incorrect value (with no refNodes): [align=\"centera\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute value selector, not matching align attribute with incorrect value (with refNode Element): [align=\"centera\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute value selector, not matching align attribute with incorrect value (with refNode Element): [align=\"centera\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute value selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-value=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute value selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-value=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute value selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-value=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute value selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-value=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute value selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-value_foo=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute value selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-value_foo=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute value selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-value_foo=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute value selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-value_foo=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with no refNodes): input[type='hidden'],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with no refNodes): input[type='hidden'],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type='hidden'],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type='hidden'],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with no refNodes): input[type=\"hidden\"],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with no refNodes): input[type=\"hidden\"],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type=\"hidden\"],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type=\"hidden\"],#attr-value input[type='radio']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with no refNodes): input[type=hidden],#attr-value input[type=radio]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with no refNodes): input[type=hidden],#attr-value input[type=radio]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with refNode Element): input[type=hidden],#attr-value input[type=radio]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with refNode Element): input[type=hidden],#attr-value input[type=radio]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute value selector, matching attribute with value using non-ASCII characters (with no refNodes): [data-attr-value=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute value selector, matching attribute with value using non-ASCII characters (with no refNodes): [data-attr-value=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute value selector, matching attribute with value using non-ASCII characters (with refNode Element): [data-attr-value=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute value selector, matching attribute with value using non-ASCII characters (with refNode Element): [data-attr-value=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute whitespace-separated list selector, matching class attribute with value (with no refNodes): [class~=\"div1\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute whitespace-separated list selector, matching class attribute with value (with no refNodes): [class~=\"div1\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute whitespace-separated list selector, matching class attribute with value (with refNode Element): [class~=\"div1\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute whitespace-separated list selector, matching class attribute with value (with refNode Element): [class~=\"div1\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute whitespace-separated list selector, not matching class attribute with empty value (with no refNodes): [class~=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute whitespace-separated list selector, not matching class attribute with empty value (with no refNodes): [class~=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute whitespace-separated list selector, not matching class attribute with empty value (with refNode Element): [class~=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute whitespace-separated list selector, not matching class attribute with empty value (with refNode Element): [class~=\"\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute whitespace-separated list selector, not matching class attribute with partial value (with no refNodes): [data-attr-whitespace~=\"div\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute whitespace-separated list selector, not matching class attribute with partial value (with no refNodes): [data-attr-whitespace~=\"div\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute whitespace-separated list selector, not matching class attribute with partial value (with refNode Element): [data-attr-whitespace~=\"div\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute whitespace-separated list selector, not matching class attribute with partial value (with refNode Element): [data-attr-whitespace~=\"div\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-whitespace~=\"\\0000e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-whitespace~=\"\\0000e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-whitespace~=\"\\0000e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-whitespace~=\"\\0000e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-whitespace_foo~=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-whitespace_foo~=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-whitespace_foo~=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-whitespace_foo~=\"\\e9\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with no refNodes): a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with no refNodes): a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with no refNodes): a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with no refNodes): a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with no refNodes): a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with no refNodes): a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute whitespace-separated list selector with double-quoted value, not matching value with space (with no refNodes): a[rel~=\"book mark\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute whitespace-separated list selector with double-quoted value, not matching value with space (with no refNodes): a[rel~=\"book mark\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute whitespace-separated list selector with double-quoted value, not matching value with space (with refNode Element): a[rel~=\"book mark\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute whitespace-separated list selector with double-quoted value, not matching value with space (with refNode Element): a[rel~=\"book mark\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with no refNodes): [title~=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with no refNodes): [title~=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with refNode Element): [title~=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with refNode Element): [title~=中文]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute hyphen-separated list selector, not matching unspecified lang attribute (with no refNodes): #attr-hyphen-div1[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute hyphen-separated list selector, not matching unspecified lang attribute (with no refNodes): #attr-hyphen-div1[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute hyphen-separated list selector, not matching unspecified lang attribute (with refNode Element): #attr-hyphen-div1[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute hyphen-separated list selector, not matching unspecified lang attribute (with refNode Element): #attr-hyphen-div1[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute hyphen-separated list selector, matching lang attribute with exact value (with no refNodes): #attr-hyphen-div2[lang|=\"fr\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute hyphen-separated list selector, matching lang attribute with exact value (with no refNodes): #attr-hyphen-div2[lang|=\"fr\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute hyphen-separated list selector, matching lang attribute with exact value (with refNode Element): #attr-hyphen-div2[lang|=\"fr\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute hyphen-separated list selector, matching lang attribute with exact value (with refNode Element): #attr-hyphen-div2[lang|=\"fr\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute hyphen-separated list selector, matching lang attribute with partial value (with no refNodes): #attr-hyphen-div3[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute hyphen-separated list selector, matching lang attribute with partial value (with no refNodes): #attr-hyphen-div3[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute hyphen-separated list selector, matching lang attribute with partial value (with refNode Element): #attr-hyphen-div3[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute hyphen-separated list selector, matching lang attribute with partial value (with refNode Element): #attr-hyphen-div3[lang|=\"en\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute hyphen-separated list selector, not matching incorrect value (with no refNodes): #attr-hyphen-div4[lang|=\"es-AR\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute hyphen-separated list selector, not matching incorrect value (with no refNodes): #attr-hyphen-div4[lang|=\"es-AR\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute hyphen-separated list selector, not matching incorrect value (with refNode Element): #attr-hyphen-div4[lang|=\"es-AR\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute hyphen-separated list selector, not matching incorrect value (with refNode Element): #attr-hyphen-div4[lang|=\"es-AR\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute begins with selector, matching href attributes beginning with specified substring (with no refNodes): a[href^=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute begins with selector, matching href attributes beginning with specified substring (with no refNodes): a[href^=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute begins with selector, matching href attributes beginning with specified substring (with refNode Element): a[href^=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute begins with selector, matching href attributes beginning with specified substring (with refNode Element): a[href^=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with no refNodes): [lang^=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with no refNodes): [lang^=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang^=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang^=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute begins with selector, not matching class attribute not beginning with specified substring (with no refNodes): [class^=apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute begins with selector, not matching class attribute not beginning with specified substring (with no refNodes): [class^=apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute begins with selector, not matching class attribute not beginning with specified substring (with refNode Element): [class^=apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute begins with selector, not matching class attribute not beginning with specified substring (with refNode Element): [class^=apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class^=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class^=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class^=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class^=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute begins with selector with unquoted value, not matching class attribute not beginning with specified substring (with no refNodes): [class^= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute begins with selector with unquoted value, not matching class attribute not beginning with specified substring (with no refNodes): [class^= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute begins with selector with unquoted value, not matching class attribute not beginning with specified substring (with refNode Element): [class^= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute begins with selector with unquoted value, not matching class attribute not beginning with specified substring (with refNode Element): [class^= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute ends with selector, matching href attributes ending with specified substring (with no refNodes): a[href$=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute ends with selector, matching href attributes ending with specified substring (with no refNodes): a[href$=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute ends with selector, matching href attributes ending with specified substring (with refNode Element): a[href$=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute ends with selector, matching href attributes ending with specified substring (with refNode Element): a[href$=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute ends with selector, matching lang attributes ending with specified substring,  (with no refNodes): [lang$=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute ends with selector, matching lang attributes ending with specified substring,  (with no refNodes): [lang$=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute ends with selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang$=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute ends with selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang$=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute ends with selector, not matching class attribute not ending with specified substring (with no refNodes): [class$=apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute ends with selector, not matching class attribute not ending with specified substring (with no refNodes): [class$=apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute ends with selector, not matching class attribute not ending with specified substring (with refNode Element): [class$=apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute ends with selector, not matching class attribute not ending with specified substring (with refNode Element): [class$=apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): [class$='apple ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): [class$='apple ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$='apple ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$='apple ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): [class$=\"apple \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): [class$=\"apple \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$=\"apple \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$=\"apple \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute ends with selector with unquoted value, not matching class attribute not ending with specified substring (with no refNodes): [class$=apple ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute ends with selector with unquoted value, not matching class attribute not ending with specified substring (with no refNodes): [class$=apple ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute ends with selector with unquoted value, not matching class attribute not ending with specified substring (with refNode Element): [class$=apple ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute ends with selector with unquoted value, not matching class attribute not ending with specified substring (with refNode Element): [class$=apple ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector, matching href attributes beginning with specified substring (with no refNodes): a[href*=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector, matching href attributes beginning with specified substring (with no refNodes): a[href*=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector, matching href attributes beginning with specified substring (with refNode Element): a[href*=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector, matching href attributes beginning with specified substring (with refNode Element): a[href*=\"http://www\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector, matching href attributes ending with specified substring (with no refNodes): a[href*=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector, matching href attributes ending with specified substring (with no refNodes): a[href*=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector, matching href attributes ending with specified substring (with refNode Element): a[href*=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector, matching href attributes ending with specified substring (with refNode Element): a[href*=\".org\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector, matching href attributes containing specified substring (with no refNodes): a[href*=\".example.\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector, matching href attributes containing specified substring (with no refNodes): a[href*=\".example.\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector, matching href attributes containing specified substring (with refNode Element): a[href*=\".example.\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector, matching href attributes containing specified substring (with refNode Element): a[href*=\".example.\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector, matching lang attributes beginning with specified substring,  (with no refNodes): [lang*=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector, matching lang attributes beginning with specified substring,  (with no refNodes): [lang*=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang*=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang*=\"en-\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector, matching lang attributes ending with specified substring,  (with no refNodes): [lang*=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector, matching lang attributes ending with specified substring,  (with no refNodes): [lang*=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang*=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang*=\"-CH\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class*=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class*=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=' apple']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): [class*='orange ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): [class*='orange ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*='orange ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*='orange ']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with no refNodes): [class*='ple banana ora']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with no refNodes): [class*='ple banana ora']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with refNode Element): [class*='ple banana ora']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with refNode Element): [class*='ple banana ora']": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class*=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): [class*=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=\" apple\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): [class*=\"orange \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): [class*=\"orange \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*=\"orange \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*=\"orange \"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with no refNodes): [class*=\"ple banana ora\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with no refNodes): [class*=\"ple banana ora\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with refNode Element): [class*=\"ple banana ora\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with refNode Element): [class*=\"ple banana ora\"]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with no refNodes): [class*= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with no refNodes): [class*= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with refNode Element): [class*= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with refNode Element): [class*= apple]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with no refNodes): [class*=orange ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with no refNodes): [class*=orange ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with refNode Element): [class*=orange ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with refNode Element): [class*=orange ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with no refNodes): [class*= banana ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with no refNodes): [class*= banana ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with refNode Element): [class*= banana ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with refNode Element): [class*= banana ]": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :root pseudo-class selector, matching document root element (with no refNodes): :root": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :root pseudo-class selector, matching document root element (with no refNodes): :root": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :root pseudo-class selector, not matching document root element (with no refNodes): :root": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :root pseudo-class selector, not matching document root element (with no refNodes): :root": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :root pseudo-class selector, not matching document root element (with refNode Element): :root": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :root pseudo-class selector, not matching document root element (with refNode Element): :root": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-child selector, matching the third child element (with no refNodes): :nth-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-child selector, matching the third child element (with no refNodes): :nth-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-child selector, matching the third child element (with refNode Element): :nth-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-child selector, matching the third child element (with refNode Element): :nth-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-child selector, matching every third child element (with no refNodes): li:nth-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-child selector, matching every third child element (with no refNodes): li:nth-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-child selector, matching every third child element (with refNode Element): li:nth-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-child selector, matching every third child element (with refNode Element): li:nth-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-child selector, matching every second child element, starting from the fourth (with no refNodes): li:nth-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-child selector, matching every second child element, starting from the fourth (with no refNodes): li:nth-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-child selector, matching every second child element, starting from the fourth (with refNode Element): li:nth-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-child selector, matching every second child element, starting from the fourth (with refNode Element): li:nth-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-child selector, matching every fourth child element, starting from the third (with no refNodes): :nth-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-child selector, matching every fourth child element, starting from the third (with no refNodes): :nth-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-child selector, matching every fourth child element, starting from the third (with refNode Element): :nth-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-child selector, matching every fourth child element, starting from the third (with refNode Element): :nth-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-last-child selector, matching the third last child element (with no refNodes): :nth-last-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-last-child selector, matching the third last child element (with no refNodes): :nth-last-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-last-child selector, matching the third last child element (with refNode Element): :nth-last-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-last-child selector, matching the third last child element (with refNode Element): :nth-last-child(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-last-child selector, matching every third child element from the end (with no refNodes): li:nth-last-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-last-child selector, matching every third child element from the end (with no refNodes): li:nth-last-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-last-child selector, matching every third child element from the end (with refNode Element): li:nth-last-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-last-child selector, matching every third child element from the end (with refNode Element): li:nth-last-child(3n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with no refNodes): li:nth-last-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with no refNodes): li:nth-last-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with refNode Element): li:nth-last-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with refNode Element): li:nth-last-child(2n+4)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with no refNodes): :nth-last-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with no refNodes): :nth-last-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with refNode Element): :nth-last-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with refNode Element): :nth-last-child(4n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-of-type selector, matching the third em element (with no refNodes): em:nth-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-of-type selector, matching the third em element (with no refNodes): em:nth-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-of-type selector, matching the third em element (with refNode Element): em:nth-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-of-type selector, matching the third em element (with refNode Element): em:nth-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-of-type selector, matching every second element of their type (with no refNodes): :nth-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-of-type selector, matching every second element of their type (with no refNodes): :nth-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-of-type selector, matching every second element of their type (with refNode Element): :nth-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-of-type selector, matching every second element of their type (with refNode Element): :nth-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with no refNodes): span:nth-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with no refNodes): span:nth-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with refNode Element): span:nth-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with refNode Element): span:nth-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-last-of-type selector, matching the thrid last em element (with no refNodes): em:nth-last-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-last-of-type selector, matching the thrid last em element (with no refNodes): em:nth-last-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-last-of-type selector, matching the thrid last em element (with refNode Element): em:nth-last-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-last-of-type selector, matching the thrid last em element (with refNode Element): em:nth-last-of-type(3)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-last-of-type selector, matching every second last element of their type (with no refNodes): :nth-last-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-last-of-type selector, matching every second last element of their type (with no refNodes): :nth-last-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-last-of-type selector, matching every second last element of their type (with refNode Element): :nth-last-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-last-of-type selector, matching every second last element of their type (with refNode Element): :nth-last-of-type(2n)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with no refNodes): span:nth-last-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with no refNodes): span:nth-last-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with refNode Element): span:nth-last-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with refNode Element): span:nth-last-of-type(2n-1)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :first-of-type selector, matching the first em element (with no refNodes): em:first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :first-of-type selector, matching the first em element (with no refNodes): em:first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :first-of-type selector, matching the first em element (with refNode Element): em:first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :first-of-type selector, matching the first em element (with refNode Element): em:first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :first-of-type selector, matching the first of every type of element (with no refNodes): :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :first-of-type selector, matching the first of every type of element (with no refNodes): :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :first-of-type selector, matching the first of every type of element (with refNode Element): :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :first-of-type selector, matching the first of every type of element (with refNode Element): :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :first-of-type selector, matching the first td element in each table row (with no refNodes): tr :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :first-of-type selector, matching the first td element in each table row (with no refNodes): tr :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :first-of-type selector, matching the first td element in each table row (with refNode Element): tr :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :first-of-type selector, matching the first td element in each table row (with refNode Element): tr :first-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :last-of-type selector, matching the last em elemnet (with no refNodes): em:last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :last-of-type selector, matching the last em elemnet (with no refNodes): em:last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :last-of-type selector, matching the last em elemnet (with refNode Element): em:last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :last-of-type selector, matching the last em elemnet (with refNode Element): em:last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :last-of-type selector, matching the last of every type of element (with no refNodes): :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :last-of-type selector, matching the last of every type of element (with no refNodes): :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :last-of-type selector, matching the last of every type of element (with refNode Element): :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :last-of-type selector, matching the last of every type of element (with refNode Element): :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :last-of-type selector, matching the last td element in each table row (with no refNodes): tr :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :last-of-type selector, matching the last td element in each table row (with no refNodes): tr :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :last-of-type selector, matching the last td element in each table row (with refNode Element): tr :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :last-of-type selector, matching the last td element in each table row (with refNode Element): tr :last-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :first-child pseudo-class selector, matching first child div element (with no refNodes): div:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :first-child pseudo-class selector, matching first child div element (with no refNodes): div:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :first-child pseudo-class selector, matching first child div element (with refNode Element): div:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :first-child pseudo-class selector, matching first child div element (with refNode Element): div:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :first-child pseudo-class selector, doesn't match non-first-child elements (with no refNodes): .pseudo-first-child-div2:first-child, .pseudo-first-child-div3:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :first-child pseudo-class selector, doesn't match non-first-child elements (with no refNodes): .pseudo-first-child-div2:first-child, .pseudo-first-child-div3:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :first-child pseudo-class selector, doesn't match non-first-child elements (with refNode Element): .pseudo-first-child-div2:first-child, .pseudo-first-child-div3:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :first-child pseudo-class selector, doesn't match non-first-child elements (with refNode Element): .pseudo-first-child-div2:first-child, .pseudo-first-child-div3:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :first-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): span:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :first-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): span:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :first-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :first-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :last-child pseudo-class selector, matching last child div element (with no refNodes): div:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :last-child pseudo-class selector, matching last child div element (with no refNodes): div:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :last-child pseudo-class selector, matching last child div element (with refNode Element): div:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :last-child pseudo-class selector, matching last child div element (with refNode Element): div:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :last-child pseudo-class selector, doesn't match non-last-child elements (with no refNodes): .pseudo-last-child-div1:last-child, .pseudo-last-child-div2:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :last-child pseudo-class selector, doesn't match non-last-child elements (with no refNodes): .pseudo-last-child-div1:last-child, .pseudo-last-child-div2:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :last-child pseudo-class selector, doesn't match non-last-child elements (with refNode Element): .pseudo-last-child-div1:last-child, .pseudo-last-child-div2:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :last-child pseudo-class selector, doesn't match non-last-child elements (with refNode Element): .pseudo-last-child-div1:last-child, .pseudo-last-child-div2:first-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :last-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): span:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :last-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): span:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :last-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :last-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:last-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :pseudo-only-child pseudo-class selector, matching all only-child elements (with no refNodes): :only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :pseudo-only-child pseudo-class selector, matching all only-child elements (with no refNodes): :only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :pseudo-only-child pseudo-class selector, matching all only-child elements (with refNode Element): :only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :pseudo-only-child pseudo-class selector, matching all only-child elements (with refNode Element): :only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :pseudo-only-child pseudo-class selector, matching only-child em elements (with no refNodes): em:only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :pseudo-only-child pseudo-class selector, matching only-child em elements (with no refNodes): em:only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :pseudo-only-child pseudo-class selector, matching only-child em elements (with refNode Element): em:only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :pseudo-only-child pseudo-class selector, matching only-child em elements (with refNode Element): em:only-child": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with no refNodes):  :only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with no refNodes):  :only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with refNode Element):  :only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with refNode Element):  :only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with no refNodes):  em:only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with no refNodes):  em:only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with refNode Element):  em:only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with refNode Element):  em:only-of-type": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :empty pseudo-class selector, matching empty p elements (with no refNodes): p:empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :empty pseudo-class selector, matching empty p elements (with no refNodes): p:empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :empty pseudo-class selector, matching empty p elements (with refNode Element): p:empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :empty pseudo-class selector, matching empty p elements (with refNode Element): p:empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :empty pseudo-class selector, matching all empty elements (with no refNodes): :empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :empty pseudo-class selector, matching all empty elements (with no refNodes): :empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :empty pseudo-class selector, matching all empty elements (with refNode Element): :empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :empty pseudo-class selector, matching all empty elements (with refNode Element): :empty": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with no refNodes):  :link, #pseudo-link :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with no refNodes):  :link, #pseudo-link :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with refNode Element):  :link, #pseudo-link :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with refNode Element):  :link, #pseudo-link :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].findAll: :link and :visited pseudo-class selectors, matching link elements with href attributes (with no refNodes):  :link, #head :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Context Element].find: :link and :visited pseudo-class selectors, matching link elements with href attributes (with no refNodes):  :link, #head :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].findAll: :link and :visited pseudo-class selectors, matching link elements with href attributes (with refNode Element):  :link, #head :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document [Root Node].find: :link and :visited pseudo-class selectors, matching link elements with href attributes (with refNode Element):  :link, #head :visited": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :target pseudo-class selector, matching the element referenced by the URL fragment identifier (with no refNodes): :target": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :target pseudo-class selector, matching the element referenced by the URL fragment identifier (with no refNodes): :target": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :lang pseudo-class selector, matching inherited language (1) (with no refNodes): #pseudo-lang-div1:lang(en)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :lang pseudo-class selector, matching inherited language (1) (with no refNodes): #pseudo-lang-div1:lang(en)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :lang pseudo-class selector, matching specified language with exact value (1) (with no refNodes): #pseudo-lang-div2:lang(fr)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :lang pseudo-class selector, matching specified language with exact value (1) (with no refNodes): #pseudo-lang-div2:lang(fr)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :lang pseudo-class selector, matching specified language with partial value (1) (with no refNodes): #pseudo-lang-div3:lang(en)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :lang pseudo-class selector, matching specified language with partial value (1) (with no refNodes): #pseudo-lang-div3:lang(en)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :lang pseudo-class selector, not matching incorrect language (with no refNodes): #pseudo-lang-div4:lang(es-AR)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :lang pseudo-class selector, not matching incorrect language (with no refNodes): #pseudo-lang-div4:lang(es-AR)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :enabled pseudo-class selector, matching all enabled form controls (1) (with no refNodes): #pseudo-ui :enabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :enabled pseudo-class selector, matching all enabled form controls (1) (with no refNodes): #pseudo-ui :enabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :enabled pseudo-class selector, matching all disabled form controls (1) (with no refNodes): #pseudo-ui :disabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :enabled pseudo-class selector, matching all disabled form controls (1) (with no refNodes): #pseudo-ui :disabled": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :checked pseudo-class selector, matching checked radio buttons and checkboxes (1) (with no refNodes): #pseudo-ui :checked": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :checked pseudo-class selector, matching checked radio buttons and checkboxes (1) (with no refNodes): #pseudo-ui :checked": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :not pseudo-class selector, matching (1) (with no refNodes): #not>:not(div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :not pseudo-class selector, matching (1) (with no refNodes): #not>:not(div)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :not pseudo-class selector, matching (1) (with no refNodes): #not * :not(:first-child)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :not pseudo-class selector, matching (1) (with no refNodes): #not * :not(:first-child)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :not pseudo-class selector, matching nothing (with no refNodes): :not(*)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :not pseudo-class selector, matching nothing (with no refNodes): :not(*)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :not pseudo-class selector, matching nothing (with no refNodes): :not(*|*)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :not pseudo-class selector, matching nothing (with no refNodes): :not(*|*)": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :first-line pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:first-line": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :first-line pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:first-line": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ::first-line pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::first-line": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ::first-line pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::first-line": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :first-letter pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:first-letter": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :first-letter pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:first-letter": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ::first-letter pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::first-letter": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ::first-letter pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::first-letter": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :before pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :before pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ::before pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ::before pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::before": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: :after pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:after": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: :after pseudo-element (one-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element:after": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ::after pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::after": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ::after pseudo-element (two-colon syntax) selector, not matching any elements (with no refNodes): #pseudo-element::after": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Class selector, matching element with specified class (1) (with no refNodes): .class-p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Class selector, matching element with specified class (1) (with no refNodes): .class-p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Class selector, chained, matching only elements with all specified classes (1) (with no refNodes): #class .apple.orange.banana": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Class selector, chained, matching only elements with all specified classes (1) (with no refNodes): #class .apple.orange.banana": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Class Selector, chained, with type selector (1) (with no refNodes): div.apple.banana.orange": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Class Selector, chained, with type selector (1) (with no refNodes): div.apple.banana.orange": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Class selector, matching element with class value using non-ASCII characters (with no refNodes): .台北Táiběi": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Class selector, matching element with class value using non-ASCII characters (with no refNodes): .台北Táiběi": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Class selector, matching multiple elements with class value using non-ASCII characters (1) (with no refNodes): .台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Class selector, matching multiple elements with class value using non-ASCII characters (1) (with no refNodes): .台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Class selector, chained, matching element with multiple class values using non-ASCII characters (with no refNodes): .台北Táiběi.台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Class selector, chained, matching element with multiple class values using non-ASCII characters (with no refNodes): .台北Táiběi.台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Class selector, matching element with class with escaped character (1) (with no refNodes): .foo\\:bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Class selector, matching element with class with escaped character (1) (with no refNodes): .foo\\:bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Class selector, matching element with class with escaped character (1) (with no refNodes): .test\\.foo\\[5\\]bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Class selector, matching element with class with escaped character (1) (with no refNodes): .test\\.foo\\[5\\]bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, matching element with specified id (1) (with no refNodes): #id #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, matching element with specified id (1) (with no refNodes): #id #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, chained, matching element with specified id (1) (with no refNodes): #id-div1, #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, chained, matching element with specified id (1) (with no refNodes): #id-div1, #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, chained, matching element with specified id (1) (with no refNodes): #id-div1, #id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, chained, matching element with specified id (1) (with no refNodes): #id-div1, #id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID Selector, chained, with type selector (1) (with no refNodes): div#id-div1, div#id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID Selector, chained, with type selector (1) (with no refNodes): div#id-div1, div#id-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, not matching non-existent descendant (with no refNodes): #id #none": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, not matching non-existent descendant (with no refNodes): #id #none": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, not matching non-existent ancestor (with no refNodes): #none #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, not matching non-existent ancestor (with no refNodes): #none #id-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, matching multiple elements with duplicate id (1) (with no refNodes): #id-li-duplicate": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, matching multiple elements with duplicate id (1) (with no refNodes): #id-li-duplicate": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, matching id value using non-ASCII characters (with no refNodes): #台北Táiběi": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, matching id value using non-ASCII characters (with no refNodes): #台北Táiběi": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, matching id value using non-ASCII characters (1) (with no refNodes): #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, matching id value using non-ASCII characters (1) (with no refNodes): #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, matching id values using non-ASCII characters (with no refNodes): #台北Táiběi, #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, matching id values using non-ASCII characters (with no refNodes): #台北Táiběi, #台北": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, matching element with id with escaped character (with no refNodes): #\\#foo\\:bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, matching element with id with escaped character (with no refNodes): #\\#foo\\:bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: ID selector, matching element with id with escaped character (with no refNodes): #test\\.foo\\[5\\]bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: ID selector, matching element with id with escaped character (with no refNodes): #test\\.foo\\[5\\]bar": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Namespace selector, matching element with any namespace (with no refNodes): #any-namespace *|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Namespace selector, matching element with any namespace (with no refNodes): #any-namespace *|div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Namespace selector, matching div elements in no namespace only (with no refNodes): #no-namespace |div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Namespace selector, matching div elements in no namespace only (with no refNodes): #no-namespace |div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Namespace selector, matching any elements in no namespace only (with no refNodes): #no-namespace |*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Namespace selector, matching any elements in no namespace only (with no refNodes): #no-namespace |*": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Descendant combinator, matching element that is a descendant of an element with id (1) (with no refNodes): #descendant div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Descendant combinator, matching element that is a descendant of an element with id (1) (with no refNodes): #descendant div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Descendant combinator, matching element with id that is a descendant of an element (1) (with no refNodes): body #descendant-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Descendant combinator, matching element with id that is a descendant of an element (1) (with no refNodes): body #descendant-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Descendant combinator, matching element with id that is a descendant of an element (1) (with no refNodes): div #descendant-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Descendant combinator, matching element with id that is a descendant of an element (1) (with no refNodes): div #descendant-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Descendant combinator, matching element with id that is a descendant of an element with id (1) (with no refNodes): #descendant #descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Descendant combinator, matching element with id that is a descendant of an element with id (1) (with no refNodes): #descendant #descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Descendant combinator, matching element with class that is a descendant of an element with id (1) (with no refNodes): #descendant .descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Descendant combinator, matching element with class that is a descendant of an element with id (1) (with no refNodes): #descendant .descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Descendant combinator, matching element with class that is a descendant of an element with class (1) (with no refNodes): .descendant-div1 .descendant-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Descendant combinator, matching element with class that is a descendant of an element with class (1) (with no refNodes): .descendant-div1 .descendant-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Descendant combinator, not matching element with id that is not a descendant of an element with id (with no refNodes): #descendant-div1 #descendant-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Descendant combinator, not matching element with id that is not a descendant of an element with id (with no refNodes): #descendant-div1 #descendant-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Descendant combinator, whitespace characters (1) (with no refNodes): #descendant\t\r\n#descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Descendant combinator, whitespace characters (1) (with no refNodes): #descendant\t\r\n#descendant-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, matching element that is a child of an element with id (1) (with no refNodes): #child>div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, matching element that is a child of an element with id (1) (with no refNodes): #child>div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, matching element with id that is a child of an element (1) (with no refNodes): div>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, matching element with id that is a child of an element (1) (with no refNodes): div>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, matching element with id that is a child of an element with id (1) (with no refNodes): #child>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, matching element with id that is a child of an element with id (1) (with no refNodes): #child>#child-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, matching element with id that is a child of an element with class (1) (with no refNodes): #child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, matching element with id that is a child of an element with class (1) (with no refNodes): #child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, matching element with class that is a child of an element with class (1) (with no refNodes): .child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, matching element with class that is a child of an element with class (1) (with no refNodes): .child-div1>.child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, not matching element with id that is not a child of an element with id (with no refNodes): #child>#child-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, not matching element with id that is not a child of an element with id (with no refNodes): #child>#child-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, not matching element with id that is not a child of an element with class (with no refNodes): #child-div1>.child-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, not matching element with id that is not a child of an element with class (with no refNodes): #child-div1>.child-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, not matching element with class that is not a child of an element with class (with no refNodes): .child-div1>.child-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, not matching element with class that is not a child of an element with class (with no refNodes): .child-div1>.child-div3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, surrounded by whitespace (1) (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, surrounded by whitespace (1) (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, whitespace after (1) (with no refNodes): #child-div1>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, whitespace after (1) (with no refNodes): #child-div1>\t\r\n#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, whitespace before (1) (with no refNodes): #child-div1\t\r\n>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, whitespace before (1) (with no refNodes): #child-div1\t\r\n>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Child combinator, no whitespace (1) (with no refNodes): #child-div1>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Child combinator, no whitespace (1) (with no refNodes): #child-div1>#child-div2": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (1) (with no refNodes): div+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (1) (with no refNodes): div+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+#adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (1) (with no refNodes): .adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (1) (with no refNodes): .adjacent-div2+.adjacent-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (1) (with no refNodes): #adjacent div+p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (1) (with no refNodes): #adjacent div+p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, not matching element with id that is not an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-p2, #adjacent-div2+#adjacent-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, not matching element with id that is not an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-p2, #adjacent-div2+#adjacent-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, surrounded by whitespace (1) (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, surrounded by whitespace (1) (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, whitespace after (1) (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, whitespace after (1) (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, whitespace before (1) (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, whitespace before (1) (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Adjacent sibling combinator, no whitespace (1) (with no refNodes): #adjacent-p2+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Adjacent sibling combinator, no whitespace (1) (with no refNodes): #adjacent-p2+#adjacent-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, matching element that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, matching element that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, matching element with id that is a sibling of an element (1) (with no refNodes): div~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, matching element with id that is a sibling of an element (1) (with no refNodes): div~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, matching element with id that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, matching element with id that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~#sibling-div4": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, matching element with class that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~.sibling-div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, matching element with class that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~.sibling-div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, matching p element that is a sibling of a div element (1) (with no refNodes): #sibling div~p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, matching p element that is a sibling of a div element (1) (with no refNodes): #sibling div~p": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, not matching element with id that is not a sibling after a p element (1) (with no refNodes): #sibling>p~div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, not matching element with id that is not a sibling after a p element (1) (with no refNodes): #sibling>p~div": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, not matching element with id that is not a sibling after an element with id (with no refNodes): #sibling-div2~#sibling-div3, #sibling-div2~#sibling-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, not matching element with id that is not a sibling after an element with id (with no refNodes): #sibling-div2~#sibling-div3, #sibling-div2~#sibling-div1": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, surrounded by whitespace (1) (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, surrounded by whitespace (1) (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, whitespace after (1) (with no refNodes): #sibling-p2~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, whitespace after (1) (with no refNodes): #sibling-p2~\t\r\n#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, whitespace before (1) (with no refNodes): #sibling-p2\t\r\n~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, whitespace before (1) (with no refNodes): #sibling-p2\t\r\n~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: General sibling combinator, no whitespace (1) (with no refNodes): #sibling-p2~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: General sibling combinator, no whitespace (1) (with no refNodes): #sibling-p2~#sibling-p3": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Syntax, group of selectors separator, surrounded by whitespace (1) (with no refNodes): #group em\t\r \n,\t\r \n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Syntax, group of selectors separator, surrounded by whitespace (1) (with no refNodes): #group em\t\r \n,\t\r \n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Syntax, group of selectors separator, whitespace after (1) (with no refNodes): #group em,\t\r\n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Syntax, group of selectors separator, whitespace after (1) (with no refNodes): #group em,\t\r\n#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Syntax, group of selectors separator, whitespace before (1) (with no refNodes): #group em\t\r\n,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Syntax, group of selectors separator, whitespace before (1) (with no refNodes): #group em\t\r\n,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.findAll: Syntax, group of selectors separator, no whitespace (1) (with no refNodes): #group em,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "In-document.find: Syntax, group of selectors separator, no whitespace (1) (with no refNodes): #group em,#group strong": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/selectors/attribute-selectors/attribute-case/cssom.html": {
      "byUA": {
        "UC10": "OK"
      },
      "totals": {
        "OK": 1
      },
      "subtests": {
        "[foo=\"bar\"] /* sanity check */ insertRule": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo=\"bar\"] /* sanity check */ getting CSSRule#cssText": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo=\"bar\"] /* sanity check */ setting CSSRule#cssText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"] /* sanity check */ getting CSSStyleRule#selectorText": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo=\"bar\"] /* sanity check */ setting CSSStyleRule#selectorText": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo=\"bar\"] /* sanity check */ insertRule in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"] /* sanity check */ getting CSSRule#cssText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"] /* sanity check */ setting CSSRule#cssText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"] /* sanity check */ getting CSSStyleRule#selectorText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"] /* sanity check */ setting CSSStyleRule#selectorText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] insertRule": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] getting CSSRule#cssText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] setting CSSRule#cssText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] getting CSSStyleRule#selectorText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] setting CSSStyleRule#selectorText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] insertRule in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] getting CSSRule#cssText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] setting CSSRule#cssText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] getting CSSStyleRule#selectorText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] setting CSSStyleRule#selectorText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" /**/ i] insertRule": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" /**/ i] getting CSSRule#cssText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" /**/ i] setting CSSRule#cssText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" /**/ i] getting CSSStyleRule#selectorText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" /**/ i] setting CSSStyleRule#selectorText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" /**/ i] insertRule in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" /**/ i] getting CSSRule#cssText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" /**/ i] setting CSSRule#cssText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" /**/ i] getting CSSStyleRule#selectorText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" /**/ i] setting CSSStyleRule#selectorText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"/**/i] insertRule": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"/**/i] getting CSSRule#cssText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"/**/i] setting CSSRule#cssText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"/**/i] getting CSSStyleRule#selectorText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"/**/i] setting CSSStyleRule#selectorText": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"/**/i] insertRule in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"/**/i] getting CSSRule#cssText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"/**/i] setting CSSRule#cssText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"/**/i] getting CSSStyleRule#selectorText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\"/**/i] setting CSSStyleRule#selectorText in @media": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/selectors/attribute-selectors/attribute-case/semantics.html": {
      "byUA": {
        "UC10": "OK"
      },
      "totals": {
        "OK": 1
      },
      "subtests": {
        "[foo='BAR'] /* sanity check (match) */ <div foo=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='BAR'] /* sanity check (match) */ <div foo=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i] <div foo=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div foo=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] <div foo=\"\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] <div foo=\"\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in both */ <div foo=\"Ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in both */ <div foo=\"Ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in both */ <div foo=\"ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in both */ <div foo=\"ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"x\" {a}foo=\"x\" {b}foo=\"BAR\" {c}foo=\"x\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"x\" {a}foo=\"x\" {b}foo=\"BAR\" {c}foo=\"x\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"BAR\" {a}foo=\"x\" {b}foo=\"x\" {c}foo=\"x\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"BAR\" {a}foo=\"x\" {b}foo=\"x\" {c}foo=\"x\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='left' i] <div align=\"LEFT\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='left' i] <div align=\"LEFT\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='LEFT' i] <div align=\"left\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='LEFT' i] <div align=\"left\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='a' i] <div class=\"A\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='a' i] <div class=\"A\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='A' i] <div class=\"a\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='A' i] <div class=\"a\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='a' i] <div id=\"A\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='a' i] <div id=\"A\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='A' i] <div id=\"a\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='A' i] <div id=\"a\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='a' i] <div lang=\"A\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='a' i] <div lang=\"A\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='A' i] <div lang=\"a\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='A' i] <div lang=\"a\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='a' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"A\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='a' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"A\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='A' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"a\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='A' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"a\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "@namespace x 'http://www.w3.org/XML/1998/namespace'; [x|lang='A' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"a\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar' i] <div foo=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar' i] <div foo=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='BAR'][foo='bar' i] <div foo=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='BAR'][foo='bar' i] <div foo=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='BAR'] <div foo=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='BAR'] <div foo=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[missingattr] /* sanity check (no match) */ <div foo=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[missingattr] /* sanity check (no match) */ <div foo=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='' i] <div foo=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] <div foo=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\u0000' i] /* \\0 in selector */ <div foo=\"\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\u0000' i] /* \\0 in selector */ <div foo=\"\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] /* \\0 in attribute */ <div foo=\"\u0000\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] /* \\0 in attribute */ <div foo=\"\u0000\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] <div foo=\"Ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] <div foo=\"Ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] <div foo=\"ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] <div foo=\"ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"a\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"a\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"A\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"A\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"a\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"a\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"A\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"A\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"İ\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"İ\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"ı\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"ı\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"İ\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"İ\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"ı\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"ı\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"i\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"i\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"i\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"i\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"I\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"I\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"I\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"I\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div FOO=\"bar\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div FOO=\"bar\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\t' i] /* tab in selector */ <div foo=\" \"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\t' i] /* tab in selector */ <div foo=\" \"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=' ' i] /* tab in attribute */ <div foo=\"\t\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=' ' i] /* tab in attribute */ <div foo=\"\t\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "@namespace x 'a'; [x|foo='' i] <div {A}foo=\"\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "@namespace x 'A'; [x|foo='' i] <div {a}foo=\"\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar'] <div foo=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar'] <div foo=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div baz=\"BAR\"> in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div baz=\"BAR\"> with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='BAR'] /* sanity check (match) */ <div foo=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='BAR'] /* sanity check (match) */ <div foo=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i] <div foo=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div foo=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] <div foo=\"\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] <div foo=\"\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in both */ <div foo=\"Ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in both */ <div foo=\"Ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in both */ <div foo=\"ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in both */ <div foo=\"ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"x\" {a}foo=\"x\" {b}foo=\"BAR\" {c}foo=\"x\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"x\" {a}foo=\"x\" {b}foo=\"BAR\" {c}foo=\"x\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"BAR\" {a}foo=\"x\" {b}foo=\"x\" {c}foo=\"x\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"BAR\" {a}foo=\"x\" {b}foo=\"x\" {c}foo=\"x\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='left' i] <div align=\"LEFT\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='left' i] <div align=\"LEFT\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='LEFT' i] <div align=\"left\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='LEFT' i] <div align=\"left\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='a' i] <div class=\"A\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='a' i] <div class=\"A\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='A' i] <div class=\"a\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='A' i] <div class=\"a\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='a' i] <div id=\"A\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='a' i] <div id=\"A\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='A' i] <div id=\"a\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='A' i] <div id=\"a\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='a' i] <div lang=\"A\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='a' i] <div lang=\"A\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='A' i] <div lang=\"a\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='A' i] <div lang=\"a\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='a' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"A\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='a' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"A\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='A' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"a\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='A' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"a\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "@namespace x 'http://www.w3.org/XML/1998/namespace'; [x|lang='A' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"a\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar' i] <div foo=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar' i] <div foo=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='BAR'][foo='bar' i] <div foo=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='BAR'][foo='bar' i] <div foo=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='BAR'] <div foo=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='BAR'] <div foo=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[missingattr] /* sanity check (no match) */ <div foo=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[missingattr] /* sanity check (no match) */ <div foo=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='' i] <div foo=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] <div foo=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\u0000' i] /* \\0 in selector */ <div foo=\"\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\u0000' i] /* \\0 in selector */ <div foo=\"\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] /* \\0 in attribute */ <div foo=\"\u0000\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] /* \\0 in attribute */ <div foo=\"\u0000\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] <div foo=\"Ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] <div foo=\"Ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] <div foo=\"ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] <div foo=\"ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"a\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"a\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"A\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"A\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"a\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"a\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"A\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"A\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"İ\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"İ\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"ı\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"ı\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"İ\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"İ\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"ı\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"ı\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"i\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"i\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"i\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"i\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"I\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"I\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"I\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"I\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div FOO=\"bar\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div FOO=\"bar\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\t' i] /* tab in selector */ <div foo=\" \"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\t' i] /* tab in selector */ <div foo=\" \"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=' ' i] /* tab in attribute */ <div foo=\"\t\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=' ' i] /* tab in attribute */ <div foo=\"\t\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "@namespace x 'a'; [x|foo='' i] <div {A}foo=\"\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "@namespace x 'A'; [x|foo='' i] <div {a}foo=\"\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar'] <div foo=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar'] <div foo=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div baz=\"BAR\"> in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div baz=\"BAR\"> with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='BAR'] /* sanity check (match) */ <div foo=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='BAR'] /* sanity check (match) */ <div foo=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i] <div foo=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div foo=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] <div foo=\"\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] <div foo=\"\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in both */ <div foo=\"Ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in both */ <div foo=\"Ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in both */ <div foo=\"ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in both */ <div foo=\"ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"x\" {a}foo=\"x\" {b}foo=\"BAR\" {c}foo=\"x\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"x\" {a}foo=\"x\" {b}foo=\"BAR\" {c}foo=\"x\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"BAR\" {a}foo=\"x\" {b}foo=\"x\" {c}foo=\"x\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] <div foo=\"BAR\" {a}foo=\"x\" {b}foo=\"x\" {c}foo=\"x\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='left' i] <div align=\"LEFT\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='left' i] <div align=\"LEFT\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='LEFT' i] <div align=\"left\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[align='LEFT' i] <div align=\"left\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='a' i] <div class=\"A\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='a' i] <div class=\"A\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='A' i] <div class=\"a\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[class='A' i] <div class=\"a\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='a' i] <div id=\"A\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='a' i] <div id=\"A\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='A' i] <div id=\"a\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[id='A' i] <div id=\"a\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='a' i] <div lang=\"A\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='a' i] <div lang=\"A\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='A' i] <div lang=\"a\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[lang='A' i] <div lang=\"a\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='a' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"A\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='a' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"A\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='A' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"a\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|lang='A' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"a\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "@namespace x 'http://www.w3.org/XML/1998/namespace'; [x|lang='A' i] <div {http://www.w3.org/XML/1998/namespace}lang=\"a\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar' i] <div foo=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar' i] <div foo=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='BAR'][foo='bar' i] <div foo=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='BAR'][foo='bar' i] <div foo=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='BAR'] <div foo=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='BAR'] <div foo=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[missingattr] /* sanity check (no match) */ <div foo=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[missingattr] /* sanity check (no match) */ <div foo=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='' i] <div foo=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] <div foo=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\u0000' i] /* \\0 in selector */ <div foo=\"\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\u0000' i] /* \\0 in selector */ <div foo=\"\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] /* \\0 in attribute */ <div foo=\"\u0000\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='' i] /* \\0 in attribute */ <div foo=\"\u0000\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] <div foo=\"Ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] <div foo=\"Ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] <div foo=\"ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] <div foo=\"ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"Ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"a\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"a\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"A\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ä' i] /* COMBINING in selector */ <div foo=\"A\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"a\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"a\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"A\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='Ä' i] /* COMBINING in selector */ <div foo=\"A\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='a' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"Ä\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='A' i] /* COMBINING in attribute */ <div foo=\"Ä\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"İ\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"İ\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"ı\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='i' i] <div foo=\"ı\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"İ\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"İ\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"ı\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='I' i] <div foo=\"ı\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"i\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"i\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"i\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"i\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"I\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='İ' i] <div foo=\"I\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"I\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='ı' i] <div foo=\"I\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] <div foo=\"x\" {a}foo=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div FOO=\"bar\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div FOO=\"bar\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\t' i] /* tab in selector */ <div foo=\" \"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='\t' i] /* tab in selector */ <div foo=\" \"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=' ' i] /* tab in attribute */ <div foo=\"\t\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=' ' i] /* tab in attribute */ <div foo=\"\t\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "@namespace x 'a'; [x|foo='' i] <div {A}foo=\"\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "@namespace x 'A'; [x|foo='' i] <div {a}foo=\"\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar'] <div foo=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i][foo='bar'] <div foo=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div baz=\"BAR\"> in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] <div baz=\"BAR\"> with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/selectors/attribute-selectors/attribute-case/syntax.html": {
      "byUA": {
        "UC10": "OK"
      },
      "totals": {
        "OK": 1
      },
      "subtests": {
        "[foo='BAR'] /* sanity check (valid) */ in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='BAR'] /* sanity check (valid) */ with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i ] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i ] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i ] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i ] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' /**/ i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' /**/ i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i /**/ ] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i /**/ ] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'/**/i/**/] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'/**/i/**/] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar/**/i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar/**/i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ti\t] /* \\t */ in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ti\t] /* \\t */ with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ni\n] /* \\n */ in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ni\n] /* \\n */ with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ri\r] /* \\r */ in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ri\r] /* \\r */ with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\69] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\69] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo~='bar' i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo~='bar' i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo^='bar' i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo^='bar' i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo$='bar' i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo$='bar' i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo /* sanity check (invalid) */ in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo /* sanity check (invalid) */ with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' I] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' I] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i ='bar'] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i ='bar'] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo= i 'bar'] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo= i 'bar'] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[i foo='bar'] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[i foo='bar'] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i\u0000] /* \\0 */ in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i\u0000] /* \\0 */ with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' İ] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' İ] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ı] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ı] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ii] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ii] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ij] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ij] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' j] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' j] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\69] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\69] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i()] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i()] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i ()] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i ()] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' () i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' () i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' (i)] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' (i)] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i []] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i []] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [] i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [] i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [i]] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [i]] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i {}] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i {}] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {} i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {} i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {i}] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {i}] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 'i'] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 'i'] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' url(i)] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' url(i)] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ,i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ,i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i,] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i,] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar']i in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar']i with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' |i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' |i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\|i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\|i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *|i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *|i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*|i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*|i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo/**/i] in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo/**/i] with querySelector in standards mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='BAR'] /* sanity check (valid) */ in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='BAR'] /* sanity check (valid) */ with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i ] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i ] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i ] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i ] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' /**/ i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' /**/ i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i /**/ ] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i /**/ ] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'/**/i/**/] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'/**/i/**/] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar/**/i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar/**/i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ti\t] /* \\t */ in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ti\t] /* \\t */ with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ni\n] /* \\n */ in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ni\n] /* \\n */ with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ri\r] /* \\r */ in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ri\r] /* \\r */ with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\69] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\69] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo~='bar' i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo~='bar' i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo^='bar' i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo^='bar' i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo$='bar' i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo$='bar' i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo /* sanity check (invalid) */ in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo /* sanity check (invalid) */ with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' I] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' I] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i ='bar'] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i ='bar'] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo= i 'bar'] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo= i 'bar'] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[i foo='bar'] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[i foo='bar'] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i\u0000] /* \\0 */ in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i\u0000] /* \\0 */ with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' İ] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' İ] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ı] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ı] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ii] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ii] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ij] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ij] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' j] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' j] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\69] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\69] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i()] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i()] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i ()] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i ()] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' () i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' () i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' (i)] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' (i)] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i []] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i []] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [] i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [] i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [i]] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [i]] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i {}] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i {}] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {} i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {} i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {i}] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {i}] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 'i'] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 'i'] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' url(i)] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' url(i)] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ,i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ,i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i,] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i,] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar']i in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar']i with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' |i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' |i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\|i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\|i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *|i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *|i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*|i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*|i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo/**/i] in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo/**/i] with querySelector in quirks mode": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='BAR'] /* sanity check (valid) */ in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='BAR'] /* sanity check (valid) */ with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=\"bar\" i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i ] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'i ] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i ] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i ] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' /**/ i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' /**/ i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i /**/ ] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' i /**/ ] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'/**/i/**/] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'/**/i/**/] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar/**/i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo=bar/**/i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ti\t] /* \\t */ in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ti\t] /* \\t */ with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ni\n] /* \\n */ in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ni\n] /* \\n */ with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ri\r] /* \\r */ in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar'\ri\r] /* \\r */ with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\69] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo='bar' \\69] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo~='bar' i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo~='bar' i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo^='bar' i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo^='bar' i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo$='bar' i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo$='bar' i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[|foo='bar' i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[*|foo='bar' i] with querySelector in XML": {
          "byUA": {
            "UC10": "FAIL"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "[foo /* sanity check (invalid) */ in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo /* sanity check (invalid) */ with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' I] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' I] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i ='bar'] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i ='bar'] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo= i 'bar'] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo= i 'bar'] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[i foo='bar'] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[i foo='bar'] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i\u0000] /* \\0 */ in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i\u0000] /* \\0 */ with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' İ] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' İ] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ı] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ı] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ii] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ii] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ij] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ij] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' j] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' j] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\69] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\\\69] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i()] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i()] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i ()] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i ()] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' () i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' () i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' (i)] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' (i)] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i []] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i []] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [] i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [] i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [i]] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' [i]] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i {}] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i {}] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {} i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {} i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {i}] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' {i}] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 1] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 'i'] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' 'i'] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' url(i)] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' url(i)] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ,i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' ,i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i,] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' i,] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar']i in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar']i with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' |i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' |i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\|i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\|i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *|i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *|i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*|i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*|i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' *] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo='bar' \\*] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo/**/i] in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        },
        "[foo/**/i] with querySelector in XML": {
          "byUA": {
            "UC10": "PASS"
          },
          "totals": {
            "PASS": 1
          }
        }
      }
    }
  }
}