addTest("../Parameters/CellResolution001.xml","CellResolution001","Test ttp:cellResolution attribute","Parameter Test");
addTest("../Parameters/ClockMode001.xml","ClockMode001","Test ttp:clockMode attribute","Parameter Test");
addTest("../Parameters/ClockMode002.xml","ClockMode002","Test ttp:clockMode attribute","Parameter Test");
addTest("../Parameters/ClockMode003.xml","ClockMode003","Test ttp:clockMode attribute","Parameter Test");
addTest("../Parameters/MarkerMode001.xml","MarkerMode001","Test ttp:markerMode attribute","Parameter Test");
addTest("../Parameters/MarkerMode002.xml","MarkerMode002","Test ttp:markerMode attribute","Parameter Test");
addTest("../Parameters/Parameters006.xml","Parameters006","Test profile element","Parameter Test");
addTest("../Parameters/PixelAspectRatio001.xml","PixelAspectRatio001","Test ttp:pixelAspectRatio attribute to match Rec. 601 Standard (4:3) PAL (e.g. 576i)","Parameter Test");
addTest("../Parameters/PixelAspectRatio002.xml","PixelAspectRatio002","Test ttp:pixelAspectRatio attribute to match Rec. 601 Widescreen (16:9) PAL","Parameter Test");
addTest("../Parameters/PixelAspectRatio003.xml","PixelAspectRatio003","Test ttp:pixelAspectRatio attribute to match SMPTE Standard (4:3) NTSC (e.g. 480i)","Parameter Test");
addTest("../Parameters/PixelAspectRatio004.xml","PixelAspectRatio004","Test ttp:pixelAspectRatio attribute to match SMPTE Widescreen (16:9) NTSC","Parameter Test");
addTest("../Content/Br001.xml","Br001","Test the br element.","Content Test");
addTest("../Content/Div001.xml","Div001","Test nested div elements.","Content Test");
addTest("../Content/Div002.xml","Div002","Test multiple div elements in the body.","Content Test");
addTest("../Content/Div003.xml","Div003","Test multiple div elements in the body with the xml:lang attribute.","Content Test");
addTest("../Content/Foreign001.xml","Foreign001","Test the non-TT namespaces.","Content Test");
addTest("../Content/Paragraph001.xml","Paragraph001","Test the p element with no styling attribute.","Content Test");
addTest("../Content/Paragraph002.xml","Paragraph002","Test the p element with no timing attributes (nothing is displayed).","Content Test");
addTest("../Content/Paragraph003.xml","Paragraph003","Test the p element with styling and timing attributes.","Content Test");
addTest("../Content/Paragraph004.xml","Paragraph004","Test the p element with xml:space default.","Content Test");
addTest("../Content/Paragraph005.xml","Paragraph005","Test the p element with xml:space preserve.","Content Test");
addTest("../Content/Span001.xml","Span001","Test the span element with no attributes.","Content Test");
addTest("../Content/Span002.xml","Span002","Test the span element with a styling attribute.","Content Test");
addTest("../Content/Span003.xml","Span003","Test nested span elements.","Content Test");
addTest("../Content/Span004.xml","Span004","Test nested span elements.","Content Test");
addTest("../Content/Span005.xml","Span005","Test the br element inside a span element.","Content Test");
addTest("../Content/Tt001.xml","Tt001","Test the tt element without an xml:space attribute.","Content Test");
addTest("../Content/Tt002.xml","Tt002","Test the tt element with xml:space preserve.","Content Test");
addTest("../Content/Tt003.xml","Tt003","Test the tt element with xml:space default.","Content Test");
addTest("../Styling/BackgroundColor001.xml","BackgroundColor001","Test tts:backgroundColor attribute using a named color expression in a div.","Styling Test");
addTest("../Styling/BackgroundColor002.xml","BackgroundColor002","Test tts:backgroundColor attribute using a hash (#rrggbb) color expression in a div.","Styling Test");
addTest("../Styling/BackgroundColor003.xml","BackgroundColor003","Test tts:backgroundColor attribute using a hash (#rrggbbaa) color expression with opacity on the body.","Styling Test");
addTest("../Styling/BackgroundColor004.xml","BackgroundColor004","Test tts:backgroundColor attribute using a rgb() color function on the body.","Styling Test");
addTest("../Styling/BackgroundColor005.xml","BackgroundColor005","Test tts:backgroundColor attribute using a rgba() color function using a span.","Styling Test");
addTest("../Styling/BackgroundColor006.xml","BackgroundColor006","Test tts:backgroundColor attribute using a transparent value.","Styling Test");
addTest("../Styling/BackgroundColor007.xml","BackgroundColor007","Test tts:backgroundColor using a named color expression on the div element.","Styling Test");
addTest("../Styling/BackgroundColor008.xml","BackgroundColor008","Test tts:backgroundColor style using a named color expression in style.","Styling Test");
addTest("../Styling/BackgroundColor009.xml","BackgroundColor009","Test tts:backgroundColor using a named color expression on the body.","Styling Test");
addTest("../Styling/Color001.xml","Color001","Test tts:color attribute using a named color expression.","Styling Test");
addTest("../Styling/Color002.xml","Color002","Test tts:color attribute using a hash (#rrggbb) color expression.","Styling Test");
addTest("../Styling/Color003.xml","Color003","Test tts:color attribute using a hash (#rrggbbaa) color expression with opacity.","Styling Test");
addTest("../Styling/Color004.xml","Color004","Test tts:color attribute using a rgb() color function.","Styling Test");
addTest("../Styling/Color005.xml","Color005","Test tts:color attribute using a rgba() color function.","Styling Test");
addTest("../Styling/Color007.xml","Color007","Test tts:color attribute using a transparent value.","Styling Test");
addTest("../Styling/Color008.xml","Color008","Test tts:color attribute with span elements.","Styling Test");
addTest("../Styling/Color009.xml","Color009","Test tts:color style using a named color expression.","Styling Test");
addTest("../Styling/Direction001.xml","Direction001","Test tts:direction attribute with the ltr value in a paragraph.","Styling Test");
addTest("../Styling/Direction002.xml","Direction002","Test tts:direction attribute with the ltr value in the style element.","Styling Test");
addTest("../Styling/Direction003.xml","Direction003","Test tts:direction attribute with the rtl value in the style element.","Styling Test");
addTest("../Styling/Direction004.xml","Direction004","Test tts:direction attribute with the rtl value in a span.","Styling Test");
addTest("../Styling/Direction005.xml","Direction005","Test tts:direction attribute with the rtl value in a paragraph.","Styling Test");
addTest("../Styling/Direction006.xml","Direction006","Test tts:direction attribute with the ltr value in a span.","Styling Test");
addTest("../Styling/Display001.xml","Display001","Test tts:display attribute with the auto value in the style element.","Styling Test");
addTest("../Styling/Display002.xml","Display002","Test tts:display attribute with the none value in a paragraph.","Styling Test");
addTest("../Styling/Display004.xml","Display004","Test tts:display attribute with the none value in the style element.","Styling Test");
addTest("../Styling/DisplayAlign001.xml","DisplayAlign001","Test tts:displayAlign attribute with the before value in the style element.","Styling Test");
addTest("../Styling/DisplayAlign002.xml","DisplayAlign002","Test tts:displayAlign attribute with the after value in the style element.","Styling Test");
addTest("../Styling/DisplayAlign003.xml","DisplayAlign003","Test tts:displayAlign attribute with the center value in the style element.","Styling Test");
addTest("../Styling/DynamicFlow001.xml","DynamicFlow001","Test tts:dynamicFlow attribute with value of 'rollUp', which is equivalent to the value 'out(line,smooth) clear(0.433s)'.","Styling Test");
addTest("../Styling/DynamicFlow002.xml","DynamicFlow002","Test tts:dynamicFlow attribute with value of 'in(word,jump) fill(1.0s) out(line,smooth) clear(break,0.3s)', which is the example shown in Section 8.2.7 of the specification.","Styling Test");
addTest("../Styling/Extent001.xml","Extent001","Test tts:extent attribute with the auto value in the style element.","Styling Test");
addTest("../Styling/Extent002.xml","Extent002","Test tts:extent attribute with two length values in the style element.","Styling Test");
addTest("../Styling/FontFamily001.xml","FontFamily001","Test tts:fontFamily attribute with monospace value.","Styling Test");
addTest("../Styling/FontFamily002.xml","FontFamily002","Test tts:fontFamily attribute with sansSerif value.","Styling Test");
addTest("../Styling/FontFamily003.xml","FontFamily003","Test tts:fontFamily attribute with serif value.","Styling Test");
addTest("../Styling/FontFamily004.xml","FontFamily004","Test tts:fontFamily attribute with monospaceSansSerif value.","Styling Test");
addTest("../Styling/FontFamily005.xml","FontFamily005","Test tts:fontFamily attribute with monospaceSerif value.","Styling Test");
addTest("../Styling/FontFamily006.xml","FontFamily006","Test tts:fontFamily attribute with proportionalSansSerif value.","Styling Test");
addTest("../Styling/FontFamily007.xml","FontFamily007","Test tts:fontFamily attribute with proportionalSerif value.","Styling Test");
addTest("../Styling/FontFamily008.xml","FontFamily008","Test tts:fontFamily attribute with Times New Roman value.","Styling Test");
addTest("../Styling/FontFamily009.xml","FontFamily009","Test tts:fontFamily attribute with InexistantFont, Times New Roman value.","Styling Test");
addTest("../Styling/FontSize001.xml","FontSize001","Test tts:fontSize attribute with px unit.","Styling Test");
addTest("../Styling/FontSize002.xml","FontSize002","Test tts:fontSize attribute with em unit.","Styling Test");
addTest("../Styling/FontSize003.xml","FontSize003","Test tts:fontSize attribute with c unit.","Styling Test");
addTest("../Styling/FontSize004.xml","FontSize004","Test tts:fontSize attribute with percentage.","Styling Test");
addTest("../Styling/FontSize005.xml","FontSize005","Test tts:fontSize attribute with 2 px lengths.","Styling Test");
addTest("../Styling/FontStyle001.xml","FontStyle001","Test tts:fontStyle attribute with normal value.","Styling Test");
addTest("../Styling/FontStyle002.xml","FontStyle002","Test tts:fontStyle attribute with italic value.","Styling Test");
addTest("../Styling/FontStyle003.xml","FontStyle003","Test tts:fontStyle attribute with oblique value.","Styling Test");
addTest("../Styling/FontStyle004.xml","FontStyle004","Test tts:fontStyle attribute with reverseOblique value.","Styling Test");
addTest("../Styling/FontWeight001.xml","FontWeight001","Test tts:fontWeight attribute with normal value.","Styling Test");
addTest("../Styling/FontWeight002.xml","FontWeight002","Test tts:fontWeight attribute with bold value.","Styling Test");
addTest("../Styling/LineHeight001.xml","LineHeight001","Test tts:lineHeight attribute using the normal value in the style element.","Styling Test");
addTest("../Styling/LineHeight002.xml","LineHeight002","Test tts:lineHeight attribute using the normal value in a paragraph.","Styling Test");
addTest("../Styling/LineHeight003.xml","LineHeight003","Test tts:lineHeight attribute using a length value in the style element.","Styling Test");
addTest("../Styling/LineHeight006.xml","LineHeight006","Test tts:lineHeight attribute using an em value.","Styling Test");
addTest("../Styling/LineHeight007.xml","LineHeight007","Test tts:lineHeight attribute using a c value.","Styling Test");
addTest("../Styling/Opacity001.xml","Opacity001","Test tts:opacity attribute with a 1.00 alpha value.","Styling Test");
addTest("../Styling/Opacity002.xml","Opacity002","Test tts:opacity attribute with a 0.50 alpha value.","Styling Test");
addTest("../Styling/Opacity003.xml","Opacity003","Test tts:opacity attribute with a 0.10 alpha value.","Styling Test");
addTest("../Styling/Opacity004.xml","Opacity004","Test tts:opacity attribute on two regions with 1.00 and 0.60 alpha values.","Styling Test");
addTest("../Styling/Origin001.xml","Origin001","Test tts:origin attribute with the auto value.","Styling Test");
addTest("../Styling/Origin002.xml","Origin002","Test tts:origin attribute with two values.","Styling Test");
addTest("../Styling/Overflow001.xml","Overflow001","Test tts:overflow attribute with the hidden value and unwrapped text.","Styling Test");
addTest("../Styling/Overflow002.xml","Overflow002","Test tts:overflow attribute with the visible value and unwrapped text.","Styling Test");
addTest("../Styling/Overflow003.xml","Overflow003","Test tts:overflow attribute with the visible value and wrapped text.","Styling Test");
addTest("../Styling/Overflow004.xml","Overflow004","Test tts:overflow attribute with the hidden value and wrapped text.","Styling Test");
addTest("../Styling/Overflow005.xml","Overflow005","Test tts:overflow attribute with wrapped text.","Styling Test");
addTest("../Styling/Overflow006.xml","Overflow006","Test tts:overflow attribute with the dynamic flow of 'none' with wrapped text.","Styling Test");
addTest("../Styling/Padding001.xml","Padding001","Test tts:padding attribute with one value.","Styling Test");
addTest("../Styling/Padding002.xml","Padding002","Test tts:padding attribute with two values.","Styling Test");
addTest("../Styling/Padding003.xml","Padding003","Test tts:padding attribute with three values.","Styling Test");
addTest("../Styling/Padding004.xml","Padding004","Test tts:padding attribute with four values.","Styling Test");
addTest("../Styling/Padding006.xml","Padding006","Test tts:padding attribute with em values.","Styling Test");
addTest("../Styling/Padding007.xml","Padding007","Test tts:padding attribute with em values.","Styling Test");
addTest("../Styling/Padding008.xml","Padding008","Test tts:padding attribute with c values.","Styling Test");
addTest("../Styling/ShowBackground001.xml","ShowBackground001","Test tts:showBackground attribute with the always value.","Styling Test");
addTest("../Styling/ShowBackground002.xml","ShowBackground002","Test tts:showBackground attribute with the whenActive value.","Styling Test");
addTest("../Styling/Style001.xml","Style001","Test style attributes in the style element.","Styling Test");
addTest("../Styling/Styling001.xml","Styling001","Test two different styles in the style element.","Styling Test");
addTest("../Styling/TextAlign001.xml","TextAlign001","Test tts:textAlign attribute with the right value in a paragraph.","Styling Test");
addTest("../Styling/TextAlign002.xml","TextAlign002","Test tts:textAlign attribute with the left value in a paragraph.","Styling Test");
addTest("../Styling/TextAlign003.xml","TextAlign003","Test tts:textAlign attribute with the center value in the style element.","Styling Test");
addTest("../Styling/TextAlign004.xml","TextAlign004","Test tts:textAlign attribute with the center value in a pargraph.","Styling Test");
addTest("../Styling/TextAlign005.xml","TextAlign005","Test tts:textAlign attribute with the start value in the style element.","Styling Test");
addTest("../Styling/TextAlign006.xml","TextAlign006","Test tts:textAlign attribute with the end value.","Styling Test");
addTest("../Styling/TextDecoration001.xml","TextDecoration001","Test tts:textDecoration attribute using the none value.","Styling Test");
addTest("../Styling/TextDecoration002.xml","TextDecoration002","Test tts:textDecoration attribute using the underline value in a span.","Styling Test");
addTest("../Styling/TextDecoration003.xml","TextDecoration003","Test tts:textDecoration attribute using the none value in a span.","Styling Test");
addTest("../Styling/TextDecoration004.xml","TextDecoration004","Test tts:textDecoration attribute using the underline value in style.","Styling Test");
addTest("../Styling/TextDecoration005.xml","TextDecoration005","Test tts:textDecoration attribute with the underline value in a div.","Styling Test");
addTest("../Styling/TextDecoration006.xml","TextDecoration006","Test tts:textDecoration attribute with the underline value in the body.","Styling Test");
addTest("../Styling/TextDecoration007.xml","TextDecoration007","Test tts:textDecoration attribute with the noUnderline value.","Styling Test");
addTest("../Styling/TextDecoration008.xml","TextDecoration008","Test tts:textDecoration attribute with the lineThrough value.","Styling Test");
addTest("../Styling/TextDecoration009.xml","TextDecoration009","Test tts:textDecoration attribute with the noLineThrough value.","Styling Test");
addTest("../Styling/TextDecoration010.xml","TextDecoration010","Test tts:textDecoration attribute with the overline value.","Styling Test");
addTest("../Styling/TextDecoration011.xml","TextDecoration011","Test tts:textDecoration attribute with the noOverline value.","Styling Test");
addTest("../Styling/TextDecoration012.xml","TextDecoration012","Test tts:textDecoration attribute with underline and line through.","Styling Test");
addTest("../Styling/TextDecoration013.xml","TextDecoration013","Test tts:textDecoration attribute with underline, an overline and line through.","Styling Test");
addTest("../Styling/TextOutline001.xml","TextOutline001","Test tts:textOutline attribute using the none value.","Styling Test");
addTest("../Styling/TextOutline002.xml","TextOutline002","Test tts:textOutline attribute using a value for outline thickness.","Styling Test");
addTest("../Styling/TextOutline003.xml","TextOutline003","Test tts:textOutline attribute using values for outline thickness and blur radius.","Styling Test");
addTest("../Styling/TextOutline004.xml","TextOutline004","Test tts:textOutline attribute using values for color and outline thickness.","Styling Test");
addTest("../Styling/TextOutline005.xml","TextOutline005","Test tts:textOutline attribute using values for color, outline thickness and blur radius.","Styling Test");
addTest("../Styling/UnicodeBidi001.xml","UnicodeBidi001","Test tts:unicodeBidi attribute with the normal value.","Styling Test");
addTest("../Styling/UnicodeBidi002.xml","UnicodeBidi002","Test tts:unicodeBidi attribute with the bidiOverride value in a span.","Styling Test");
addTest("../Styling/UnicodeBidi003.xml","UnicodeBidi003","Test tts:unicodeBidi attribute with the bidiOverride value.","Styling Test");
addTest("../Styling/UnicodeBidi005.xml","UnicodeBidi005","Test tts:unicodeBidi attribute with the embed value.","Styling Test");
addTest("../Styling/Visibility001.xml","Visibility001","Test tts:visibility attribute using the visible value in the style element.","Styling Test");
addTest("../Styling/Visibility002.xml","Visibility002","Test tts:visibility attribute using the visible value.","Styling Test");
addTest("../Styling/Visibility003.xml","Visibility003","Test tts:visibility attribute using the hidden value.","Styling Test");
addTest("../Styling/WrapOption001.xml","WrapOption001","Test tts:wrapOption attribute with the wrap value.","Styling Test");
addTest("../Styling/WrapOption002.xml","WrapOption002","Test tts:wrapOption attribute with the noWrap value.","Styling Test");
addTest("../Styling/WrapOption003.xml","WrapOption003","Test tts:wrapOption attribute with the noWrap value.","Styling Test");
addTest("../Styling/WrapOption004.xml","WrapOption004","Test tts:wrapOption attribute with the wrap value in a span.","Styling Test");
addTest("../Styling/WrapOption005.xml","WrapOption005","Test tts:wrapOption attribute with the noWrap value in a span.","Styling Test");
addTest("../Styling/WritingMode001.xml","WritingMode001","Test tts:writingMode attribute with the lrtb value.","Styling Test");
addTest("../Styling/WritingMode002.xml","WritingMode002","Test tts:writingMode attribute with the rltb value.","Styling Test");
addTest("../Styling/WritingMode003.xml","WritingMode003","Test tts:writingMode attribute with the rltb value using tts:unicodeBidi and tts:direction to reverse the direction of the words.","Styling Test");
addTest("../Styling/WritingMode004.xml","WritingMode004","Test tts:writingMode attribute with the tbrl value.","Styling Test");
addTest("../Styling/WritingMode005.xml","WritingMode005","Test tts:writingMode attribute with the tblr value.","Styling Test");
addTest("../Styling/WritingMode006.xml","WritingMode006","Test tts:writingMode attribute with the lr value.","Styling Test");
addTest("../Styling/WritingMode007.xml","WritingMode007","Test tts:writingMode attribute with the rl value.","Styling Test");
addTest("../Styling/WritingMode008.xml","WritingMode008","Test tts:writingMode attribute with the rl value using tts:unicodeBidi and tts:direction to reverse the direction of the words.","Styling Test");
addTest("../Styling/WritingMode009.xml","WritingMode009","Test tts:writingMode attribute with the tb value.","Styling Test");
addTest("../Styling/ZIndex001.xml","ZIndex001","Test tts:zIndex attribute with different integer values.","Styling Test");
addTest("../Styling/ZIndex002.xml","ZIndex002","Test tts:zIndex attribute with identical integer values.","Styling Test");
addTest("../Styling/ZIndex003.xml","ZIndex003","Test tts:zIndex attribute with the auto value.","Styling Test");
addTest("../Metadata/Agent004.xml","Agent004","Test ttm:agent element","Metadata Test");
addTest("../Metadata/Copyright003.xml","Copyright003","Test ttm:copyright element","Metadata Test");
addTest("../Metadata/Desc002.xml","Desc002","Test ttm:desc element","Metadata Test");
addTest("../Metadata/Name005.xml","Name005","Test ttm:name element","Metadata Test");
addTest("../Metadata/Role006.xml","Role006","Test ttm:role attribute","Metadata Test");
addTest("../Metadata/Title001.xml","Title001","Test ttm:title element","Metadata Test");
addTest("../Timing/BasicTimeContainment001.xml","BasicTimeContainment001","Basic par containment","Timing Test");
addTest("../Timing/BasicTimeContainment002.xml","BasicTimeContainment002","Basic par containment","Timing Test");
addTest("../Timing/BasicTimeContainment003.xml","BasicTimeContainment003","Begin after parent ends","Timing Test");
addTest("../Timing/BasicTimeContainment004.xml","BasicTimeContainment004","Begin after parent ends","Timing Test");
addTest("../Timing/BasicTiming001.xml","BasicTiming001","Testing basic time expressions on par","Timing Test");
addTest("../Timing/BasicTiming002.xml","BasicTiming002","Testing basic time expressions on par","Timing Test");
addTest("../Timing/BasicTiming003.xml","BasicTiming003","Testing basic time expressions on seq","Timing Test");
addTest("../Timing/BasicTiming006.xml","BasicTiming006","Testing default sequential timing on anonymous spans in par context","Timing Test");
addTest("../Timing/BasicTiming007.xml","BasicTiming007","Testing default zero duration of anonymous spans in a seq context","Timing Test");
addTest("../Timing/BasicTiming008.xml","BasicTiming008","Testing deeply nested seq context","Timing Test");
addTest("../Timing/BasicTiming010.xml","BasicTiming010","Testing basic time expressions on span","Timing Test");
addTest("../Timing/BasicTiming011.xml","BasicTiming011","Using basic time expressions to simulate rollup","Timing Test");
addTest("../Timing/BasicTiming012.xml","BasicTiming012","Using basic time expressions to simulate crawl","Timing Test");
addTest("../Timing/BeginDur001.xml","BeginDur001","Test the begin and dur attributes on p elements.","Timing Test");
addTest("../Timing/BeginEnd001.xml","BeginEnd001","Test the begin and end attributes on p elements.","Timing Test");
addTest("../Timing/BeginEnd002.xml","BeginEnd002","Test the begin attribute with no end or dur attribute on p elements.","Timing Test");
addTest("../Timing/BeginEnd003.xml","BeginEnd003","Test the begin and end attributes on p elements in random order. @@Is it a valid test?","Timing Test");
addTest("../Timing/FixedBeginEnd002.xml","FixedBeginEnd002","Testing more end truncation on seq","Timing Test");
addTest("../Timing/MediaParTiming001.xml","MediaParTiming001","Testing multiple elements in par","Timing Test");
addTest("../Timing/MediaParTiming003.xml","MediaParTiming003","Testing par in seq and default timing attributes","Timing Test");
addTest("../Timing/MediaSeqTiming001.xml","MediaSeqTiming001","Testing basic seq and time expressions","Timing Test");
addTest("../Timing/MediaSeqTiming002.xml","MediaSeqTiming002","Testing seq in seq and default timing attributes","Timing Test");
addTest("../Timing/MediaSeqTiming003.xml","MediaSeqTiming003","Testing default duration in seq context","Timing Test");
addTest("../Timing/MediaSeqTiming004.xml","MediaSeqTiming004","Testing dur truncation","Timing Test");
addTest("../Timing/MediaSeqTiming005.xml","MediaSeqTiming005","Testing end truncation on seq","Timing Test");
addTest("../Timing/MediaSeqTiming006.xml","MediaSeqTiming006","Testing end truncation on seq","Timing Test");
addTest("../Animation/Animation001.xml","Animation001","Set backgroundColor","Animation Test");
addTest("../Animation/Animation002.xml","Animation002","Set color","Animation Test");
addTest("../Animation/Animation003.xml","Animation003","Set display","Animation Test");
addTest("../Animation/Animation004.xml","Animation004","Set fontFamily","Animation Test");
addTest("../Animation/Animation005.xml","Animation005","Set fontSize","Animation Test");
addTest("../Animation/Animation006.xml","Animation006","Set fontStyle","Animation Test");
addTest("../Animation/Animation007.xml","Animation007","Set fontWeight","Animation Test");
addTest("../Animation/Animation008.xml","Animation008","Set lineHeight","Animation Test");
addTest("../Animation/Animation012.xml","Animation012","Set textAlign","Animation Test");
addTest("../Animation/Animation013.xml","Animation013","Set textDecoration, also tests multiple sets in action","Animation Test");
addTest("../Animation/Animation014.xml","Animation014","Set textOutline","Animation Test");
addTest("../Animation/Animation015.xml","Animation015","Set visibility","Animation Test");
addTest("../Animation/Animation016.xml","Animation016","Set wrapOption","Animation Test");
addTest("../Animation/Animation017.xml","Animation017","Set zIndex","Animation Test");
addTest("../Animation/BasicTiming004.xml","BasicTiming004","Testing basic time expressions on set","Animation Test");
addTest("../Animation/BasicTiming005.xml","BasicTiming005","Testing multiple set expressions in par context","Animation Test");
addTest("../Animation/MediaParTiming002.xml","MediaParTiming002","Testing end truncation on par","Animation Test");
addTest("../Animation/MediaSeqTiming007.xml","MediaSeqTiming007","Testing more end truncation on seq","Animation Test");
