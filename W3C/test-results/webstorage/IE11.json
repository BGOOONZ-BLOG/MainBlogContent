{
  "results": [
    {
      "test": "/webstorage/event_constructor.html",
      "subtests": [
        {
          "name": "The initial values of storage event properties.",
          "status": "FAIL",
          "message": "Object doesn't support this action"
        },
        {
          "name": "storageeventinit test",
          "status": "NOTRUN",
          "message": null
        }
      ],
      "status": "TIMEOUT",
      "message": null
    },
    {
      "test": "/webstorage/event_constructor_eventinit.html",
      "subtests": [
        {
          "name": "Construct StorageEvent with StorageEventInit.",
          "status": "FAIL",
          "message": "Object doesn't support this action"
        },
        {
          "name": "StorageEvent constructor and nulls",
          "status": "NOTRUN",
          "message": null
        }
      ],
      "status": "TIMEOUT",
      "message": null
    },
    {
      "test": "/webstorage/event_local_key.html",
      "subtests": [
        {
          "name": "key property test of local event",
          "status": "FAIL",
          "message": "assert_equals: expected \"name\" but got \"\""
        },
        {
          "name": "Local event is fired due to an invocation of the setItem(), clear() methods.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/event_local_newvalue.html",
      "subtests": [
        {
          "name": "newValue property test of local event",
          "status": "FAIL",
          "message": "assert_equals: expected \"user1\" but got \"\""
        },
        {
          "name": "Local event is fired due to an invocation of the setItem(), clear() methods.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/event_local_oldvalue.html",
      "subtests": [
        {
          "name": "oldValue property test of local event",
          "status": "FAIL",
          "message": "assert_equals: expected (object) null but got (string) \"\""
        },
        {
          "name": "Local event is fired due to an invocation of the setItem(), clear() methods.",
          "status": "OK",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/event_local_storagearea.html",
      "subtests": [
        {
          "name": "storageArea property test of local event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Local event is fired due to an invocation of the setItem() method.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/event_local_storageeventinit.html",
      "subtests": [
        {
          "name": "Storage event is fired due to set values for StorageEventInit.",
          "status": "FAIL",
          "message": "Object doesn't support this action"
        },
        {
          "name": "storageeventinit test",
          "status": "NOTRUN",
          "message": null
        }
      ],
      "status": "TIMEOUT",
      "message": null
    },
    {
      "test": "/webstorage/event_local_url.html",
      "subtests": [
        {
          "name": "url property test of local event",
          "status": "FAIL",
          "message": "assert_equals: expected \"http://localhost:8080/webstorage/iframe/local_set_item_iframe.html\" but got \"http://localhost:8080/webstorage/event_local_url.html\""
        },
        {
          "name": "Local event is fired due to an invocation of the setItem() method.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/event_session_key.html",
      "subtests": [
        {
          "name": "key property test of session event",
          "status": "FAIL",
          "message": "assert_equals: expected \"name\" but got \"\""
        },
        {
          "name": "Session event is fired due to an invocation of the setItem(), clear() methods.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/event_session_newvalue.html",
      "subtests": [
        {
          "name": "newvalue property test of session event",
          "status": "FAIL",
          "message": "assert_equals: expected \"user1\" but got \"\""
        },
        {
          "name": "Session event is fired due to an invocation of the setItem(), clear() methods.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/event_session_oldvalue.html",
      "subtests": [
        {
          "name": "oldvalue property test of session event",
          "status": "FAIL",
          "message": "assert_equals: expected (object) null but got (string) \"\""
        },
        {
          "name": "Session event is fired due to an invocation of the setItem(), clear() methods.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/event_session_storagearea.html",
      "subtests": [
        {
          "name": "storageArea property test of session event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Session event is fired due to an invocation of the setItem() method.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/event_session_storageeventinit.html",
      "subtests": [
        {
          "name": "Storage event is fired due to set values for StorageEventInit.",
          "status": "FAIL",
          "message": "Object doesn't support this action"
        },
        {
          "name": "storageeventinit test",
          "status": "NOTRUN",
          "message": null
        }
      ],
      "status": "TIMEOUT",
      "message": null
    },
    {
      "test": "/webstorage/event_session_url.html",
      "subtests": [
        {
          "name": "url property test of session event",
          "status": "FAIL",
          "message": "assert_equals: expected \"http://w3c-test.org/webstorage/iframe/session_set_item_iframe.html\" but got \"http://w3c-test.org/webstorage/event_session_url.html\""
        },
        {
          "name": "Session event is fired due to an invocation of the setItem() method.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/idlharness.html",
      "subtests": [
        {
          "name": "Window interface: attribute sessionStorage",
          "status": "FAIL",
          "message": "assert_own_property: The global object must have a property \"sessionStorage\" expected property \"sessionStorage\" missing"
        },
        {
          "name": "Window interface: attribute localStorage",
          "status": "FAIL",
          "message": "assert_own_property: The global object must have a property \"localStorage\" expected property \"localStorage\" missing"
        },
        {
          "name": "Storage interface: existence and properties of interface object",
          "status": "FAIL",
          "message": "assert_equals: class string of Storage expected \"[object Function]\" but got \"[object Storage]\""
        },
        {
          "name": "Storage interface object length",
          "status": "FAIL",
          "message": "assert_own_property: expected property \"length\" missing"
        },
        {
          "name": "Storage interface: existence and properties of interface prototype object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Storage interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Storage interface: attribute length",
          "status": "FAIL",
          "message": "assert_true: property is not enumerable expected true got false"
        },
        {
          "name": "Storage interface: operation key(unsigned long)",
          "status": "FAIL",
          "message": "assert_true: property is not enumerable expected true got false"
        },
        {
          "name": "Storage interface: operation getItem(DOMString)",
          "status": "FAIL",
          "message": "assert_true: property is not enumerable expected true got false"
        },
        {
          "name": "Storage interface: operation setItem(DOMString,DOMString)",
          "status": "FAIL",
          "message": "assert_true: property is not enumerable expected true got false"
        },
        {
          "name": "Storage interface: operation removeItem(DOMString)",
          "status": "FAIL",
          "message": "assert_true: property is not enumerable expected true got false"
        },
        {
          "name": "Storage interface: operation clear()",
          "status": "FAIL",
          "message": "assert_true: property is not enumerable expected true got false"
        },
        {
          "name": "Storage must be primary interface of window.localStorage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Stringification of window.localStorage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Storage interface: window.localStorage must inherit property \"length\" with the proper type (0)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Storage interface: window.localStorage must inherit property \"key\" with the proper type (1)",
          "status": "FAIL",
          "message": "assert_inherits: property \"key\" found on object expected in prototype chain"
        },
        {
          "name": "Storage interface: calling key(unsigned long) on window.localStorage with too few arguments must throw TypeError",
          "status": "FAIL",
          "message": "assert_inherits: property \"key\" found on object expected in prototype chain"
        },
        {
          "name": "Storage interface: window.localStorage must inherit property \"getItem\" with the proper type (2)",
          "status": "FAIL",
          "message": "assert_inherits: property \"getItem\" found on object expected in prototype chain"
        },
        {
          "name": "Storage interface: calling getItem(DOMString) on window.localStorage with too few arguments must throw TypeError",
          "status": "FAIL",
          "message": "assert_inherits: property \"getItem\" found on object expected in prototype chain"
        },
        {
          "name": "Storage interface: window.localStorage must inherit property \"setItem\" with the proper type (3)",
          "status": "FAIL",
          "message": "assert_inherits: property \"setItem\" found on object expected in prototype chain"
        },
        {
          "name": "Storage interface: calling setItem(DOMString,DOMString) on window.localStorage with too few arguments must throw TypeError",
          "status": "FAIL",
          "message": "assert_inherits: property \"setItem\" found on object expected in prototype chain"
        },
        {
          "name": "Storage interface: window.localStorage must inherit property \"removeItem\" with the proper type (4)",
          "status": "FAIL",
          "message": "assert_inherits: property \"removeItem\" found on object expected in prototype chain"
        },
        {
          "name": "Storage interface: calling removeItem(DOMString) on window.localStorage with too few arguments must throw TypeError",
          "status": "FAIL",
          "message": "assert_inherits: property \"removeItem\" found on object expected in prototype chain"
        },
        {
          "name": "Storage interface: window.localStorage must inherit property \"clear\" with the proper type (5)",
          "status": "FAIL",
          "message": "assert_inherits: property \"clear\" found on object expected in prototype chain"
        },
        {
          "name": "StorageEvent interface: existence and properties of interface object",
          "status": "FAIL",
          "message": "assert_equals: class string of StorageEvent expected \"[object Function]\" but got \"[object StorageEvent]\""
        },
        {
          "name": "StorageEvent interface object length",
          "status": "FAIL",
          "message": "assert_own_property: expected property \"length\" missing"
        },
        {
          "name": "StorageEvent interface: existence and properties of interface prototype object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "StorageEvent interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "StorageEvent interface: attribute key",
          "status": "PASS",
          "message": null
        },
        {
          "name": "StorageEvent interface: attribute oldValue",
          "status": "PASS",
          "message": null
        },
        {
          "name": "StorageEvent interface: attribute newValue",
          "status": "PASS",
          "message": null
        },
        {
          "name": "StorageEvent interface: attribute url",
          "status": "PASS",
          "message": null
        },
        {
          "name": "StorageEvent interface: attribute storageArea",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/missing_arguments.html",
      "subtests": [
        {
          "name": "Should throw TypeError for function \"function() { localStorage.key(); }\".",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Should throw TypeError for function \"function() { localStorage.getItem(); }\".",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Should throw TypeError for function \"function() { localStorage.setItem(); }\".",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Should throw TypeError for function \"function() { localStorage.setItem(\"a\"); }\".",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Should throw TypeError for function \"function() { localStorage.removeItem(); }\".",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Should throw TypeError for function \"function() { sessionStorage.key(); }\".",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Should throw TypeError for function \"function() { sessionStorage.getItem(); }\".",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Should throw TypeError for function \"function() { sessionStorage.setItem(); }\".",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Should throw TypeError for function \"function() { sessionStorage.setItem(\"a\"); }\".",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Should throw TypeError for function \"function() { sessionStorage.removeItem(); }\".",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Should throw TypeError for function \"function() { new StorageEvent(); }\".",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_builtins.html",
      "subtests": [
        {
          "name": "Builtins in localStorage",
          "status": "FAIL",
          "message": "Function expected"
        },
        {
          "name": "Builtins in sessionStorage",
          "status": "FAIL",
          "message": "assert_array_equals: b property 0, expected function \"\nfunction key() {\n    [native code]\n}\n\" but got \"key\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_clear.html",
      "subtests": [
        {
          "name": "Clear in localStorage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Clear in sessionStorage",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_getitem.html",
      "subtests": [
        {
          "name": "Get value by getIten(key) and named access in localStorage.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "All items should be added to localStorage.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Named access to localStorage should be correct",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.getItem should be correct",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Get value by getIten(key) and named access in sessionStorage.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "All items should be added to sessionStorage.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Named access to sessionStorage should be correct",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.getItem should be correct",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_in.html",
      "subtests": [
        {
          "name": "The in operator in localStorage: property access",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The in operator in localStorage: method access",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The in operator in sessionStorage: property access",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The in operator in sessionStorage: method access",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_indexing.html",
      "subtests": [
        {
          "name": "Indexed getter on localStorage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Getting number properties on localStorage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Getting number-valued string properties on localStorage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Getting existing number-valued properties on localStorage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Indexed getter on sessionStorage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Getting number properties on sessionStorage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Getting number-valued string properties on sessionStorage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Getting existing number-valued properties on sessionStorage",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_key.html",
      "subtests": [
        {
          "name": "localStorage.key",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.key(0) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.key(4294967296) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.key(1) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.key(4294967297) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.key(2) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.key(4294967298) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.key(3) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.key(4294967299) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.key() should return null for out-of-range arguments.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.key with value changes",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key(0) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key(4294967296) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key(1) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key(4294967297) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key(2) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key(4294967298) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key(3) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key(4294967299) should return the right thing.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key() should return null for out-of-range arguments.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key with value changes",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_key_empty_string.html",
      "subtests": [
        {
          "name": "localStorage.key with empty string",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.key with empty string",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_length.html",
      "subtests": [
        {
          "name": "localStorage.length (method access)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.length (proprty access)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.length (method access)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.length (proprty access)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_removeitem.html",
      "subtests": [
        {
          "name": "localStorage.removeItem()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "delete localStorage[]",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.removeItem(null)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.removeItem(undefined)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.removeItem()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "delete sessionStorage[]",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.removeItem(null)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.removeItem(undefined)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_set_value_enumerate.html",
      "subtests": [
        {
          "name": "enumerate a localStorage object with the key and get the values",
          "status": "PASS",
          "message": null
        },
        {
          "name": "enumerate a sessionStorage object with the key and get the values",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_setitem.html",
      "subtests": [
        {
          "name": "localStorage.setItem()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage[]",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage[] update",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.setItem(_, null)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage[] = null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.setItem(_, undefined)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage[] = undefined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.setItem({ throws })",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage[] = { throws }",
          "status": "FAIL",
          "message": "assert_throws: function \"function() { storage[\"age\"] = ...\" did not throw"
        },
        {
          "name": "localStorage.setItem(undefined, _)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage[undefined]",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage.setItem(null, _)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "localStorage[null]",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.setItem()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage[]",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage[] update",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.setItem(_, null)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage[] = null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.setItem(_, undefined)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage[] = undefined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.setItem({ throws })",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage[] = { throws }",
          "status": "FAIL",
          "message": "assert_throws: function \"function() { storage[\"age\"] = ...\" did not throw"
        },
        {
          "name": "sessionStorage.setItem(undefined, _)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage[undefined]",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage.setItem(null, _)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "sessionStorage[null]",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_local_setitem_quotaexceedederr.html",
      "subtests": [
        {
          "name": "Throws QuotaExceededError when the quota of 800 has been exceeded",
          "status": "FAIL",
          "message": "Crashed"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/webstorage/storage_session_setitem_quotaexceedederr.html",
      "subtests": [
        {
          "name": "Throws QuotaExceededError when the quota of 800 has been exceeded",
          "status": "FAIL",
          "message": "Crashed"
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}
