{
  "results": [
    {
      "test": "/eventsource/dedicated-worker/eventsource-close.htm",
      "subtests": [
        {
          "name": "dedicated worker - EventSource: close()",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: getExtractedNovelData is not defined"
    },
    {
      "test": "/eventsource/dedicated-worker/eventsource-constructor-non-same-origin.htm",
      "subtests": [
        {
          "name": "dedicated worker - EventSource: constructor (act as if there is a network error) (http://example.not/)",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        },
        {
          "name": "dedicated worker - EventSource: constructor (act as if there is a network error) (https://example.not/test)",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        },
        {
          "name": "dedicated worker - EventSource: constructor (act as if there is a network error) (ftp://example.not/)",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        },
        {
          "name": "dedicated worker - EventSource: constructor (act as if there is a network error) (about:blank)",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        },
        {
          "name": "dedicated worker - EventSource: constructor (act as if there is a network error) (mailto:whatwg@awesome.example)",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        },
        {
          "name": "dedicated worker - EventSource: constructor (act as if there is a network error) (javascript:alert('FAIL'))",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: getExtractedNovelData is not defined"
    },
    {
      "test": "/eventsource/dedicated-worker/eventsource-constructor-url-bogus.htm",
      "subtests": [
        {
          "name": "dedicated worker - EventSource: constructor (invalid URL)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/dedicated-worker/eventsource-eventtarget.htm",
      "subtests": [
        {
          "name": "dedicated worker - EventSource: addEventListener()",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/dedicated-worker/eventsource-onmesage.htm",
      "subtests": [
        {
          "name": "dedicated worker - EventSource: onmessage",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/dedicated-worker/eventsource-onopen.htm",
      "subtests": [
        {
          "name": "dedicated worker - EventSource: onopen (announcing the connection)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/dedicated-worker/eventsource-prototype.htm",
      "subtests": [
        {
          "name": "dedicated worker - EventSource: prototype et al",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/dedicated-worker/eventsource-url.htm",
      "subtests": [
        {
          "name": "dedicated worker - EventSource: url",
          "status": "FAIL",
          "message": "Cannot call method 'substr' of undefined(stack: TypeError: Cannot call method 'substr' of undefined\n    at Object.<anonymous> (http://www.w3c-test.org/eventsource/dedicated-worker/eventsource-url.htm:27:37)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at Worker.worker.onmessage (http://www.w3c-test.org/eventsource/dedicated-worker/eventsource-url.htm:25:16))"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/event-data.html",
      "subtests": [
        {
          "name": "EventSource: lines and data parsing",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-close.htm",
      "subtests": [
        {
          "name": "EventSource: close()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: close(), test events",
          "status": "FAIL",
          "message": "assert_unreached: Dunno what to do with message number 3 Reached unreachable code"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-constructor-document-domain.htm",
      "subtests": [],
      "status": "TIMEOUT",
      "message": ""
    },
    {
      "test": "/eventsource/eventsource-constructor-non-same-origin.htm",
      "subtests": [
        {
          "name": "EventSource: constructor (act as if there is a network error) (http://example.not/)",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: constructor (act as if there is a network error) (https://example.not/test)",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: constructor (act as if there is a network error) (ftp://example.not/)",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: constructor (act as if there is a network error) (about:blank)",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: constructor (act as if there is a network error) (mailto:whatwg@awesome.example)",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: constructor (act as if there is a network error) (javascript:alert('FAIL'))",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-constructor-stringify.htm",
      "subtests": [
        {
          "name": "EventSource: stringify argument, object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: stringify argument, 1",
          "status": "FAIL",
          "message": "assert_regexp_match: expected object \"/\\/1$/\" but got undefined"
        },
        {
          "name": "EventSource: stringify argument, null",
          "status": "FAIL",
          "message": "assert_regexp_match: expected object \"/\\/null$/\" but got undefined"
        },
        {
          "name": "EventSource: stringify argument, undefined",
          "status": "FAIL",
          "message": "assert_regexp_match: expected object \"/\\/undefined$/\" but got undefined"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-constructor-url-bogus.htm",
      "subtests": [
        {
          "name": "EventSource: constructor (invalid URL)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-constructor-url-multi-window.htm",
      "subtests": [
        {
          "name": "EventSource: resolving URLs",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-cross-origin.htm",
      "subtests": [
        {
          "name": "EventSource: cross-origin basic use",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: cross-origin redirect use",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: cross-origin redirect use recon",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: cross-origin allow-origin: http://example.org should fail",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: cross-origin allow-origin:'' should fail",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: cross-origin No allow-origin should fail",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-eventtarget.htm",
      "subtests": [
        {
          "name": "EventSource: addEventListener()",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-onmessage.htm",
      "subtests": [
        {
          "name": "EventSource: onmessage",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-onopen.htm",
      "subtests": [
        {
          "name": "EventSource: onopen (announcing the connection)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-prototype.htm",
      "subtests": [
        {
          "name": "EventSource: prototype et al",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-reconnect.htm",
      "subtests": [
        {
          "name": "EventSource: reconnection 200",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: reconnection, test reconnection events",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/eventsource-url.htm",
      "subtests": [
        {
          "name": "EventSource: url",
          "status": "FAIL",
          "message": "Cannot call method 'substr' of undefined(stack: TypeError: Cannot call method 'substr' of undefined\n    at Object.<anonymous> (http://www.w3c-test.org/eventsource/eventsource-url.htm:14:34)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at test (http://www.w3c-test.org/resources/testharness.js:73:18)\n    at http://www.w3c-test.org/eventsource/eventsource-url.htm:11:7)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-bom-2.htm",
      "subtests": [
        {
          "name": "EventSource: Double BOM",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-bom.htm",
      "subtests": [
        {
          "name": "EventSource: BOM",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-comments.htm",
      "subtests": [
        {
          "name": "EventSource: comment fest",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-data-before-final-empty-line.htm",
      "subtests": [
        {
          "name": "EventSource: a data before final empty line",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-field-data.htm",
      "subtests": [
        {
          "name": "EventSource: data field parsing",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-field-event-empty.htm",
      "subtests": [
        {
          "name": "EventSource: empty \"event\" field",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-field-event.htm",
      "subtests": [
        {
          "name": "EventSource: custom event name",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-field-id-2.htm",
      "subtests": [
        {
          "name": "EventSource: Last-Event-ID (2)",
          "status": "FAIL",
          "message": "assert_equals: expected \"&\" but got \"…\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-field-id.htm",
      "subtests": [
        {
          "name": "EventSource: Last-Event-ID",
          "status": "FAIL",
          "message": "assert_unreached: Reached unreachable code"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-field-parsing.htm",
      "subtests": [
        {
          "name": "EventSource: field parsing",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-field-retry-bogus.htm",
      "subtests": [
        {
          "name": "EventSource: \"retry\" field (bogus)",
          "status": "FAIL",
          "message": "assert_true: expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-field-retry-empty.htm",
      "subtests": [
        {
          "name": "EventSource: empty retry field",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-field-retry.htm",
      "subtests": [
        {
          "name": "EventSource: \"retry\" field",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-field-unknown.htm",
      "subtests": [
        {
          "name": "EventSource: unknown fields and parsing fun",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-leading-space.htm",
      "subtests": [
        {
          "name": "EventSource: leading space",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-mime-bogus.htm",
      "subtests": [
        {
          "name": "EventSource: bogus MIME type",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-mime-trailing-semicolon.htm",
      "subtests": [
        {
          "name": "EventSource: MIME type with trailing ;",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-mime-valid-bogus.htm",
      "subtests": [
        {
          "name": "EventSource: incorrect valid MIME type",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-newlines.htm",
      "subtests": [
        {
          "name": "EventSource: newline fest",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-null-character.html",
      "subtests": [
        {
          "name": "EventSource: null character in response",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/format-utf-8.htm",
      "subtests": [
        {
          "name": "EventSource: always UTF-8",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/interfaces.html",
      "subtests": [
        {
          "name": "EventSource interface: existence and properties of interface object",
          "status": "FAIL",
          "message": "assert_false: window's property \"EventSource\" is enumerable expected false got true"
        },
        {
          "name": "EventSource interface object length",
          "status": "FAIL",
          "message": "assert_equals: wrong value for EventSource.length expected 1 but got 0"
        },
        {
          "name": "EventSource interface: existence and properties of interface prototype object",
          "status": "FAIL",
          "message": "Cannot call method 'has_extended_attribute' of undefined(stack: TypeError: Cannot call method 'has_extended_attribute' of undefined\n    at IdlObject.<anonymous> (http://www.w3c-test.org/resources/idlharness.js:1120:23)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at test (http://www.w3c-test.org/resources/testharness.js:73:18)\n    at IdlObject.IdlInterface.test_self (http://www.w3c-test.org/resources/idlharness.js:1071:5)\n    at IdlObject.IdlExceptionOrInterface.test (http://www.w3c-test.org/resources/idlharness.js:582:14)\n    at IdlArray.test (http://www.w3c-test.org/resources/idlharness.js:311:28)\n    at window.onload (http://www.w3c-test.org/eventsource/interfaces.html:55:11))"
        },
        {
          "name": "EventSource interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource interface: attribute url",
          "status": "FAIL",
          "message": "assert_true: The prototype object must have a property \"url\" expected true got false"
        },
        {
          "name": "EventSource interface: attribute withCredentials",
          "status": "FAIL",
          "message": "assert_true: The prototype object must have a property \"withCredentials\" expected true got false"
        },
        {
          "name": "EventSource interface: constant CONNECTING on interface object",
          "status": "FAIL",
          "message": "assert_false: property is configurable expected false got true"
        },
        {
          "name": "EventSource interface: constant CONNECTING on interface prototype object",
          "status": "FAIL",
          "message": "assert_false: property is configurable expected false got true"
        },
        {
          "name": "EventSource interface: constant OPEN on interface object",
          "status": "FAIL",
          "message": "assert_false: property is configurable expected false got true"
        },
        {
          "name": "EventSource interface: constant OPEN on interface prototype object",
          "status": "FAIL",
          "message": "assert_false: property is configurable expected false got true"
        },
        {
          "name": "EventSource interface: constant CLOSED on interface object",
          "status": "FAIL",
          "message": "assert_false: property is configurable expected false got true"
        },
        {
          "name": "EventSource interface: constant CLOSED on interface prototype object",
          "status": "FAIL",
          "message": "assert_false: property is configurable expected false got true"
        },
        {
          "name": "EventSource interface: attribute readyState",
          "status": "FAIL",
          "message": "assert_true: The prototype object must have a property \"readyState\" expected true got false"
        },
        {
          "name": "EventSource interface: attribute onopen",
          "status": "FAIL",
          "message": "assert_true: The prototype object must have a property \"onopen\" expected true got false"
        },
        {
          "name": "EventSource interface: attribute onmessage",
          "status": "FAIL",
          "message": "assert_true: The prototype object must have a property \"onmessage\" expected true got false"
        },
        {
          "name": "EventSource interface: attribute onerror",
          "status": "FAIL",
          "message": "assert_true: The prototype object must have a property \"onerror\" expected true got false"
        },
        {
          "name": "EventSource interface: operation close()",
          "status": "FAIL",
          "message": "assert_true: property is not configurable expected true got false"
        },
        {
          "name": "EventSource must be primary interface of new EventSource(\"http://foo\")",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "Stringification of new EventSource(\"http://foo\")",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "EventSource interface: new EventSource(\"http://foo\") must inherit property \"url\" with the proper type (0)",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "EventSource interface: new EventSource(\"http://foo\") must inherit property \"withCredentials\" with the proper type (1)",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "EventSource interface: new EventSource(\"http://foo\") must inherit property \"CONNECTING\" with the proper type (2)",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "EventSource interface: new EventSource(\"http://foo\") must inherit property \"OPEN\" with the proper type (3)",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "EventSource interface: new EventSource(\"http://foo\") must inherit property \"CLOSED\" with the proper type (4)",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "EventSource interface: new EventSource(\"http://foo\") must inherit property \"readyState\" with the proper type (5)",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "EventSource interface: new EventSource(\"http://foo\") must inherit property \"onopen\" with the proper type (6)",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "EventSource interface: new EventSource(\"http://foo\") must inherit property \"onmessage\" with the proper type (7)",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "EventSource interface: new EventSource(\"http://foo\") must inherit property \"onerror\" with the proper type (8)",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        },
        {
          "name": "EventSource interface: new EventSource(\"http://foo\") must inherit property \"close\" with the proper type (9)",
          "status": "FAIL",
          "message": "assert_equals: Unexpected exception when evaluating object expected null but got object \"Error: SECURITY_ERR: DOM Exception 18\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/request-accept.htm",
      "subtests": [
        {
          "name": "EventSource: Accept header",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/request-cache-control.htm",
      "subtests": [
        {
          "name": "EventSource: Cache-Control",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: Cache-Control 1",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: Cache-Control 2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/request-credentials.htm",
      "subtests": [
        {
          "name": "EventSource: credentials: credentials enabled",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: credentials: credentials disabled",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        },
        {
          "name": "EventSource: credentials: credentials default",
          "status": "FAIL",
          "message": "SECURITY_ERR: DOM Exception 18"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/request-redirect.htm",
      "subtests": [
        {
          "name": "EventSource: redirect (301)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: redirect (302)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: redirect (303)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: redirect (307)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/request-status-error.htm",
      "subtests": [
        {
          "name": "EventSource: incorrect HTTP status code (204)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: incorrect HTTP status code (205)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: incorrect HTTP status code (210)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: incorrect HTTP status code (299)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: incorrect HTTP status code (404)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: incorrect HTTP status code (410)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "EventSource: incorrect HTTP status code (503)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/shared-worker/eventsource-close.htm",
      "subtests": [
        {
          "name": "shared worker - EventSource: close()",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/shared-worker/eventsource-constructor-non-same-origin.htm",
      "subtests": [
        {
          "name": "shared worker - EventSource: constructor (act as if there is a network error) (http://example.not)",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        },
        {
          "name": "shared worker - EventSource: constructor (act as if there is a network error) (https://example.not/test)",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        },
        {
          "name": "shared worker - EventSource: constructor (act as if there is a network error) (ftp://example.not)",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        },
        {
          "name": "shared worker - EventSource: constructor (act as if there is a network error) (about:blank)",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        },
        {
          "name": "shared worker - EventSource: constructor (act as if there is a network error) (mailto:whatwg@awesome.example)",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        },
        {
          "name": "shared worker - EventSource: constructor (act as if there is a network error) (javascript:alert('FAIL'))",
          "status": "FAIL",
          "message": "assert_true: Error: SECURITY_ERR: DOM Exception 18 expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/shared-worker/eventsource-constructor-url-bogus.htm",
      "subtests": [
        {
          "name": "shared worker - EventSource: constructor (invalid URL)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/shared-worker/eventsource-eventtarget.htm",
      "subtests": [
        {
          "name": "shared worker - EventSource: addEventListener()",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/shared-worker/eventsource-onmesage.htm",
      "subtests": [
        {
          "name": "shared worker - EventSource: onmessage",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/shared-worker/eventsource-onopen.htm",
      "subtests": [
        {
          "name": "shared worker - EventSource: onopen (announcing the connection)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/shared-worker/eventsource-prototype.htm",
      "subtests": [
        {
          "name": "shared worker - EventSource: prototype et al",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/eventsource/shared-worker/eventsource-url.htm",
      "subtests": [
        {
          "name": "shared worker - EventSource: url",
          "status": "FAIL",
          "message": "Cannot call method 'substr' of undefined(stack: TypeError: Cannot call method 'substr' of undefined\n    at Object.<anonymous> (http://www.w3c-test.org/eventsource/shared-worker/eventsource-url.htm:30:37)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at MessagePort.worker.port.onmessage (http://www.w3c-test.org/eventsource/shared-worker/eventsource-url.htm:28:16))"
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}