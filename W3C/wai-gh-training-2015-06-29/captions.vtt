WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:04.470
&gt;&gt; Eric: We're going to record
and it's recording, obviously.

00:00:04.470 --> 00:00:07.380
So first things first.

00:00:07.380 --> 00:00:12.310
Welcome for this
Github training session.

00:00:12.310 --> 00:00:20.010
We try to make some
progress using Github.

00:00:20.010 --> 00:00:24.800
There are people from two
working groups here,
so a lot of people

00:00:24.800 --> 00:00:30.710
from the WCAG working group and
also people from the Education
and Outreach Working Group

00:00:30.710 --> 00:00:35.880
and I'm happy that we get both
groups together and
in this session.

00:00:35.880 --> 00:00:38.660
I think that's really neat.

00:00:38.660 --> 00:00:43.200
So, yeah, let's get
this started.

00:00:43.200 --> 00:00:50.750
So it's basically
an introduction.

00:00:50.750 --> 00:00:58.440
I didn't want to go into very
deep of the details of
how Git or Github works.

00:00:58.440 --> 00:01:07.550
We will be going into more
details with Github, but I
want to make it very practical

00:01:07.550 --> 00:01:16.320
so you can so basically showing
the stuff, that it's important
to you working with that stuff.

00:01:16.320 --> 00:01:21.940
If you've got any questions,
you can always raise your hand

00:01:21.940 --> 00:01:31.190
and in the queue using the the
IRC channel, it's #github
on the W3C IRC channel

00:01:31.190 --> 00:01:34.970
and if you haven't haven't
checked in there, you should.

00:01:34.970 --> 00:01:46.160
But you can always ask me
questions and I will try to get
to them as soon as possible.

00:01:46.160 --> 00:01:56.210
So one important note, of course
different editors have different
preferences for using Github

00:01:56.210 --> 00:02:01.260
and we we probably have edge
cases where other
people think differently

00:02:01.260 --> 00:02:04.060
than I do, which
is pretty normal.

00:02:04.060 --> 00:02:13.010
So if you if you see things that
that differ, this is
not a definitive guide.

00:02:13.010 --> 00:02:18.090
It's a rough red line on where
to yeah, on basically on what
best practices are and how

00:02:18.090 --> 00:02:26.120
to use it and there might be
other cases where people
advise you otherwise.

00:02:26.120 --> 00:02:29.790
So who joined as call in user 2?

00:02:29.790 --> 00:02:32.390
&gt;&gt;&gt; Hi, this is Mo

00:02:32.390 --> 00:02:32.890
&gt;&gt; Hi, Erica.

00:02:32.890 --> 00:02:33.390
&gt;&gt; Hi, Mo.

00:02:33.390 --> 00:02:35.830
&gt;&gt; And, sorry, this is
Howard, I just joined, also.

00:02:35.830 --> 00:02:36.330
[Multiple voices]

00:02:36.330 --> 00:02:38.720
&gt;&gt; This is Tim Bolin,
I just joined.

00:02:38.720 --> 00:02:39.220
&gt;&gt; Hi.

00:02:39.220 --> 00:02:43.860
&gt;&gt; A lot of people of both
groups are showing up
and I really like that.

00:02:43.860 --> 00:03:00.370
So, yeah. So there are obviously
differences between the project
and I will bring in my things

00:03:00.370 --> 00:03:06.480
that I have learned doing the
education and outreach stuff
in the last two years and

00:03:06.480 --> 00:03:10.480
and just just talking through
and have have education

00:03:10.480 --> 00:03:12.960
and outreach things
as examples as well.

00:03:12.960 --> 00:03:19.570
But...but it's a plan to draw
from all of the repository,
it's not that different.

00:03:19.570 --> 00:03:22.990
So basically what Github stuff,
contributions are welcome.

00:03:22.990 --> 00:03:27.420
So you can really work with us
together on the deliverables

00:03:27.420 --> 00:03:31.180
where before it was mainly a
one way thing that was done.

00:03:31.180 --> 00:03:37.140
But now it's much more
attractive and we can we
want those contributions,

00:03:37.140 --> 00:03:43.040
they make working together much
more easy and help to really
make the work a little bit more

00:03:43.040 --> 00:03:47.520
smooth, at least that's
what we hope that it does.

00:03:47.520 --> 00:03:49.780
Of course, no promises here.

00:03:49.780 --> 00:03:51.660
So first things first.

00:03:51.660 --> 00:03:55.500
A little bit of background
stuff.

00:03:55.500 --> 00:03:56.210
What is Git?

00:03:56.210 --> 00:04:01.880
Git is the distributed revision
control system with an emphasis
on speed, data integrity,

00:04:01.880 --> 00:04:06.390
and support for distributed,
non linear workflows.

00:04:06.390 --> 00:04:14.990
And if you all are participants
in W3C working groups,
you know that a lot

00:04:14.990 --> 00:04:17.960
that we do is very distributed.

00:04:17.960 --> 00:04:18.710
Non linear.

00:04:18.710 --> 00:04:23.710
So it seems like a
good fit for us to use.

00:04:23.710 --> 00:04:31.560
Just basically you will get into
what is the version control
system, basically it keeps track

00:04:31.560 --> 00:04:33.770
of changes in the project.

00:04:33.770 --> 00:04:40.970
So if you add a new page, if you
create a page, this
is recorded and then

00:04:40.970 --> 00:04:44.740
and also the changes
are reported.

00:04:44.740 --> 00:04:50.950
Every file that's in there is
reported recorded and so you get

00:04:50.950 --> 00:04:52.480
like a nice track of
how things work out.

00:04:52.480 --> 00:04:57.330
That you can basically have on
the time line and
you can go back

00:04:57.330 --> 00:05:06.270
in the version control system
and get to previous
versions, which is useful.

00:05:06.270 --> 00:05:10.300
So that's one thing that
we can use this for.

00:05:10.300 --> 00:05:16.830
A repository that's basically
the thing that stores
all versions

00:05:16.830 --> 00:05:20.630
and the associated
metadata for the project.

00:05:20.630 --> 00:05:24.670
So every version you create is
stored in there, every
dif is stored in there

00:05:24.670 --> 00:05:27.310
and everything is
stored in there as well.

00:05:27.310 --> 00:05:28.410
Which is really neat.

00:05:28.410 --> 00:05:38.170
And as Git is distributed, you
have got basically two
versions of those repositories.

00:05:38.170 --> 00:05:44.390
One is a remote repository and
the other one is a
local repository.

00:05:44.390 --> 00:05:45.370
So when you...

00:05:45.370 --> 00:05:51.220
most version control systems
like subversion or CVS -
they've got central server

00:05:51.220 --> 00:05:53.710
changes recorded.

00:05:53.710 --> 00:05:58.100
So when your computer is not
connected to the internet,

00:05:58.100 --> 00:06:03.080
it's basically you you don't
have any access to previous
versions and stuff like that.

00:06:03.080 --> 00:06:05.770
Git is different.

00:06:05.770 --> 00:06:12.720
So every computer has a
complete copy of the repository,

00:06:12.720 --> 00:06:15.420
the online repository
on the hard disk.

00:06:15.420 --> 00:06:18.970
And so you can work without an
internet connection, without
your server needed to be up,

00:06:18.970 --> 00:06:25.200
you can just copy and paste the
whole repository into another
folder and it will just work.

00:06:25.200 --> 00:06:26.520
It's very versatile.

00:06:26.520 --> 00:06:35.040
And then you can say, okay, and
now I will push those changes
back to the remote repository,

00:06:35.040 --> 00:06:40.030
which in our case is on Github.

00:06:40.030 --> 00:06:43.580
Because it's it has other
capabilities as well.

00:06:43.580 --> 00:06:48.020
So that's basically a recent
feature of Git, by using Github

00:06:48.020 --> 00:06:51.710
and having the central
repository there.

00:06:51.710 --> 00:06:53.990
Then there are commits.

00:06:53.990 --> 00:07:03.390
Commits are basically small sets
of changes that you that you
submit to the repository.

00:07:03.390 --> 00:07:06.550
They create new versions
of the committed files.

00:07:06.550 --> 00:07:15.000
And you can always add a commit
message to describe
what you've changed.

00:07:15.000 --> 00:07:20.640
So if you change a for example,
you could write up that
you've changed the heading

00:07:20.640 --> 00:07:24.180
and what the reasons
for this are.

00:07:24.180 --> 00:07:30.670
That makes it really easy to
find who changed
what, obviously.

00:07:30.670 --> 00:07:34.930
But also if there is if there's
some discussion around some
wording or some change,

00:07:34.930 --> 00:07:39.900
you can go back and actually
look when was it changed

00:07:39.900 --> 00:07:42.530
and have there been reasons
for it to be changed.

00:07:42.530 --> 00:07:53.990
So it's so it basically records
that as well, and that is
really neat so you don't need

00:07:53.990 --> 00:08:01.380
to to reiterate over specific
issues again and again.

00:08:01.380 --> 00:08:06.580
So it's important to write
up good commit messages.

00:08:06.580 --> 00:08:07.440
Then there are branches.

00:08:07.440 --> 00:08:10.140
And those are that's
not an easy concept.

00:08:10.140 --> 00:08:17.450
But basically, it means as those
repositories are so independent
from each other, you can even

00:08:17.450 --> 00:08:21.410
in those repositories
have independent branches.

00:08:24.530 --> 00:08:30.880
That means you get you basically
have a copy of your project

00:08:30.880 --> 00:08:34.560
in the project that
has different data.

00:08:34.560 --> 00:08:41.570
So if I decide I want to change
the design and someone else
is changing the content,

00:08:41.570 --> 00:08:47.500
we basically could both branch
this, a repository, and I
could work on the design

00:08:47.500 --> 00:08:52.280
and the other person could work
on the content, and we
wouldn't have conflicts

00:08:52.280 --> 00:08:58.070
and things overwriting each
other and then when we're done,
individually, we could bring

00:08:58.070 --> 00:09:02.140
that branch back into the main
branch, the master branch,

00:09:02.140 --> 00:09:04.610
that has all has the final
repository, basically.

00:09:04.610 --> 00:09:09.550
So so that's incredibly useful.

00:09:09.550 --> 00:09:14.720
And Github also encourages
Github also encourages
the use of branches.

00:09:14.720 --> 00:09:16.440
They are easy to
create, easy to do.

00:09:16.440 --> 00:09:20.930
You can concentrate on one
change and bring that back
in to the to the main branch.

00:09:20.930 --> 00:09:25.470
And it really helps to avoid
collisions from multiple
editors.

00:09:25.470 --> 00:09:31.380
So if you got 15 minutes and you
want to learn Git on the command
line, which is interesting

00:09:31.380 --> 00:09:38.440
because it's it's really a good
way to get into the
mood and think

00:09:38.440 --> 00:09:45.480
about those individual terms
and get the draft for that.

00:09:45.480 --> 00:09:46.230
You can do that.

00:09:46.230 --> 00:09:50.500
Github has tryGit resource where
you can do that and
basically you can really

00:09:50.500 --> 00:09:56.350
on this page simulate your Git
repository, you can Git status

00:09:56.350 --> 00:10:00.240
and of course it's empty,
that's not surprising.

00:10:00.240 --> 00:10:05.630
And if you then a file is added,
it's very good described on the
top and then you get the status

00:10:05.630 --> 00:10:08.570
and you see it's
not committed yet.

00:10:08.570 --> 00:10:10.000
It's untracked find.

00:10:10.000 --> 00:10:11.860
And then you can add
this and so on and so on.

00:10:11.860 --> 00:10:16.550
That's basically using the
command line to do that.

00:10:16.550 --> 00:10:20.050
I can encourage you
to test this out.

00:10:20.050 --> 00:10:23.530
I just you don't
need to do that now.

00:10:23.530 --> 00:10:28.520
But I've just I'll paste the URL
into the IRC, because
I haven't added it

00:10:28.520 --> 00:10:30.380
to the slides and here we go.

00:10:30.380 --> 00:10:36.010
And, yeah, it's really
interesting to get
across on how it works.

00:10:36.010 --> 00:10:42.200
It's very yeah, it's very basic,
but it brings over
those terms very well.

00:10:42.200 --> 00:10:46.560
But, of course, there's no need
for using the command line.

00:10:46.560 --> 00:10:50.290
There are lots of tools
that do that for you.

00:10:50.290 --> 00:10:51.500
So this is the source tree.

00:10:51.500 --> 00:10:56.270
It's for Mac or Windows and you
basically get those nice
colored graphs on the left

00:10:56.270 --> 00:11:01.190
where you can yeah, where you
can see what your branches are.

00:11:01.190 --> 00:11:02.920
So that's pretty neat.

00:11:02.920 --> 00:11:03.530
It works very well.

00:11:03.530 --> 00:11:09.780
And then there are tools from
Github that are a little
bit more user friendly

00:11:09.780 --> 00:11:17.130
and that are basically used for
Github vernacular to
speak about stuff.

00:11:17.130 --> 00:11:24.810
So it's a little bit easier to
use than using the standard
stuff or using the other tools

00:11:27.370 --> 00:11:31.420
that are not so interconnected
with Github.

00:11:31.420 --> 00:11:36.580
And that's also available
for the Mac and for the PC.

00:11:36.580 --> 00:11:39.100
For Windows PCs, of course.

00:11:39.100 --> 00:11:41.500
Now, that's been
the boring basics.

00:11:41.500 --> 00:11:45.700
Now we're getting a little bit
more hands on, on to Github.

00:11:45.700 --> 00:11:55.180
Because when you use Github, you
basically don't need to use
either the command line or one

00:11:55.180 --> 00:12:02.140
of those software tools because
you can do most, if not
all of it, on Github.

00:12:02.140 --> 00:12:12.300
And especially as someone who is
more in the contributor role,
that is probably all you need

00:12:12.300 --> 00:12:14.080
and most certainly all you need.

00:12:14.080 --> 00:12:21.360
So the Github is basically a GUI
for remote repositories, so
you have your remote repository

00:12:21.360 --> 00:12:27.800
and then you can you can
work on that and edit that.

00:12:27.800 --> 00:12:29.380
But it has also other features.

00:12:29.380 --> 00:12:32.740
So it's it has also project
management integrations,

00:12:32.740 --> 00:12:37.470
so it provides an issue
management solution, it has
a wiki, there are milestones

00:12:37.470 --> 00:12:40.670
in there that we can use to keep
stuff on track and
that's pretty powerful.

00:12:40.670 --> 00:12:48.650
And a lot of that is actually
more helpful than the
source code stuff in terms

00:12:48.650 --> 00:13:00.040
of just using it and providing
it to to and providing feedback
for editors of deliverables.

00:13:00.040 --> 00:13:11.900
So one thing is every every
delivery has its own
repository, so, for example,

00:13:11.900 --> 00:13:21.910
we have the WAI tutorials
repository, the WAI
QuickStarts repository

00:13:21.910 --> 00:13:33.180
and the WAI WCAG quickref
repository and basically the
Github.com/ and then the owner

00:13:33.180 --> 00:13:38.310
of the repository, which is W3C
in that case, and then the slash

00:13:38.310 --> 00:13:41.920
and the short time
of this repository.

00:13:41.920 --> 00:13:55.270
And as you can see, we try to
prefix them with a dash because
there are a lot of repositories

00:13:55.270 --> 00:14:00.660
in the WC3 [indiscernible] and
it's hard to have an overview

00:14:00.660 --> 00:14:08.110
and sort them accordingly
if we don't do that.

00:14:08.110 --> 00:14:13.570
So yeah it's pretty
straightforward so you
can basically find them

00:14:13.570 --> 00:14:16.790
on the Github.com/WC3.

00:14:16.790 --> 00:14:23.370
There is there is a large list
of of repositories, I don't
know how many we have,

00:14:23.370 --> 00:14:25.730
but it's a lot.

00:14:25.730 --> 00:14:31.140
And you can see when they have
in the last change of the one

00:14:31.140 --> 00:14:33.460
with the last change
is always on the top.

00:14:33.460 --> 00:14:38.870
And then you can also search for
it and as we have adopted
the WAI naming convention,

00:14:38.870 --> 00:14:43.190
you can just go like WAI in the
[indiscernible] and then
actually they should display

00:14:43.190 --> 00:14:54.960
immediately as you can see and
you get all of the WAI
stuff that we're working on

00:14:54.960 --> 00:14:58.830
or have worked on,
which are a few.

00:14:58.830 --> 00:15:04.520
So that's useful and that's
how you found repository.

00:15:04.520 --> 00:15:13.710
You probably don't think
about a lot of stuff in there.

00:15:13.710 --> 00:15:22.440
And, yeah, and we we do that and
it's for each repository each
delivery has its own repository.

00:15:22.440 --> 00:15:25.690
Because it's much easier to
track issues and
feedback that way.

00:15:25.690 --> 00:15:29.840
You can edit files
directly in Github.

00:15:29.840 --> 00:15:36.790
So take a look at the tutorials.

00:15:36.790 --> 00:15:40.950
Sorry. We will have a
look at the tutorials.

00:15:40.950 --> 00:15:47.760
So we have here the source
folder and the index
file and this is written

00:15:47.760 --> 00:15:50.220
in matone [[phonetic]] so
so it's pretty easy to use.

00:15:50.220 --> 00:15:57.050
Other repositories might use
plain HTML and some might
have code spread all over,

00:15:57.050 --> 00:16:00.840
so it's it's a bit different
from from resource to resource.

00:16:00.840 --> 00:16:05.670
But I think you will get you
will find your way around.

00:16:05.670 --> 00:16:10.180
So what we have here is the edit
this file button and so that's
the pen here on the right

00:16:10.180 --> 00:16:12.130
and you can just get
in there and edit it.

00:16:12.130 --> 00:16:19.000
If you have got edit rights, you
can even commit this
directly to the master branch,

00:16:19.000 --> 00:16:27.320
which is not what I would would
recommend to do because that's
actually not what we should do.

00:16:27.320 --> 00:16:31.550
And I will get back
to that in a minute.

00:16:31.550 --> 00:16:36.970
Or you can have so called pull
requests and I will
talk about that later.

00:16:36.970 --> 00:16:41.070
So yeah, that's that's basically
it and you can just
start to type

00:16:41.070 --> 00:16:44.000
and make your changes
if you want.

00:16:44.000 --> 00:16:46.980
And bring those in as a
proposal, which is useful.

00:16:46.980 --> 00:16:52.960
So another thing that I wanted
to show is actually the main
page of those repositories.

00:16:52.960 --> 00:16:54.690
This is the tutorial help page.

00:16:54.690 --> 00:17:00.410
It has a lot of interesting
information on it, so
there's there's a link

00:17:00.410 --> 00:17:04.050
to the actual deliverable, there
are the number of
commits on the top,

00:17:04.050 --> 00:17:06.620
the branches that are there.

00:17:06.620 --> 00:17:13.990
You can create releases in
Github or the editor can
do that, which is useful.

00:17:13.990 --> 00:17:16.420
You can view a list
of the contributors.

00:17:16.420 --> 00:17:22.560
And on the right, you've got
that navigation that shows
issues and pull requests

00:17:22.560 --> 00:17:25.790
and wiki and some
specifics and stuff.

00:17:25.790 --> 00:17:32.490
So that's what you have
everywhere and in the center,
basically, you've got file lists

00:17:32.490 --> 00:17:35.060
and directory lists of the
files that are in there.

00:17:35.060 --> 00:17:41.920
You can see how long your the
last edit is has
been and you will see

00:17:43.210 --> 00:17:51.340
that that hasn't been going a
lot in the tutorials lately.

00:17:51.340 --> 00:17:55.400
And then there is actually a
readme file, that readme file

00:17:55.400 --> 00:17:57.890
that you can see here
in the file list.

00:17:57.890 --> 00:18:01.700
So it's in the root, in the
root of that repository.

00:18:01.700 --> 00:18:06.270
And it's [indiscernible] here
and it's a [indiscernible] file,
so you can use images and links

00:18:06.270 --> 00:18:11.480
and texts and all
of that neat stuff.

00:18:11.480 --> 00:18:14.950
So, that's one thing.

00:18:14.950 --> 00:18:19.280
You can switch branches here, so
we have got three branches
in this repository.

00:18:19.280 --> 00:18:21.420
The master is where
the work happens.

00:18:21.420 --> 00:18:26.910
Release is where we merge in the
master branch once we
do another release.

00:18:26.910 --> 00:18:32.570
And then we have the Github
pages branch, which is a metric
branch, if I can say that,

00:18:32.570 --> 00:18:43.820
so I'll everything that's on the
Github pages is automatically
rendered HTML file automatically

00:18:43.820 --> 00:18:45.960
rendered on the Github.io
subdomain.

00:18:45.960 --> 00:18:52.940
So if I go into the Github pages
for this repository, and then
you see this automated commits

00:18:52.940 --> 00:19:01.410
because of the use of the system
that creates HTML files from
yeah, basically from what we

00:19:01.410 --> 00:19:05.250
from the mocked on files
[phonetic] that I've
shown you before,

00:19:05.250 --> 00:19:09.700
and that's automatically
deployed to WC3.github.io/wai
tutorials.

00:19:09.700 --> 00:19:19.800
And you can browse that just
like any other regular website,
which is incredibly useful

00:19:19.800 --> 00:19:42.660
for testing out stuff and
showing stuff to to
people while developing it.

00:19:42.660 --> 00:19:52.410
If you have only HTML stuff to
to to work on, for
your deliverable,

00:19:52.410 --> 00:19:59.740
it's just plain HTML, you can
call it index.HTML, have
your main branch the Github

00:19:59.740 --> 00:20:00.610
pages branch.

00:20:00.610 --> 00:20:08.260
And then every time you make a
change, it will automatically
show up on that staging server,

00:20:08.260 --> 00:20:10.140
that's incredibly useful.

00:20:10.140 --> 00:20:12.090
So those are the branches.

00:20:12.090 --> 00:20:17.350
A little neat trick that we
have in there is this button

00:20:17.350 --> 00:20:21.070
on the right called
quickly jump between files.

00:20:21.070 --> 00:20:30.530
When you click on that, you can
basically just put in a
file name that you like.

00:20:30.530 --> 00:20:34.860
For example, I could type simple
and then I see all the files

00:20:34.860 --> 00:20:37.830
where some kind of
simple is in there.

00:20:37.830 --> 00:20:43.050
I can do images and I get all
all files that have
to do with images,

00:20:43.050 --> 00:20:44.260
like the images index file.

00:20:44.260 --> 00:20:48.870
I can click on that and
I'm directly in that file.

00:20:48.870 --> 00:20:57.600
So when I know the file name of
the directory or something like
that, this really helps greatly.

00:20:57.600 --> 00:21:04.740
And you can you can go to this
file find by pressing
T on every page,

00:21:04.740 --> 00:21:13.070
so that's incredibly useful to
navigate around, if only I
wouldn't forget this possibility

00:21:13.070 --> 00:21:13.760
all the time.

00:21:13.760 --> 00:21:14.260
[Laughter].

00:21:14.260 --> 00:21:17.990
So just pressing T and
you can just type that.

00:21:17.990 --> 00:21:18.540
Really useful.

00:21:18.540 --> 00:21:27.820
And that's basically it's
those are the the repositories.

00:21:27.820 --> 00:21:34.030
I would come back to issues and
pull requests later, as I said,

00:21:34.030 --> 00:21:42.390
because they play a much more
central role to what
we're doing in WC3

00:21:42.390 --> 00:21:46.190
and to collect feedback
from you.

00:21:46.190 --> 00:21:51.690
&gt;&gt; Do you have time
for a quick question?

00:21:51.690 --> 00:21:52.250
&gt;&gt; Sure, always.

00:21:52.250 --> 00:21:55.580
&gt;&gt; How do you publish to the
Github.io staging server?

00:21:55.580 --> 00:21:59.000
&gt;&gt; Basically, you don't
have to do anything.

00:21:59.000 --> 00:22:05.630
You just you just make sure that
you've got the Github
pages branch

00:22:05.630 --> 00:22:15.220
and then everything that's in
there is automatically on the on
that Github.io station server.

00:22:15.220 --> 00:22:17.800
&gt;&gt; So you need to create
a branch from the master?

00:22:17.800 --> 00:22:23.980
&gt;&gt; Right. You'll need to create
a branch from the master
or what you can do,

00:22:23.980 --> 00:22:28.780
if you only got HTML files in
there, you can just create
the branch Github pages

00:22:28.780 --> 00:22:38.100
and delete the master and
automatically the Github pages
branch will be your your master

00:22:38.100 --> 00:22:39.000
&gt;&gt; I see: Okay.

00:22:39.000 --> 00:22:39.500
&gt;&gt; branch.

00:22:39.500 --> 00:22:43.860
And then it's automatically
published when you
are doing that.

00:22:43.860 --> 00:22:46.210
That's actually what I
do with the quick ref.

00:22:46.210 --> 00:22:46.860
There we go.

00:22:46.860 --> 00:22:52.060
So what we did with the quick
ref is that we get
only one branch,

00:22:52.060 --> 00:22:54.030
that is called Github pages.

00:22:54.030 --> 00:22:55.150
&gt;&gt; I see, okay.

00:22:55.150 --> 00:22:58.440
&gt;&gt; And that's that's easy
to do in the settings.

00:22:58.440 --> 00:23:03.510
You can and you see that there's
the Github pages box in there.

00:23:03.510 --> 00:23:14.250
That has the link to the to the
resource online and also has a
lot of help articles and stuff

00:23:14.250 --> 00:23:19.850
that help you get around.

00:23:19.850 --> 00:23:25.250
You can use pure HTML or you can
use Jekyll, which is like
a static site generator,

00:23:25.250 --> 00:23:28.780
which is what I use for the
quick reference at the moment.

00:23:28.780 --> 00:23:33.660
And that basically gets passed
automatically when
something changes.

00:23:33.660 --> 00:23:35.200
That's really, really neat.

00:23:35.200 --> 00:23:36.960
&gt;&gt; Okay. Thank you.

00:23:36.960 --> 00:23:38.800
&gt;&gt; Eric: Other questions so far?

00:23:38.800 --> 00:23:45.540
Okay. Yeah, the questions the
question that is important
thinking about issues

00:23:45.540 --> 00:23:49.010
and pull requests is
to when to use what.

00:23:49.010 --> 00:23:56.780
If I just get back to the to the
tutorials, we got pull
requests, a few of those.

00:23:56.780 --> 00:23:58.060
And those are those
look like this.

00:23:58.060 --> 00:24:01.230
So they are basically there's a
conversation, there are
some commits attached

00:24:01.230 --> 00:24:05.590
and there are some file changes,
but in realities they
are not that different

00:24:05.590 --> 00:24:10.300
from regular issues which
basically look the same
and you but you don't have

00:24:10.300 --> 00:24:18.570
that file stuff attached so you
have only comments from people
and then you can add labels

00:24:18.570 --> 00:24:22.020
and I will get into
that in a minute.

00:24:22.020 --> 00:24:28.500
You can assign people to a
[indiscernible] and also
add milestones to this,

00:24:28.500 --> 00:24:35.780
which is really useful if you
say okay, we want to have
the both issues covered

00:24:35.780 --> 00:24:41.050
until that date, so it's
more like a to do list.

00:24:41.050 --> 00:24:52.830
That's that's really interesting
and then you've got a
back and forth discussion

00:24:52.830 --> 00:24:58.680
until I have understood what
you're actually wanting
to give me feedback on.

00:24:58.680 --> 00:25:03.430
Because that's that
sometimes just isn't clear.

00:25:03.430 --> 00:25:05.240
So that's it.

00:25:05.240 --> 00:25:08.610
And then it can basically
go forward.

00:25:08.610 --> 00:25:18.550
I talked about labels a little
bit, so the to the tutorials
one is a little bit special.

00:25:18.550 --> 00:25:20.510
Labels for every page.

00:25:20.510 --> 00:25:28.020
But if we go into the quick
start guide, and
in those issues,

00:25:28.020 --> 00:25:32.120
you see that there are
enhancement labels on there
and when you take a look

00:25:32.120 --> 00:25:39.810
at the labels, you will see that
there are basically seven labels

00:25:39.810 --> 00:25:47.770
and those are the standard
labels that Github provides,
so there's bug, duplicate,

00:25:47.770 --> 00:25:57.800
enhancement, help wanted,
invalid, question and won't
fix that basically you can use

00:25:57.800 --> 00:26:01.740
to highlight specific issues
and all pull requests.

00:26:01.740 --> 00:26:06.920
Those are those issues lists and
pull requests lists,
they are sourcable,

00:26:06.920 --> 00:26:09.660
they are incredibly flexible.

00:26:09.660 --> 00:26:16.160
So so you can basically clear
all filters, which I don't know
why there have been filters,

00:26:16.160 --> 00:26:20.140
and then you can go and
basically say, okay, I only want

00:26:20.140 --> 00:26:25.110
to see everything that's that's
tagged with announcement
and you can do that.

00:26:25.110 --> 00:26:27.140
Oops. What have I clicked now?

00:26:27.140 --> 00:26:31.050
You see on the right who has
commented and how many
comments are in there,

00:26:31.050 --> 00:26:34.450
so you see what is the
important topic for people.

00:26:34.450 --> 00:26:35.700
That's pretty neat.

00:26:35.700 --> 00:26:40.290
And you also can say, okay, I
want to see all closed issues.

00:26:40.290 --> 00:26:41.400
All open issues.

00:26:41.400 --> 00:26:47.150
And as you can see, in the
filters box, this is all
basically text based,

00:26:47.150 --> 00:26:51.850
which is very, very neat so you
can you can if you
get along with that,

00:26:51.850 --> 00:26:55.960
you can basically just write in
there and find the
correct issue.

00:26:55.960 --> 00:27:00.440
That's not so much a problem
with the WC3 stuff,
as we don't have

00:27:00.440 --> 00:27:03.770
like thousands of
issues at a time.

00:27:03.770 --> 00:27:09.180
But it can be useful
nonetheless, if there are,
if the label had wanted

00:27:09.180 --> 00:27:16.180
that basically asks for group
input, for example, you
want to first inform them

00:27:16.180 --> 00:27:24.190
and then you can concentrate on
working on those specific issues
instead of thinking through,

00:27:24.190 --> 00:27:30.260
like [indiscernible] or stuff
like that, that need to
be fixed that are issues,

00:27:34.130 --> 00:27:40.460
but don't need any
further input.

00:27:40.460 --> 00:27:45.340
Yeah, if if we click on pull
requests on the top, yeah,
basically the filter changes

00:27:45.340 --> 00:27:53.610
from it's open and it's pull
request is pr from from
it's open and it's issue,

00:27:53.610 --> 00:27:56.420
so they are really,
really closed related.

00:27:56.420 --> 00:28:01.630
And so the question indeed is
when to use what,
when to use issues

00:28:01.630 --> 00:28:04.470
and when to use pull requests.

00:28:04.470 --> 00:28:10.960
So that's not that's actually,
once you think about
it, it's pretty easy.

00:28:10.960 --> 00:28:17.120
But it's it gets some some time
to get used to that, to that
stuff, and when to use what.

00:28:17.120 --> 00:28:17.620
So issues.

00:28:17.620 --> 00:28:22.240
You should always just open an
issue if you have
general feedback,

00:28:22.240 --> 00:28:31.210
if you want to discuss, like,
passages or documents and
you are not sure if you want

00:28:31.210 --> 00:28:36.970
to reformulate it, but you don't
have a concrete change
to do on files.

00:28:36.970 --> 00:28:39.430
Then you should use issues.

00:28:39.430 --> 00:28:58.690
Also, if you just want to
collect opinions on on different
things, then you go in there

00:28:58.690 --> 00:29:03.920
and you can open an issue
and talk about that.

00:29:03.920 --> 00:29:12.830
And just keep keep that going
and that may result in something
that can be integrated.

00:29:12.830 --> 00:29:17.010
There are some there are some
advice on how to
write good issues.

00:29:17.010 --> 00:29:23.470
So you should always provide a
link to the page in question.

00:29:23.470 --> 00:29:31.140
Sometimes pages are very
similar, if you have a multi
page deliverable at least,

00:29:31.140 --> 00:29:38.600
so it really makes sense to
point people to the specific
page because, as it's easy

00:29:38.600 --> 00:29:43.110
to get lost and it just confuses
the hell out of everybody

00:29:43.110 --> 00:29:45.850
when they're not talking
about the same page.

00:29:45.850 --> 00:29:50.200
So make sure that everyone is
on the same page, basically.

00:29:50.200 --> 00:29:57.750
Keep issues clear, concise and
focused on the specific issue.

00:29:57.750 --> 00:30:10.460
Bad: I don't like content of
Page X. That does
not help very much.

00:30:12.010 --> 00:30:19.360
That's giving feedback like on
this page, the wording in
the introduction is unclear.

00:30:19.360 --> 00:30:24.560
It's helping far more to to help
editing this and get feedback

00:30:24.560 --> 00:30:26.650
from the other members
of the working group.

00:30:26.650 --> 00:30:29.160
So that's really, really useful.

00:30:29.160 --> 00:30:39.270
Try to be very specific and
point people to the correct
page that helps a lot.

00:30:39.270 --> 00:30:46.400
Pull requests are for concrete
text and code proposals.

00:30:46.400 --> 00:30:53.470
So if you say, oh, I can go in
there and change that
in a minute, go in there

00:30:53.470 --> 00:30:55.540
and change it in a minute.

00:30:55.540 --> 00:31:02.090
You don't need to make an issue
and discuss it discuss it.

00:31:02.090 --> 00:31:07.560
You can just get into the file,
as I showed before, and
just make your changes

00:31:07.560 --> 00:31:09.310
and send in a pull request.

00:31:09.310 --> 00:31:14.980
That doesn't mean it will get
implemented one by
one like you did,

00:31:14.980 --> 00:31:23.400
but at least you have a concrete
proposal, concrete
code or text proposal.

00:31:23.400 --> 00:31:27.970
It's also useful for
implementing changes that
have already been discussed.

00:31:27.970 --> 00:31:32.630
So if we got a phone conference
and the group decides
that a part

00:31:32.630 --> 00:31:37.690
of the deliverable should
change, you can go in
there, make that change

00:31:37.690 --> 00:31:40.670
and send in a pull request.

00:31:40.670 --> 00:31:46.180
That is much easier than than
having an issue up and then
someone else is doing that.

00:31:46.180 --> 00:31:50.430
Of course, you only should do
that if you and the
group have agreed

00:31:50.430 --> 00:31:53.320
that you are responsible
for this.

00:31:53.320 --> 00:31:56.080
Then there are typos
and grammar corrections.

00:31:56.080 --> 00:32:00.970
There's usually not a lot of
a lot to discuss with those.

00:32:00.970 --> 00:32:07.320
You can always just open the
file, change the code
or the text and send

00:32:07.320 --> 00:32:10.870
that in as a pull request.

00:32:10.870 --> 00:32:16.980
And, of course, some advice for
doing good pull requests
as well.

00:32:16.980 --> 00:32:18.630
So make atomar changes.

00:32:18.630 --> 00:32:23.260
Make changes that are so as
small as possible, as
small as they make sense.

00:32:23.260 --> 00:32:29.710
For example, if you get a file
and there are multiple wording
changes that you want to do,

00:32:29.710 --> 00:32:34.600
you would most likely change
them individually
and submit them

00:32:34.600 --> 00:32:37.150
with multiple pull requests.

00:32:37.150 --> 00:32:46.650
So that each of them can be
discussed and implemented
individually.

00:32:46.650 --> 00:32:55.270
If you go through page and
basically working group
has decided that they want

00:32:55.270 --> 00:33:05.200
to change a word from one word
to another because
it makes more sense

00:33:05.200 --> 00:33:11.970
or there has been a sentence
that is on several pages,
then you can do that all

00:33:11.970 --> 00:33:14.130
at once and that works as well.

00:33:14.130 --> 00:33:20.810
Because we don't expect to
discuss every single
change individually

00:33:20.810 --> 00:33:31.540
because it was already
discussed, so so it makes
more sense like this.

00:33:31.540 --> 00:33:41.120
So there is Github workflow and
basically this catches
everything we talked about.

00:33:41.120 --> 00:33:44.110
First, when working
you create a branch.

00:33:44.110 --> 00:33:51.360
If you edit on Github and you
check the check box, this is
automatically done for you.

00:33:51.360 --> 00:33:58.810
So if I go to see that, wai
tutorials, if you go to wai
tutorials and then to source

00:33:58.810 --> 00:34:04.520
and then index, are and then,
for example, you
change this to hints,

00:34:04.520 --> 00:34:10.750
you can then have your comment
in there so that actually
the second the second step.

00:34:10.750 --> 00:34:15.780
Before the first, in one
approach, so you commit changes.

00:34:15.780 --> 00:34:17.070
We're now doing that.

00:34:17.070 --> 00:34:19.230
Changed wording for the better.

00:34:19.230 --> 00:34:26.640
And then you will always have
the possibility to commit
directly to the master branch

00:34:26.640 --> 00:34:33.800
if you have writings, writing
access and we plan we haven't
discussed that in depth yet,

00:34:33.800 --> 00:34:37.870
at least in the education and
outreach working
group, we basically want

00:34:37.870 --> 00:34:41.990
to give everyone writing access
as that enables you
to add things

00:34:41.990 --> 00:34:46.070
like labels and issues yourself.

00:34:46.070 --> 00:34:52.770
So basically what you can do is
just commit directly
to the master branch,

00:34:52.770 --> 00:35:01.940
but you can always check
this and create a new branch

00:35:01.940 --> 00:35:04.910
from this commit and
have a pull request.

00:35:04.910 --> 00:35:09.900
So it makes a lot of things for
you that you that
would be three steps,

00:35:09.900 --> 00:35:15.250
basically combines
them into one.

00:35:15.250 --> 00:35:19.270
You can just leave that that
name as it is, it
doesn't matter too much.

00:35:19.270 --> 00:35:26.170
Then you click propose file
change, and then you can add
labels to this file change

00:35:26.170 --> 00:35:27.260
and assign if you want to.

00:35:27.260 --> 00:35:34.000
You can assign me as the one who
does the work because in most

00:35:34.000 --> 00:35:38.740
of the repositories I'm I'm
working with it's me anyway.

00:35:38.740 --> 00:35:43.870
So you can assign that even and
then you can have
another comment

00:35:43.870 --> 00:35:47.290
and create that pull request.

00:35:47.290 --> 00:35:53.640
On the box you see your change
in the nice format so you know,
okay, that's my change and, yes,

00:35:53.640 --> 00:35:57.760
I want to send in
a pull request.

00:35:57.760 --> 00:36:01.100
Click on create pull request and
now the pull request is there.

00:36:01.100 --> 00:36:03.400
And you will see some details.

00:36:03.400 --> 00:36:11.240
So everyone who who now goes to
the page, to the pull request
page, sees that pull request,

00:36:11.240 --> 00:36:16.820
and sees what the change is,
where the change
happened and that commit

00:36:16.820 --> 00:36:19.450
and what files, what changed.

00:36:19.450 --> 00:36:21.870
You can even edit this.

00:36:21.870 --> 00:36:22.960
Which is important.

00:36:22.960 --> 00:36:25.040
And I will get back to that.

00:36:25.040 --> 00:36:29.930
And you can add comments
on that.

00:36:29.930 --> 00:36:33.960
So, for example, you could
comment and say, "That's
a change for the worse."

00:36:33.960 --> 00:36:35.250
And comment that.

00:36:35.250 --> 00:36:38.590
And you could also
label that with invalid.

00:36:38.590 --> 00:36:39.400
There we go.

00:36:39.400 --> 00:36:47.320
Github records all of that, so
you see who is adding labels and
this is actually reflected live

00:36:47.320 --> 00:36:53.980
if you would have opened that
same page, it would get pushed
to your browser immediately,

00:36:53.980 --> 00:37:00.980
so it it's basically almost like
a live chatting thing,
if you want to,

00:37:00.980 --> 00:37:02.540
if you are doing it
at the same time.

00:37:02.540 --> 00:37:04.850
That's pretty interesting.

00:37:04.850 --> 00:37:10.540
And you can get notifications
and stuff like that.

00:37:10.540 --> 00:37:15.440
I will come back to that
in a minute, I think.

00:37:15.440 --> 00:37:17.720
So, yeah, that's
very interesting.

00:37:17.720 --> 00:37:26.280
And then if you if you have
writing possibilities, writing
access for this repository,

00:37:26.280 --> 00:37:30.210
you can also merge
the pull request in.

00:37:30.210 --> 00:37:35.390
Which will go automatically and
then basically it's
in the master branch.

00:37:35.390 --> 00:37:42.600
We don't want to do that now,
but this pull request,
because it's a bit ridiculous,

00:37:42.600 --> 00:37:46.950
you could edit the
file once more.

00:37:46.950 --> 00:37:53.460
And find an example, if someone
had commented and said, "That's
a ridiculous change," you can go

00:37:53.460 --> 00:37:58.560
in there and just write
another suggestion, for example.

00:37:58.560 --> 00:38:01.560
You don't need to
change that specific bit.

00:38:01.560 --> 00:38:07.540
You could change the
whole sentence and stuff.

00:38:07.540 --> 00:38:09.710
Let's go with that for a moment.

00:38:09.710 --> 00:38:10.890
And put other idea.

00:38:10.890 --> 00:38:19.040
And this is now actually in the
yetil patch 1 branch, so
I can now directly commit

00:38:19.040 --> 00:38:25.680
to this branch because it's
not in the master branch.

00:38:25.680 --> 00:38:33.420
Or I could have a new branch and
add the pull request on
to the master branch.

00:38:33.420 --> 00:38:41.090
So if there's an edit, I have
both possibilities which can
be used for now I want to add

00:38:41.090 --> 00:38:47.880
to the pull request we are
already dealing with,
so I commit that change.

00:38:47.880 --> 00:38:54.810
And now it changed from guidance
to information, directly.

00:38:54.810 --> 00:39:01.700
In those two comments and as we
can see on the conversation
page of the pull request,

00:39:01.700 --> 00:39:04.420
we see that this this
change is in there as well.

00:39:04.420 --> 00:39:10.580
So you can basically add to this
branch and play with
wording until it's finished

00:39:10.580 --> 00:39:16.200
and then you can merge merge it
back into the document itself.

00:39:16.200 --> 00:39:22.060
And I think that's a really
powerful when thinking
about about when thinking

00:39:22.060 --> 00:39:28.170
about deliverables, a lot
of possibilities there.

00:39:28.170 --> 00:39:32.330
So getting back to
the slides for a bit.

00:39:32.330 --> 00:39:38.920
Yeah. Then you do open a pull
request, I will just get
back to the first one.

00:39:38.920 --> 00:39:50.650
Basically the menu is to create
a branch, commit changes to
that, open a pull request,

00:39:50.650 --> 00:39:56.970
then you can chat about it,
discuss it and optionally
add more commits,

00:39:56.970 --> 00:39:59.960
that's what I have just shown
and then you merge it together.

00:39:59.960 --> 00:40:03.820
And that's basically
how the workflow works.

00:40:03.820 --> 00:40:10.100
And what I see now is that I'm
on the end of my presentation,
but I have forgotten one slide.

00:40:10.100 --> 00:40:11.610
Obviously.

00:40:11.610 --> 00:40:14.420
That is pretty useful,
but I can't see it.

00:40:14.420 --> 00:40:16.220
Just interesting.

00:40:16.220 --> 00:40:18.720
Probably that got lost.

00:40:18.720 --> 00:40:23.180
Let's see if I can recover that.

00:40:23.180 --> 00:40:25.980
Or else I'll just
do it manually.

00:40:25.980 --> 00:40:27.560
&gt;&gt; Probably in a
previous branch.

00:40:27.560 --> 00:40:28.230
&gt;&gt; Eric: Yeah, probably.

00:40:28.230 --> 00:40:28.730
[Laughter].

00:40:28.730 --> 00:40:33.450
It's hard with those branches
to to keep up with everything.

00:40:33.450 --> 00:40:37.750
Oh, I didn't I didn't
go down there.

00:40:37.750 --> 00:40:40.290
Okay. That's that's interesting.

00:40:40.290 --> 00:40:42.150
I skipped that whole section.

00:40:42.150 --> 00:40:43.010
This happens.

00:40:43.010 --> 00:40:48.880
So, yeah. I added stuff and
that's all kinds of file types
I wanted to talk more about.

00:40:48.880 --> 00:40:55.690
So you can edit HTML, CSS/SASS,
JavaScript, and of course
back end stuff like PHP, Ruby,

00:40:55.690 --> 00:41:03.750
python, and one thing that's
especially supported is
markdown and there is

00:41:03.750 --> 00:41:10.100
that YAML frontmatter thing, if
you take a look at
the at the tutorials.

00:41:10.100 --> 00:41:11.860
They use this on every page.

00:41:11.860 --> 00:41:21.200
And that's the thing on the top
so basically metadata that
is added to individual pages.

00:41:21.200 --> 00:41:26.640
It has this really nice view,
this tabular view
that's probably horrible

00:41:26.640 --> 00:41:33.930
for screen readers to read,
especially because the
text representation

00:41:33.930 --> 00:41:36.210
of it is so much nicer.

00:41:36.210 --> 00:41:45.510
So the frontmatter is having
three dashes on the top and
then it's basically, yeah,

00:41:45.510 --> 00:42:02.290
those intended lists that that
help you to manage your
stuff and uses the middle man

00:42:02.290 --> 00:42:15.700
to render the HTML pages in the
end and I can access all of
those values from the page,

00:42:15.700 --> 00:42:19.620
so I don't need to write
my footer on every page.

00:42:19.620 --> 00:42:26.370
But, for example, the published
date is just taken from this
from this file and displayed

00:42:26.370 --> 00:42:29.980
and also the title and
the navigation title.

00:42:29.980 --> 00:42:31.800
So so that's useful.

00:42:31.800 --> 00:42:37.060
And it has this preview
functionality that I showed.

00:42:37.060 --> 00:42:40.460
I think the tabular
stuff is not that useful.

00:42:40.460 --> 00:42:48.390
But but, of course, if you use
regular markdown or HTML,
that's actually rendered just

00:42:48.390 --> 00:42:53.320
like it would be rendered on
an HTML page but, of course,

00:42:53.320 --> 00:42:56.130
without the CSS and
JavaScript enabled.

00:42:56.130 --> 00:43:02.400
And if you do fancy stuff, with
with such of with such CMS or
static file generator tools,

00:43:02.400 --> 00:43:05.500
it doesn't understand
that as well.

00:43:05.500 --> 00:43:12.160
So there are limitations, but in
the whole grand scheme
of things,

00:43:12.160 --> 00:43:17.660
you get a pretty nice
representation of the
page you are working

00:43:17.660 --> 00:43:24.840
on in those preview
[indiscernible] and just on the
on the individual pages of this.

00:43:24.840 --> 00:43:32.850
Probably a few other interesting
things in here is that you've
got the switches on the top.

00:43:32.850 --> 00:43:41.500
So you can take a look at the
raw file, which in this
case is just a text file.

00:43:41.500 --> 00:43:52.120
And it's probably not that not
too interesting, but
it's like a raw file

00:43:52.120 --> 00:43:59.540
and on a special subdomain you
can basically query
that through AJAX

00:43:59.540 --> 00:44:01.930
or stuff like that
pretty easily.

00:44:01.930 --> 00:44:04.990
So there could be
some use for that.

00:44:04.990 --> 00:44:06.160
There's blame functionality.

00:44:06.160 --> 00:44:09.770
Blame functionality you see
basically who has
edited which line.

00:44:09.770 --> 00:44:15.230
So if you've got a typo on line
20, it's clear that Chari
has made the change.

00:44:15.230 --> 00:44:17.950
And you can blame him, that's
why this is called
the blame view.

00:44:17.950 --> 00:44:20.030
It's really neat to use that.

00:44:20.030 --> 00:44:24.160
And, of course, you've got those
newer and older yeah,
indicators that are only color,

00:44:24.160 --> 00:44:32.910
but but it's pretty interesting
that empty roles are
usually very old.

00:44:32.910 --> 00:44:37.600
So that's the blame view and
then you've got the
history view.

00:44:37.600 --> 00:44:46.110
And that's so you can see all
of the comments to this one page

00:44:46.110 --> 00:44:48.310
and so basically you
can see how it evolved.

00:44:48.310 --> 00:44:53.770
If you think about, oh, several
months ago I edited something
in there, and in that file

00:44:53.770 --> 00:45:00.510
and now it's basically people
are discussing it, you can just
go in there and you can see all

00:45:00.510 --> 00:45:04.720
of the and you can see all
of the changes that happened,

00:45:04.720 --> 00:45:09.010
which is which is really
useful to check back.

00:45:09.010 --> 00:45:15.270
The numbers on the right, those
hexadecimal numbers, those are
the the basically the commit

00:45:15.270 --> 00:45:24.220
numbers, so every commit has has
one has one of those numbers so
they can reference them easily.

00:45:24.220 --> 00:45:27.080
I see a Q. And sorry for
not seeing the Q earlier.

00:45:27.080 --> 00:45:27.580
So, Katie?

00:45:27.580 --> 00:45:36.430
&gt;&gt; Though I understand more than
50% of what you are saying, I
will still say that I'm confused

00:45:36.430 --> 00:45:47.230
about and I've used Git and
Github and it that's the
whole point here to me,

00:45:47.230 --> 00:45:51.810
it's incredibly complicated.

00:45:51.810 --> 00:45:59.850
So can a simpler understanding
of commit to me seems
pretty clear.

00:45:59.850 --> 00:46:02.080
You are committing
this to the server.

00:46:02.080 --> 00:46:04.150
But the pull and the
what's the other one?

00:46:04.150 --> 00:46:04.690
&gt;&gt; Eric: Branch?

00:46:04.690 --> 00:46:08.960
&gt;&gt; Yes. The a branch I
understand that you are
pulling off a copy, right?

00:46:08.960 --> 00:46:11.660
&gt;&gt; Eric: Yeah, basically, yes.

00:46:11.660 --> 00:46:14.840
&gt;&gt; Then to put it
back, you commit it.

00:46:14.840 --> 00:46:15.430
&gt;&gt; Eric: You merge it.

00:46:15.430 --> 00:46:15.930
&gt;&gt; Merge it.

00:46:15.930 --> 00:46:20.870
Okay. And how is that
different from a pull?

00:46:20.870 --> 00:46:23.920
&gt;&gt; Eric: So good question.

00:46:23.920 --> 00:46:30.770
So basically the work happens in
branches and branches are
like lanes on the highway.

00:46:30.770 --> 00:46:34.840
If you want to do stuff
on another another branch,

00:46:34.840 --> 00:46:37.980
you basically switch
the lane on the highway.

00:46:37.980 --> 00:46:46.750
And edit in there and then when
you overtook the car in front
of you and have done your work,

00:46:46.750 --> 00:46:54.210
you merge back into that lane,
into the center lane
in that case.

00:46:54.210 --> 00:46:57.170
Which is quite a
[indiscernible] metaphor.

00:46:57.170 --> 00:47:04.240
But so a branch is basically the
same it's the same repository,

00:47:04.240 --> 00:47:06.450
but it is another
branch of work.

00:47:06.450 --> 00:47:13.000
A pull request is proposing that
this branch is merged
into the main branch.

00:47:13.000 --> 00:47:21.470
So what you do with the pull
request is that you say, "Hey,
maintainer of this repository,

00:47:21.470 --> 00:47:27.910
please merge this and put this
into the master branch"
or your main work branch.

00:47:27.910 --> 00:47:30.710
It can have any name.

00:47:30.710 --> 00:47:33.690
So that's basically
how it works.

00:47:33.690 --> 00:47:38.750
And that's the basic concept.

00:47:38.750 --> 00:47:44.620
So you are you are singling out
some piece of work and then
you get that back into the mix

00:47:44.620 --> 00:47:52.280
and you can do that as often as
you want, so it can have
multiple off both lanes and

00:47:52.280 --> 00:47:56.540
and they can be merged inside of
each other, which is weird,
but that's a possibility.

00:47:56.540 --> 00:47:59.390
And then they can be merged
back into the main branch.

00:47:59.390 --> 00:48:03.310
So you can have pull requests
between branches of any kind.

00:48:03.310 --> 00:48:04.260
I hope that made

00:48:04.260 --> 00:48:06.680
&gt;&gt; How are the collisions
then prevented?

00:48:06.680 --> 00:48:09.560
&gt;&gt; Eric: The collisions are
prevented, in that case,

00:48:09.560 --> 00:48:14.470
that you can have very
specific branches.

00:48:14.470 --> 00:48:19.440
So you don't prevent the
collision, but you you
basically make sure

00:48:19.440 --> 00:48:22.310
that every edit has
its own playground.

00:48:22.310 --> 00:48:31.310
Sorry. So so, if they did
branches just for editing for
this tutorial, for example,

00:48:31.310 --> 00:48:35.180
or for this specific feature,
or just for the design.

00:48:35.180 --> 00:48:42.150
Then everything gets committed
to this branch and, of course,

00:48:42.150 --> 00:48:44.530
there could be conflict
in there.

00:48:44.530 --> 00:48:50.010
But it's it's much less likely
that when you merge it back
that someone else did work

00:48:50.010 --> 00:48:51.380
on the same branch as you did.

00:48:51.380 --> 00:48:54.700
&gt;&gt; Eric, would it be safe to say
that the the most granular level

00:48:54.700 --> 00:48:58.210
of the changes is a
line by line change?

00:48:58.210 --> 00:49:04.020
So in that previous example when
you had, when you changed the
information from, I don't know,

00:49:04.020 --> 00:49:10.730
yeah, those three things you
said worst, you know, better
and worse and to try this,

00:49:10.730 --> 00:49:19.990
was it only that word that was
going to get merged back in or
was it the entire line of code

00:49:19.990 --> 00:49:27.020
that that word belongs to
that goes back into the merge?

00:49:27.020 --> 00:49:33.010
&gt;&gt; Eric: As far as I know, and
I'm not really sure, the
whole line gets merged.

00:49:33.010 --> 00:49:39.960
But it has the some algorithms
that say, okay, this is
the thing that has changed.

00:49:39.960 --> 00:49:44.770
So if if something else in
the line has changed as well.

00:49:44.770 --> 00:49:46.740
It won't get overwritten.

00:49:46.740 --> 00:49:52.300
&gt;&gt; So it will be say, "Hey,
listen everybody, we've
got to stop for a second,

00:49:52.300 --> 00:50:00.010
we've got a collision
possibility here
because two people tried

00:50:00.010 --> 00:50:12.290
to edit the exact same line and
different merges;"
is that right?

00:50:12.290 --> 00:50:18.960
&gt;&gt; Eric: Usually
it works out well.

00:50:18.960 --> 00:50:25.290
Sometimes there are collisions
and you need to basically
put them down

00:50:25.290 --> 00:50:38.040
and edit it back together
manually, but I don't think
that's that's something

00:50:38.040 --> 00:50:45.470
that should happen often and if
it happens, it shouldn't
be something you

00:50:45.470 --> 00:50:46.970
as contributors worry about.

00:50:46.970 --> 00:50:50.100
I think we as editors are
there to support you with that.

00:50:50.100 --> 00:50:50.670
&gt;&gt; Okay.

00:50:50.670 --> 00:50:51.310
&gt;&gt; Eric: Howard?

00:50:51.310 --> 00:50:53.860
&gt;&gt; Yeah, I had a question, Eric.

00:50:53.860 --> 00:50:58.160
I was, you know, we talked about
at the last meeting,
for instance,

00:50:58.160 --> 00:51:03.240
updating the luminosity or color
contrast ratio tool
listing, tool resource.

00:51:03.240 --> 00:51:06.990
Now, let's say I
wanted to work on that.

00:51:06.990 --> 00:51:14.860
And I could I have would I pull
that into Github, let's say, you
know, I wanted to start working

00:51:14.860 --> 00:51:19.940
on it and suggest changes and
have other people make changes.

00:51:19.940 --> 00:51:29.180
Is there I'm sure I assume
there's an easy way to
just pull that into Github

00:51:29.180 --> 00:51:30.710
and then work on it from there.

00:51:30.710 --> 00:51:32.720
Can you tell me how to do that?

00:51:32.720 --> 00:51:33.220
&gt;&gt; Eric: Yeah.

00:51:33.220 --> 00:51:37.510
So for the people from WCAG
working group, I just
we had the discussion

00:51:37.510 --> 00:51:43.810
in educational outreach on
Friday because we are preparing
both quick start guides

00:51:43.810 --> 00:51:49.140
that basically helps people to
on ramp and track
the accessibility,

00:51:49.140 --> 00:51:53.870
telling them what they need to
do, basically first
baby steps into stuff

00:51:53.870 --> 00:52:00.220
and we reference the list of
color of of color ratio,
contrast ratio tools that is

00:52:00.220 --> 00:52:01.390
in the in the techniques.

00:52:01.390 --> 00:52:09.990
And some people noted that it's
outdated and now what
to do about that.

00:52:09.990 --> 00:52:17.720
So I get into the WCAG
repository, and then
we take a look around.

00:52:17.720 --> 00:52:24.360
So the WCAG group repository
basically it's one huge
collection of X amount

00:52:24.360 --> 00:52:27.760
of files that, yeah,
that one could edit.

00:52:27.760 --> 00:52:34.600
So if I get in there and into
techniques and then
into I think UA notes.

00:52:34.600 --> 00:52:35.100
Um ... no.

00:52:35.100 --> 00:52:35.870
I don't think that's it.

00:52:35.870 --> 00:52:38.900
And then you get basically
confused and go back

00:52:38.900 --> 00:52:40.790
and [Laughter] and
don't do anything.

00:52:40.790 --> 00:52:48.440
So there are the techniques and
then I I have forgotten
which one that was.

00:52:48.440 --> 00:52:50.010
I think it's CSS,
it's a general one.

00:52:50.010 --> 00:52:50.570
I think general.

00:52:50.570 --> 00:52:54.280
Yeah. And then you can
go into those XML files.

00:52:54.280 --> 00:53:02.040
So I would just go into this
one, for example, there you've
got all of the descriptions

00:53:02.040 --> 00:53:10.000
and stuff in there and it's a
very [indiscernible] XML formats
that some people understand.

00:53:10.000 --> 00:53:16.960
You've got related techniques
and in the in the one
with the color contrast,

00:53:16.960 --> 00:53:18.460
[indiscernible],
contrast ratio ...

00:53:18.460 --> 00:53:21.320
ratio ... contrast
ratio, that's this one.

00:53:21.320 --> 00:53:26.070
&gt;&gt; And I can send you the URL,
the page that I'm
specifically talking about.

00:53:26.070 --> 00:53:27.940
The tools page, would
that be helpful?

00:53:27.940 --> 00:53:28.440
&gt;&gt; Eric: Yeah.

00:53:28.440 --> 00:53:31.660
&gt;&gt; Instead of looking for
it, I will put that in IRC.

00:53:31.660 --> 00:53:32.160
&gt;&gt; Eric: Awesome.

00:53:32.160 --> 00:53:32.660
Right. There we go.

00:53:32.660 --> 00:53:39.820
It's an understanding yeah,
understanding even more
complex off the document,

00:53:39.820 --> 00:53:45.690
so so that's why I wouldn't
advise you to edit
understanding correct

00:53:45.690 --> 00:53:52.450
to directly it's visual audio
contrast, understanding,

00:53:52.450 --> 00:53:55.640
then you've got the visual audio
contrast and [indiscernible].

00:53:55.640 --> 00:53:57.450
So it should be somewhere
in there.

00:53:57.450 --> 00:53:58.780
Yes, here are the resources.

00:53:58.780 --> 00:54:07.300
So so that's all you can find us
and then it's got
basically like age ref things

00:54:07.300 --> 00:54:10.330
where you could make
changes now.

00:54:10.330 --> 00:54:16.720
So you could theoretically
edit this file.

00:54:16.720 --> 00:54:21.940
&gt;&gt; I would want to would I want
to branch it first
before I did anything?

00:54:21.940 --> 00:54:22.900
You know, I'm just

00:54:22.900 --> 00:54:30.410
&gt;&gt; Eric: You could do that in
one step, so if you got on
the button create a new branch

00:54:30.410 --> 00:54:38.160
and probably it says create a
new fork, which is the same
thing, don't get confused.

00:54:38.160 --> 00:54:39.230
&gt;&gt; Oh, okay.

00:54:39.230 --> 00:54:40.240
I'm confused.

00:54:40.240 --> 00:54:40.740
[Laughter].

00:54:40.740 --> 00:54:47.080
&gt;&gt; Eric: So if you don't have
writing access to
[indiscernible] it will fork it.

00:54:47.080 --> 00:54:51.300
Forking is the same
thing as branching.

00:54:51.300 --> 00:54:57.770
Only that it is in your account
and not in the account
of and not in the main

00:54:57.770 --> 00:54:58.270
&gt;&gt; I see.

00:54:58.270 --> 00:55:00.430
&gt;&gt; Eric: In the main repository.

00:55:00.430 --> 00:55:07.380
So basically, if you download,
clone the repository on to
your computer, you are forking

00:55:07.380 --> 00:55:13.220
that as well, but no one would
say would know it's like that.

00:55:13.220 --> 00:55:19.640
So you can do that in one thing
and get a pull request and
you could change them out.

00:55:19.640 --> 00:55:31.110
What you also can do, that
probably makes a bit more sense
in this case, is to just go

00:55:31.110 --> 00:55:32.930
to issues and create
a new issue.

00:55:32.930 --> 00:55:35.430
And write your suggestions
in there.

00:55:35.430 --> 00:55:45.170
Then people can comment on it,
can contribute other
ideas to that,

00:55:45.170 --> 00:55:50.030
can link other resources to it.

00:55:50.030 --> 00:55:56.970
And then in the end, the editors
can say, okay, this is the list
of resources we want to add

00:55:56.970 --> 00:56:05.830
to that technique, to that
understanding document, and they
can basically then compile the

00:56:05.830 --> 00:56:08.230
list themselves and
put it in there.

00:56:08.230 --> 00:56:14.510
So because it's a much more open
process, I think that's useful.

00:56:14.510 --> 00:56:21.640
If you've got a concrete tool on
that list that is
broken, for example,

00:56:21.640 --> 00:56:28.780
or the URL is not resolving
anymore, then you would go
in there and just deleting

00:56:28.780 --> 00:56:31.850
that link and commenting that
this is not working anymore.

00:56:31.850 --> 00:56:33.750
So you

00:56:33.750 --> 00:56:36.850
&gt;&gt; Put in a new link
or whatever, yeah.

00:56:36.850 --> 00:56:42.050
&gt;&gt; Eric: You could also put in a
new link and then people could
discuss the pull request,

00:56:42.050 --> 00:56:42.960
as I said.

00:56:42.960 --> 00:56:59.800
It's not that clear cut when to
use the pull request or
when to use an issue.

00:56:59.800 --> 00:57:06.130
Basically for gathering of
information, I would
prefer an issue.

00:57:06.130 --> 00:57:17.140
But in that case, it's basically
50/50, what to use and I think
the editors of WCAG are fine

00:57:17.140 --> 00:57:20.980
with having having directly
a pull request in there.

00:57:20.980 --> 00:57:21.480
&gt;&gt; Okay.

00:57:21.480 --> 00:57:24.430
&gt;&gt; Eric: So, yeah, that's that
basically is the approach.

00:57:24.430 --> 00:57:29.430
To find that, I will put the
link to the file into IRC

00:57:29.430 --> 00:57:34.270
so you can just go
there and have a look.

00:57:34.270 --> 00:57:37.510
If you want to.

00:57:37.510 --> 00:57:45.660
Yeah, that's that's how she used
the the XML files and to get
through the WCAG repository,

00:57:45.660 --> 00:57:54.640
which is huge and very
confusing, even for me, and
very XML, so so I have heard

00:57:54.640 --> 00:58:04.060
that techniques that we're
thinking about moving the
techniques to a different system

00:58:04.060 --> 00:58:08.460
so we can edit them more easily,
but I don't know if
that will also apply

00:58:08.460 --> 00:58:12.290
to the understanding document.

00:58:12.290 --> 00:58:14.510
&gt;&gt; Okay. That helped a lot.

00:58:14.510 --> 00:58:15.010
Thanks.

00:58:15.010 --> 00:58:15.910
&gt;&gt; Eric: Thank you, Howard.

00:58:15.910 --> 00:58:18.700
So just getting back
to the slides.

00:58:18.700 --> 00:58:24.990
Those were all of the file
types, so you saw XML is in
there as well and you got

00:58:24.990 --> 00:58:30.720
that nice highlighting fun
stuff, it's really useful.

00:58:30.720 --> 00:58:34.630
I have talked about issues and I
have talked about pull requests.

00:58:34.630 --> 00:58:36.780
And as you see, those are the
slides that I skipped over.

00:58:36.780 --> 00:58:42.710
I didn't do it in the in the
order I wanted, actually,
[Laughter], so ...

00:58:42.710 --> 00:58:47.160
but we have talked about
everything that is interesting.

00:58:47.160 --> 00:58:55.850
When you are doing pull requests
or issues, you have
some nice possibilities

00:58:55.850 --> 00:59:04.000
to reference people and/or
issues and/or commits.

00:59:04.000 --> 00:59:12.640
So when you're typing the
username, it's basically
like an "@" reply on Twitter

00:59:12.640 --> 00:59:20.140
and that person gets a ping and
can can react to your
comment or your pull request.

00:59:20.140 --> 00:59:21.380
That's really neat.

00:59:21.380 --> 00:59:36.040
If you write #123, it will
automatically link to
issue 123 from this.

00:59:36.040 --> 00:59:39.380
So you don't need to
search for the URL.

00:59:39.380 --> 00:59:44.990
If you want to reference a
specific commit, I have
talked about the commit hash.

00:59:44.990 --> 00:59:50.030
For example, 6F8BDDCO11
on one, C011.

00:59:50.030 --> 00:59:56.380
Those are every commit has one
of those and you can also,
if you go into the history

00:59:56.380 --> 01:00:00.900
of that file, you can copy and
paste that from the
right and if you look

01:00:00.900 --> 01:00:05.590
at the main WCAG repository
thing, it's in there as well.

01:00:05.590 --> 01:00:17.290
So so easy to access and then
you can say oh, I moved that
really, I don't really think

01:00:17.290 --> 01:00:20.880
that this commit
is the right thing.

01:00:20.880 --> 01:00:32.460
So if we go back to to the issue
I've created and in the
tutorials, the pull request

01:00:32.460 --> 01:00:38.340
that I have created, then I have
the other idea and on
the right you'll see

01:00:38.340 --> 01:00:43.410
that the hash is
there as well, also.

01:00:43.410 --> 01:00:49.190
Although it's not
really easy to read.

01:00:49.190 --> 01:00:57.990
But then you could say at the
person you want to
reference, I thought the change

01:00:57.990 --> 01:01:04.190
in then copying or pasting in
the commit hash was better.

01:01:04.190 --> 01:01:07.000
Then you can comment.

01:01:07.000 --> 01:01:13.690
And so this links to the profile
and this links to
the to the change,

01:01:13.690 --> 01:01:18.960
the change from guidance
to hints.

01:01:18.960 --> 01:01:24.730
And that's very useful to speak
about stuff and get
this out correctly.

01:01:24.730 --> 01:01:28.320
So that's something
that you can do.

01:01:28.320 --> 01:01:37.270
Another thing that you can do is
that those those comment boxes
everywhere are supporting

01:01:37.270 --> 01:01:40.790
markdown, as it says here.

01:01:40.790 --> 01:01:47.870
So basically you've got other
things as well that you can do.

01:01:47.870 --> 01:01:54.180
For example, you can have bold
and italic things in there,
you can have links in there

01:01:54.180 --> 01:01:59.410
that don't that don't need
to be just plain text links.

01:01:59.410 --> 01:02:03.330
Of course, plain text URLs work
as well and they get
converted to real anchors.

01:02:03.330 --> 01:02:05.100
Then you can use lists.

01:02:05.100 --> 01:02:13.100
So if you've got 1, 2, 3, or a
star or a bullet point or
dash as a bullet point,

01:02:13.100 --> 01:02:15.240
those will be converted
into HTML.

01:02:15.240 --> 01:02:23.150
It's super useful to write stuff
out, so if you're creating if
you're creating your commits,

01:02:23.150 --> 01:02:25.440
use that to structure
your commits.

01:02:25.440 --> 01:02:26.610
It can be really useful.

01:02:26.610 --> 01:02:30.010
If you look into images, you
can, of course, reference images

01:02:30.010 --> 01:02:30.760
from there, which
is nice as well.

01:02:30.760 --> 01:02:33.600
You can use headings, if you've
got something that's really long

01:02:33.600 --> 01:02:38.740
and probably then it's not an
issue, but more like
a like a long text,

01:02:38.740 --> 01:02:44.270
so you can use all six headings,
structures, if you
would like to.

01:02:44.270 --> 01:02:49.720
And you can use the the angle
bracket to have a
quote in there as well.

01:02:49.720 --> 01:03:02.740
So, for example, that would be
useful if you discussed
something in in the meeting

01:03:02.740 --> 01:03:10.370
and then this gets minuted and
then you want to reference those
minutes for what you're doing,

01:03:10.370 --> 01:03:18.370
you can copy that over and
quote that, really useful.

01:03:18.370 --> 01:03:24.750
It has code support, which is
probably not too surprising.

01:03:24.750 --> 01:03:33.540
When we consider that it's it's
basically the code
[indiscernible] platform.

01:03:33.540 --> 01:03:44.830
So so it uses [indiscernible]
like this to mark up end line
code and triple [indiscernible]

01:03:44.830 --> 01:03:54.740
if it's like a block of code and
if you want you can also have
the triple back ticks on the top

01:03:54.740 --> 01:04:01.700
and immediately follow it by the
language that is
used and then it has

01:04:01.700 --> 01:04:05.610
like those need syntax
highlighting stuff,
are which is useful.

01:04:05.610 --> 01:04:08.870
That's why I try to use
that as often as possible.

01:04:08.870 --> 01:04:12.560
And then there are some extras,
you can have checklists in there

01:04:12.560 --> 01:04:16.660
with complete and
incomplete items.

01:04:16.660 --> 01:04:22.050
It's basically a list and then
you've got in square brackets
the the [indiscernible] space

01:04:22.050 --> 01:04:30.430
on x that marks the completed
stuff and in your repository
you can check and uncheck that

01:04:30.430 --> 01:04:35.650
and it gets automatically
saved, which is pretty nice.

01:04:35.650 --> 01:04:43.490
And, of course, there are some
emojis that you can use
because what is a modern system

01:04:43.490 --> 01:04:44.600
without any emojis.

01:04:44.600 --> 01:04:49.070
And that you can use to
give more specific feedback.

01:04:49.070 --> 01:04:53.850
I think it's very neat that we
can be so structured on things.

01:04:53.850 --> 01:04:57.540
If you've got questions
left, I take them now.

01:04:57.540 --> 01:05:01.250
And I or else I would pull up an
example I've yeah
prepared, in air quotes,

01:05:01.250 --> 01:05:09.720
but I have made some changes to
the tutorials, which
come from issues

01:05:09.720 --> 01:05:15.350
and I can basically fix those
issues now and I would
like to show that to you

01:05:15.350 --> 01:05:20.140
as the next step in this
basically the last
thing we do today.

01:05:20.140 --> 01:05:27.320
So any questions or is everyone
still only at 50%
of understanding?

01:05:27.320 --> 01:05:28.610
&gt;&gt; I'm at 55.

01:05:28.610 --> 01:05:29.510
[Laughter].

01:05:29.510 --> 01:05:32.670
&gt;&gt; Eric: Oh, that's very good.

01:05:32.670 --> 01:05:38.830
&gt;&gt; Eric, it seems like a lot of
the people that I
was speaking to,

01:05:38.830 --> 01:05:44.270
at least on the mobile task
force, are using an
editor and, you know,

01:05:44.270 --> 01:05:49.730
and going that way rather than
directly into Github itself.

01:05:49.730 --> 01:05:56.240
Do you personally find yourself
using the the editor,
the interface,

01:05:56.240 --> 01:06:01.930
the Github interface itself
rather than, you
know, a local editor?

01:06:01.930 --> 01:06:04.770
&gt;&gt; Eric: Well, for
me it depends.

01:06:04.770 --> 01:06:13.270
When I'm writing text, I'm
usually use my local editor

01:06:13.270 --> 01:06:25.540
because I think it's
much more convenient.

01:06:25.540 --> 01:06:34.150
And I like to think through
stuff and also with the with
the tutorials, for example,

01:06:34.150 --> 01:06:50.220
those need to be regenerated
whenever I make a change and
I can have that run locally,

01:06:50.220 --> 01:06:59.070
so I can see it all the time,
how stuff changes, that's
more convenient for me.

01:06:59.070 --> 01:07:04.910
But basically, it
depends on the change.

01:07:04.910 --> 01:07:07.700
If it's a quick change
I use the the Github

01:07:07.700 --> 01:07:10.450
&gt;&gt; So are you using
SourceTree, also?

01:07:10.450 --> 01:07:14.220
&gt;&gt; Eric: I actually use Tower
for Mac, it's a commercial tool.

01:07:14.220 --> 01:07:16.550
But they are working
all the same.

01:07:16.550 --> 01:07:20.850
They are not too much
differences between them.

01:07:20.850 --> 01:07:24.380
It's more the user
interface stuff.

01:07:24.380 --> 01:07:29.590
But, yeah, it's not that
different, once you got
the nomenclature right

01:07:29.590 --> 01:07:32.860
and know what you are talking
about there, they're
pretty similar.

01:07:32.860 --> 01:07:36.980
&gt;&gt; Yeah, the because there are a
few questions that
of course SourceTree,

01:07:36.980 --> 01:07:42.100
just to make sure that, you
know, if you have a fork
going on and you're trying

01:07:42.100 --> 01:07:46.430
to do a pull request, how do you
relate that fork to the master,

01:07:46.430 --> 01:07:49.350
the original master
in that kind of thing?

01:07:49.350 --> 01:07:54.640
It sounds like a 2.0
tutorial perhaps.

01:07:54.640 --> 01:07:55.140
&gt;&gt; Eric: Yeah.

01:07:55.140 --> 01:08:00.810
So the pull request thing is
something that is
basically a Github thing.

01:08:00.810 --> 01:08:09.510
So you can't do that from
external tools apart from the
Github tools that they provide.

01:08:09.510 --> 01:08:14.420
So if you want to use
[indiscernible] for
branching, not for branching

01:08:14.420 --> 01:08:21.510
but for merging things back as a
pull request and just and
request a pull in the interface

01:08:21.510 --> 01:08:25.190
for on Github, you basically
have to use Github
and do that online.

01:08:25.190 --> 01:08:29.410
So I can show you
how that works.

01:08:29.410 --> 01:08:32.400
So if we go into the tutorials.

01:08:32.400 --> 01:08:37.700
Or I'll just go to the quick
start tips because it's not
not such a large tutorial.

01:08:37.700 --> 01:08:41.160
Such a large repository.

01:08:41.160 --> 01:08:42.190
So it's easier.

01:08:42.190 --> 01:08:44.290
So we've got 11 branches
in there.

01:08:44.290 --> 01:08:47.610
And most are most are put
in there how it should be.

01:08:47.610 --> 01:08:55.600
So so if if I had changes now
and wanted to pull that into
it, I can use the the compare,

01:08:55.600 --> 01:08:59.690
review and create
pull request button.

01:08:59.690 --> 01:09:03.710
And then you see you can say
"I want the base branch."

01:09:03.710 --> 01:09:06.580
That's basically
the master branch.

01:09:06.580 --> 01:09:11.560
And then you compare, for
example, the you
have to attach one,

01:09:11.560 --> 01:09:14.050
which probably is
way out of date.

01:09:14.050 --> 01:09:18.620
There's nothing to compare
because I've already
put that in.

01:09:18.620 --> 01:09:24.360
But if I fork this to my own own
thing and make a
change, for example,

01:09:24.360 --> 01:09:26.310
deleting things in
there, just for

01:09:26.310 --> 01:09:27.870
&gt;&gt; Yeah, I understand you.

01:09:27.870 --> 01:09:33.290
&gt;&gt; Eric: And then the pull
request so I cannot commit
directly to my master branch.

01:09:33.290 --> 01:09:37.100
Because that's local in my
thing and then it doesn't work.

01:09:37.100 --> 01:09:37.770
That's interesting.

01:09:37.770 --> 01:09:38.870
Oh, yeah, okay.

01:09:38.870 --> 01:09:41.500
So um ... that worked
actually worked out.

01:09:41.500 --> 01:09:43.030
Just a small hiccup.

01:09:43.030 --> 01:09:51.580
And then then now I could I
could do the pull request and
the base is WC3 repository

01:09:51.580 --> 01:09:54.520
and this is my repository.

01:09:54.520 --> 01:10:04.440
And then I see that I'm able to
create a pull request
and that works

01:10:04.440 --> 01:10:06.700
like like it usually would work.

01:10:06.700 --> 01:10:16.290
So you click on create a pull
request and then you can add
your labels and your comment

01:10:16.290 --> 01:10:18.840
and your stuff like that.

01:10:18.840 --> 01:10:25.830
&gt;&gt; Okay. So on the left hand
side, when you say your base,
that's the one that you're going

01:10:25.830 --> 01:10:28.610
to be comparing everything
else to?

01:10:28.610 --> 01:10:29.420
&gt;&gt; Eric: Yes.

01:10:29.420 --> 01:10:36.740
So the base is the repository
and branch, that that the
things are committed to.

01:10:36.740 --> 01:10:42.130
And yeah, that's confusing.

01:10:42.130 --> 01:10:51.370
And the the thing you are
currently working on, that
those are called hatch branch

01:10:51.370 --> 01:10:55.510
and hatch fork, in that case.

01:10:55.510 --> 01:10:58.490
&gt;&gt; So theoretically, I could
actually I could merge
a master branch into my

01:10:58.490 --> 01:11:02.790
like if I changed something in
my master branch,
on the master branch

01:11:02.790 --> 01:11:11.880
and then I had my own little
branch going on, I
could actually put

01:11:11.880 --> 01:11:17.380
that into my branch using this
tool and the base
would be my branch

01:11:17.380 --> 01:11:22.170
and the other one would be
the master branch, right?

01:11:22.170 --> 01:11:22.940
&gt;&gt; Eric: Right.

01:11:22.940 --> 01:11:26.940
So what we do with the tutorial,
we have that release
branch and into

01:11:26.940 --> 01:11:35.240
that branch we always once we do
a release, we put our master
branch, we pull that in there,

01:11:35.240 --> 01:11:41.320
that's not a pull request, per
se, because we can do
it just straightforward

01:11:41.320 --> 01:11:43.040
and commit that to that.

01:11:43.040 --> 01:11:43.920
And just merge them.

01:11:43.920 --> 01:11:45.070
But yeah, you can do that.

01:11:45.070 --> 01:11:52.790
Because when you think about
about problems or stuff and
you're working on your version

01:11:52.790 --> 01:12:06.720
of it on your fork, so to speak,
of that, you are the one
who who makes progress

01:12:06.720 --> 01:12:13.440
and then probably the source
repository makes progress as
well and you're out of sync.

01:12:13.440 --> 01:12:23.070
And for those things that you
haven't worked on, you probably
want to pull in the changes

01:12:23.070 --> 01:12:29.170
of that master branch so, yeah,
you can branch as
much as you like.

01:12:29.170 --> 01:12:30.900
Basically.

01:12:30.900 --> 01:12:35.300
And from which sides
basically that you want.

01:12:35.300 --> 01:12:41.110
It's a pretty it's a pretty it's
a concept that's really, really
powerful, but as we know,

01:12:41.110 --> 01:12:50.670
that comes with a lot of
responsibility, so, yeah, it's
it's there's a lot going on.

01:12:50.670 --> 01:12:53.340
So any other questions?

01:12:53.340 --> 01:12:55.370
Doesn't sound like it.

01:12:55.370 --> 01:12:59.340
Okay. Then I just
I'll get this up.

01:12:59.340 --> 01:13:01.670
So for the ah clicked
the wrong icon.

01:13:01.670 --> 01:13:09.130
So for the tutorials, we've got
this this bug number
303 that was reported

01:13:09.130 --> 01:13:13.220
as something that does not work.

01:13:13.220 --> 01:13:18.960
And we also got another related
bug down here that
is this one, 85,

01:13:18.960 --> 01:13:22.080
that that also was was reported.

01:13:22.080 --> 01:13:24.270
And I have addressed it now.

01:13:24.270 --> 01:13:29.860
So I will just switch to my to
Tower, I'm sharing
two applications,

01:13:29.860 --> 01:13:33.040
how does that look like for you?

01:13:33.040 --> 01:13:33.580
&gt;&gt; It's fine.

01:13:33.580 --> 01:13:35.130
&gt;&gt; All we see is Tower, right?

01:13:35.130 --> 01:13:40.020
&gt;&gt; Eric: So if I switch
to Safari, you see Safari.

01:13:40.020 --> 01:13:40.610
&gt;&gt; We see that.

01:13:40.610 --> 01:13:44.400
&gt;&gt; Eric: Oh, that's
interesting, that's useful.

01:13:44.400 --> 01:13:48.730
So that's Tower and here
are the changes in the file.

01:13:48.730 --> 01:13:56.850
And those as I said, those
things basically look the same
everywhere and you don't need

01:13:56.850 --> 01:14:01.100
to to think about those
about those things.

01:14:01.100 --> 01:14:06.680
You can always have the history
and see your your branches
and here, of course,

01:14:06.680 --> 01:14:12.310
are our our branches that are on
the top, so if I
would change now

01:14:12.310 --> 01:14:15.940
to the yetil patch 1
branch, I could do that.

01:14:15.940 --> 01:14:22.390
I could check that out on my
computer and work on this idea
that I will most likely not use.

01:14:22.390 --> 01:14:24.880
But but, yeah, there are a few
things in there and
then you'll see

01:14:24.880 --> 01:14:29.100
when things are would collide,
basically you've
got more branches

01:14:29.100 --> 01:14:33.190
and they are then merged into
each other and it's usually
no problem and the nice thing

01:14:33.190 --> 01:14:44.740
with this, that's the particular
nice one, and and the nice
thing with with this client is

01:14:44.740 --> 01:14:52.190
that it's very colorful thing
that that's the thing that I'm
enjoying the most out of this,

01:14:52.190 --> 01:14:55.300
especially if it
works like that.

01:14:55.300 --> 01:14:55.800
[Laughter].

01:14:55.800 --> 01:15:03.730
You got you've got like really
interesting stuff so
that happens when you use

01:15:03.730 --> 01:15:10.700
like really, really microscopic
changes and send
in pull requests

01:15:10.700 --> 01:15:16.240
and then I merge them in, you
make me very happy because
my client is getting so,

01:15:16.240 --> 01:15:19.010
so colorful.

01:15:19.010 --> 01:15:25.630
So so but what I've done here is
basically I've changed
those things

01:15:25.630 --> 01:15:28.300
and have some some
changes in there.

01:15:28.300 --> 01:15:31.080
I will now mark them all as and
stage them all, that's basically

01:15:31.080 --> 01:15:31.580
&gt;&gt; Eric?

01:15:31.580 --> 01:15:32.280
&gt;&gt; Eric: Yes.

01:15:32.280 --> 01:15:35.840
&gt;&gt; Excuse me, this
is Katie, one second.

01:15:35.840 --> 01:15:40.820
What is the comparable
tool to Tower for Windows?

01:15:40.820 --> 01:15:41.800
Is that Sparkle?

01:15:41.800 --> 01:15:47.320
&gt;&gt; Eric: I don't know about
Sparkle, SourceTree is working
very well and the Github

01:15:47.320 --> 01:15:50.010
for Windows is working
well as well.

01:15:50.010 --> 01:16:00.460
&gt;&gt; I use Github for Windows, but
I don't think that's it gets
messed up with Windows 8

01:16:00.460 --> 01:16:06.600
and it bothers me, so maybe
I need to use SourceTree.

01:16:06.600 --> 01:16:10.420
&gt;&gt; Eric: Yeah, then you should
take a look at SourceTree.

01:16:10.420 --> 01:16:15.170
&gt;&gt; Yes, SourceTree is what
everybody on the mobile
task force is using.

01:16:15.170 --> 01:16:16.470
I just moved over to it.

01:16:16.470 --> 01:16:17.120
I was on the Github

01:16:17.120 --> 01:16:18.150
&gt;&gt; Okay, okay.

01:16:18.150 --> 01:16:22.060
&gt;&gt; Eric: Yeah, SourceTree has
all of the nitty gritty
of Git built in there,

01:16:22.060 --> 01:16:30.130
so the Github stuff, at least
they use the Github
wording and stuff.

01:16:30.130 --> 01:16:36.460
But they are pretty much dumbed
down and don't expose like
the real power of Git.

01:16:36.460 --> 01:16:40.250
So, yeah. That's that's so
SourceTree is quite
good for what it is.

01:16:40.250 --> 01:16:41.940
So I've now staged that.

01:16:41.940 --> 01:16:48.300
So that staging in that context
means that I mark it
that I want to commit it.

01:16:48.300 --> 01:16:59.160
If I would have like multiple
files, I could choose to
only commit a few of them.

01:16:59.160 --> 01:17:08.390
And even here on the right side,
in this line, I can only
stage a chunk of edits.

01:17:08.390 --> 01:17:11.920
And then only this
will be committed.

01:17:11.920 --> 01:17:21.300
For example, if I had reworked a
text and I want to have
multiple commits out of that,

01:17:21.300 --> 01:17:24.710
because there were separate
issues, I could do that.

01:17:24.710 --> 01:17:30.390
But that's not too
relevant in this context.

01:17:30.390 --> 01:17:37.060
What I can do now is having my
commit message, it's
the same thing

01:17:37.060 --> 01:17:40.750
that you can do on
Github itself.

01:17:40.750 --> 01:17:42.440
Fix dropdown bugss.

01:17:42.440 --> 01:17:48.920
You want to be at least a bit
precise and then I can
go and write fixes,

01:17:48.920 --> 01:17:53.160
issue #185 and fixes #303.

01:17:53.160 --> 01:17:57.930
And what's happened now is when
I commit that, nothing happens
because this is now only

01:17:57.930 --> 01:18:02.570
on my computer and I will check
back to the Safari once I would
push that to the remote server.

01:18:02.570 --> 01:18:03.910
So that's the other thing.

01:18:03.910 --> 01:18:08.710
When you have a remote
repository and edit the
stuff on your computer,

01:18:08.710 --> 01:18:15.510
you basically need to pull the
changes in and that's very
confusing with the pull requests

01:18:15.510 --> 01:18:20.200
and I'm so sorry, but
that's how they named stuff.

01:18:20.200 --> 01:18:27.650
But basically you pull stuff
down to your computer
and then you need

01:18:27.650 --> 01:18:31.710
to push it up into the cloud.

01:18:31.710 --> 01:18:38.590
And what we're doing now is we
will push this branch that has
the has the changes in there

01:18:38.590 --> 01:18:46.260
and click on push and we want to
push that to this branch, to the
master branch and what happens

01:18:46.260 --> 01:18:55.070
in Safari, instantly, once we do
that, is this this issue
that was referenced

01:18:55.070 --> 01:19:04.950
in there is automatically closed
because I have fixed
our fixes #185.

01:19:04.950 --> 01:19:12.920
It automatically detects that
and closes those box, which
of course is very useful

01:19:12.920 --> 01:19:19.600
and you get on the bottom you
get the reference to to the
commit, so and you get the links

01:19:19.600 --> 01:19:20.600
to the other issue, as well.

01:19:20.600 --> 01:19:25.070
And you can basically look at
how what has changed
and stuff like that.

01:19:25.070 --> 01:19:30.340
That's really useful, makes it
really easy to work
with that Github stuff.

01:19:30.340 --> 01:19:33.830
And with the issues on Github.

01:19:33.830 --> 01:19:41.920
So that's basically how to fix
things using Git and Github.

01:19:41.920 --> 01:19:49.110
And I don't think I have a lot
more and it's going on
for quite some time.

01:19:49.110 --> 01:19:55.940
So any questions,
closing questions?

01:19:55.940 --> 01:20:02.280
&gt;&gt; I just want to thank you,
Eric, for putting the time in

01:20:02.280 --> 01:20:06.820
and giving us this
intro into Github.

01:20:06.820 --> 01:20:15.440
I think it's been very useful
and it gives you a
springboard to continue on with.

01:20:15.440 --> 01:20:18.650
Thank you for your efforts and
your hard work in
setting up for this.

01:20:18.650 --> 01:20:19.150
Of.

01:20:19.150 --> 01:20:21.970
&gt;&gt; Eric: That's not a
question, but thank you.

01:20:21.970 --> 01:20:22.470
[Laughter].

01:20:22.470 --> 01:20:27.420
&gt;&gt; I have a question, but
it's not about Github really.

01:20:27.420 --> 01:20:30.250
Do you say before that the
[indiscernible] will be moved

01:20:30.250 --> 01:20:34.860
to another system, to
another repository?

01:20:34.860 --> 01:20:37.410
&gt;&gt; Eric: Yeah, so that's pretty
much in discussion in WCAG.

01:20:37.410 --> 01:20:49.070
So we WCAG working group thinks
about some possibilities and we
can follow up on that off line

01:20:49.070 --> 01:20:53.450
and I can point you to
the relevant discussion.

01:20:53.450 --> 01:21:00.270
There's nothing definitive on
there and they will
stay in that format

01:21:00.270 --> 01:21:03.090
as they are for quite some time.

01:21:03.090 --> 01:21:04.260
&gt;&gt; Okay. Thank you.

01:21:04.260 --> 01:21:06.410
And thank you for
your presentation.

01:21:06.410 --> 01:21:07.480
&gt;&gt; Eric: Thank you.

01:21:07.480 --> 01:21:08.280
Okay.

01:21:08.280 --> 01:21:14.590
&gt;&gt; Thanks, Eric, it
was really helpful.

01:21:14.590 --> 01:21:16.300
&gt;&gt; Eric: I hope so.

01:21:16.300 --> 01:21:17.280
I hope so.

01:21:17.280 --> 01:21:23.870
I hope you all now understand
about 56% of [Laughter] of
what's going on in Github.

01:21:23.870 --> 01:21:26.640
That is more than
I do understand.

01:21:26.640 --> 01:21:27.140
So [Laughter].

01:21:27.140 --> 01:21:31.410
It's it's very interesting and
it's very there's a
lot of stuff in there.

01:21:31.410 --> 01:21:36.890
And the just getting practice
with those those issues and
things that have the most to get

01:21:36.890 --> 01:21:38.810
to get to grips with this.

01:21:38.810 --> 01:21:47.490
So, yeah, I think it's it will
hopefully help us to to work
a little bit more efficient

01:21:47.490 --> 01:21:54.950
and directly on the deliverables
because I think that
will help a lot.

01:21:54.950 --> 01:21:58.220
&gt;&gt; Thank you, Eric,
appreciate it.

01:21:58.220 --> 01:22:00.600
&gt;&gt; Eric: Thank you very
much for attending this.

01:22:00.600 --> 01:22:06.420
I will see if I get the video
out of and off the WebEx
somehow and post it on YouTube

01:22:06.420 --> 01:22:11.200
or something like that for
the people who couldn't attend

01:22:11.200 --> 01:22:15.250
because I think that's
really, really useful.

01:22:15.250 --> 01:22:21.180
If you have got follow up
questions, I'll keep
the Github IRC channel

01:22:21.180 --> 01:22:26.290
up for the next few
days at least.

01:22:26.290 --> 01:22:38.210
Probably we will stay in there
forever and just approach
me and ask questions

01:22:38.210 --> 01:22:59.600
and we can we can see
how to how to move along.

01:22:59.600 --> 01:23:12.210
Thank you very much.

01:23:12.210 --> 01:41:13.700
[End of webinar].

