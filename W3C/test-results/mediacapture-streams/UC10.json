{
  "results": [
    {
      "test": "/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/api-present.html",
      "subtests": [
        {
          "name": "getUserMedia() is present on navigator",
          "status": "FAIL",
          "message": "assert_true: navigator.getUserMedia exists expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/deny.html",
      "subtests": [
        {
          "name": "Tests that the error callback is triggered when permission is denied",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/deny.html:24:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/deny.html:23:3)"
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: getExtractedNovelData is not defined"
    },
    {
      "test": "/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/empty-option-param.html",
      "subtests": [
        {
          "name": "Tests that getUserMedia raises a NOT_SUPPORTED_ERR exception when used with an empty options parameter",
          "status": "FAIL",
          "message": "assert_throws: function \"function () {\n      navigator.getUserMedia({}, t.step_fun...\" threw object \"TypeError: Object #<Navigator> has no method 'getUserMedia'\" that is not a DOMException NOT_SUPPORTED_ERR: property \"code\" is equal to undefined, expected 9"
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: getExtractedNovelData is not defined"
    },
    {
      "test": "/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/getusermedia-impossible-constraint.html",
      "subtests": [
        {
          "name": "Tests that setting an impossible constraint in getUserMedia fails",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/getusermedia-impossible-constraint.html:23:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/getusermedia-impossible-constraint.html:22:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/getusermedia-optional-constraint.html",
      "subtests": [
        {
          "name": "Tests that setting an optional constraint in getUserMedia is handled as optional",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/getusermedia-optional-constraint.html:22:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/getusermedia-optional-constraint.html:21:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/getusermedia-trivial-constraint.html",
      "subtests": [
        {
          "name": "Tests that setting a trivial mandatory constraint in getUserMedia works",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/getusermedia-trivial-constraint.html:22:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/getusermedia-trivial-constraint.html:21:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/obtaining-local-multimedia-content/navigatorusermedia/unknownkey-option-param.html",
      "subtests": [
        {
          "name": "getUserMedia({doesnotexist:true}) aborts with NOT_SUPPORTED_ERR",
          "status": "FAIL",
          "message": "assert_throws: function \"function () {\n        navigator.getUserMedia(\n           ...\" threw object \"ReferenceError: t is not defined\" that is not a DOMException NOT_SUPPORTED_ERR: property \"code\" is equal to undefined, expected 9"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/introduction/disabled-audio-silence.html",
      "subtests": [
        {
          "name": "Tests that a disabled audio track in a MediaStream is rendered as silence",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/introduction/disabled-audio-silence.html:26:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/introduction/disabled-audio-silence.html:25:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/introduction/disabled-video-black.html",
      "subtests": [
        {
          "name": "Tests that a disabled video track in a MediaStream is rendered as blackness",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/introduction/disabled-video-black.html:26:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/introduction/disabled-video-black.html:25:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastream/audio.html",
      "subtests": [
        {
          "name": "Tests that a MediaStream with exactly one audio track is returned",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/audio.html:24:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/audio.html:23:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastream/mediastream-addtrack.html",
      "subtests": [
        {
          "name": "Tests that adding a track to a MediaStream works as expected",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/mediastream-addtrack.html:24:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/mediastream-addtrack.html:21:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastream/mediastream-finished-add.html",
      "subtests": [
        {
          "name": "Tests that an addition to a finished MediaStream raises an exception",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/mediastream-finished-add.html:26:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/mediastream-finished-add.html:23:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastream/mediastream-gettrackid.html",
      "subtests": [
        {
          "name": "Tests that MediaStream.getTrackById works as expected",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/mediastream-gettrackid.html:21:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/mediastream-gettrackid.html:20:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastream/mediastream-idl.html",
      "subtests": [
        {
          "name": "Tests that a MediaStream constructor follows the algorithm set in the spec",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/mediastream-idl.html:27:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/mediastream-idl.html:26:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastream/mediastream-removetrack.html",
      "subtests": [
        {
          "name": "Tests that a removal from a MediaStream works as expected",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/mediastream-removetrack.html:23:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/mediastream-removetrack.html:21:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastream/stream-ended.html",
      "subtests": [
        {
          "name": "Tests that a MediaStream handles ended correctly",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/stream-ended.html:24:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/stream-ended.html:23:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastream/video.html",
      "subtests": [
        {
          "name": "Tests that a MediaStream with at least one video track is returned",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/video.html:24:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastream/video.html:23:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastreamtrack/mediastreamtrack-end.html",
      "subtests": [
        {
          "name": "Tests that the video MediaStreamTrack objects are properly ended on permission revocation",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastreamtrack/mediastreamtrack-end.html:24:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastreamtrack/mediastreamtrack-end.html:23:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastreamtrack/mediastreamtrack-id.html",
      "subtests": [
        {
          "name": "Tests that distinct mediastream tracks have distinct ids ",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastreamtrack/mediastreamtrack-id.html:21:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastreamtrack/mediastreamtrack-id.html:20:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/mediastreamtrack/mediastreamtrack-init.html",
      "subtests": [
        {
          "name": "Tests that the video MediaStreamTrack objects are properly initialized",
          "status": "FAIL",
          "message": "Object #<Navigator> has no method 'getUserMedia'(stack: TypeError: Object #<Navigator> has no method 'getUserMedia'\n    at Object.<anonymous> (http://www.w3c-test.org/mediacapture-streams/stream-api/mediastreamtrack/mediastreamtrack-init.html:62:13)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at http://www.w3c-test.org/mediacapture-streams/stream-api/mediastreamtrack/mediastreamtrack-init.html:61:3)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/video-and-audio-tracks/audiostreamtrack.html",
      "subtests": [
        {
          "name": "AudioStreamTrack interface: existence and properties of interface object",
          "status": "FAIL",
          "message": "assert_own_property: window does not have own property \"AudioStreamTrack\" expected property \"AudioStreamTrack\" missing"
        },
        {
          "name": "AudioStreamTrack interface object length",
          "status": "FAIL",
          "message": "assert_own_property: window does not have own property \"AudioStreamTrack\" expected property \"AudioStreamTrack\" missing"
        },
        {
          "name": "AudioStreamTrack interface: existence and properties of interface prototype object",
          "status": "FAIL",
          "message": "assert_own_property: window does not have own property \"AudioStreamTrack\" expected property \"AudioStreamTrack\" missing"
        },
        {
          "name": "AudioStreamTrack interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "FAIL",
          "message": "assert_own_property: window does not have own property \"AudioStreamTrack\" expected property \"AudioStreamTrack\" missing"
        },
        {
          "name": "AudioStreamTrack interface: operation getSourceIds()",
          "status": "FAIL",
          "message": "assert_own_property: window does not have own property \"AudioStreamTrack\" expected property \"AudioStreamTrack\" missing"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/mediacapture-streams/stream-api/video-and-audio-tracks/videostreamtrack.html",
      "subtests": [
        {
          "name": "VideoStreamTrack interface: existence and properties of interface object",
          "status": "FAIL",
          "message": "assert_own_property: window does not have own property \"VideoStreamTrack\" expected property \"VideoStreamTrack\" missing"
        },
        {
          "name": "VideoStreamTrack interface object length",
          "status": "FAIL",
          "message": "assert_own_property: window does not have own property \"VideoStreamTrack\" expected property \"VideoStreamTrack\" missing"
        },
        {
          "name": "VideoStreamTrack interface: existence and properties of interface prototype object",
          "status": "FAIL",
          "message": "assert_own_property: window does not have own property \"VideoStreamTrack\" expected property \"VideoStreamTrack\" missing"
        },
        {
          "name": "VideoStreamTrack interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "FAIL",
          "message": "assert_own_property: window does not have own property \"VideoStreamTrack\" expected property \"VideoStreamTrack\" missing"
        },
        {
          "name": "VideoStreamTrack interface: operation getSourceIds()",
          "status": "FAIL",
          "message": "assert_own_property: window does not have own property \"VideoStreamTrack\" expected property \"VideoStreamTrack\" missing"
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}