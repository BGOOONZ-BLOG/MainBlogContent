#!/bin/bash

# debug travis set -e

cd `dirname $0`

BUILD=$PWD
DRAFT=$PWD/../

# relative to DRAFT
SOURCE=src/xml
HSTYLE=src/style/html
PSTYLE=src/style/pdf
#W3CMATH=../..

RELAXNG=RelaxNG/mathml4

if [ ! -f ../saxon9he.jar ]; then
    if [ -f /tmp/jars/saxon9he.jar ]; then
	cp /tmp/jars/saxon9he.jar ..
    else
	echo install saxon9he.jar eg run build/install-tools
    fi
fi

    

SAXON="java -jar saxon9he.jar "

echo validate sources
rxp -sxV $DRAFT/$SOURCE/mathml-spec.xml


# echo "updating schema"
# (cd $DRAFT; cd $RELAXNG ; pwd; cvs -q update )


cd $DRAFT

echo clear old versions
#rm -f chapter?.{x,ht}ml appendix?.{x,ht}ml Overview.{x,ht}ml
#rm -f chapter?-d.html appendix?-d.html Overview-d.html


## github layout $SAXON -o:$RELAXNG/mathml3-content.rnc $SOURCE/contm-new.xml $SOURCE/schema.xsl
## github layout $SAXON -o:$RELAXNG/mathml3-presentation.rnc $SOURCE/presentation-markup.xml $SOURCE/schema.xsl


echo "generate schema"

cd $RELAXNG
for i in mathml4*rnc
do
    cp $i ${i/.rnc/.old}
done

cd $DRAFT

$SAXON -o:$RELAXNG/mathml4-content.rnc src/xml/contm-new.xml src/style/rnc/schema.xsl

$SAXON -o:$RELAXNG/mathml4-presentation.rnc src/xml/presentation-markup.xml src/style/rnc/schema.xsl

cd $DRAFT


echo "making standard HTML version"

$SAXON   $SOURCE/mathml-spec.xml  $HSTYLE/mmldiff-restyle.xsl show.diff.markup=0 editors-copy=yes

cp Overview.html index.html




echo "making  diff-marked HTML version"
# this used to use cvs diff -x --ifdef=diff
# could set up git diff --ext-diff to use same
# but seems easier to set up for general use to do it in two stages
cd $RELAXNG
for i in mathml4*rnc
do
   diff --ifdef=diff ${i/.rnc/.old} $i > $i-diff
done
#diff makes empty file rather than original if there are no diffs so:
for i in `grep -L ifdef *diff || true`
do cp ${i/-diff/} $i;done
cd $DRAFT 


echo "getting rec version of unicode, for op dictionary diffs (cvs based)"
(cd $SOURCE; 
if [ ! -f unicode-pr.xml ]
 then 
echo    cvs update -p -r  mathml32e-REC unicode.xml > unicode-pr.xml
fi
)

$SAXON  $SOURCE/mathml-spec.xml  $HSTYLE/mmldiff-restyle.xsl show.diff.markup=1 editors-draft=yes 2>diff.log
cat diff.log

echo "fixing mmlcss id"
sed -i 's/<a name="mmlcss" id="mmlcss"><\/a> //' chapter6-d.html



echo "making xhtml stylesheets"
echo "  " mmldiff
$SAXON  -o:$HSTYLE/xmmldiff-restyle.xsl $HSTYLE/mmldiff-restyle.xsl $HSTYLE/html2xhtml.xsl system-dtd=mathml.dtd 
echo "  " mmlspec
$SAXON  -o:$HSTYLE/xmmlspec-restyle.xsl $HSTYLE/mmlspec-restyle.xsl $HSTYLE/html2xhtml.xsl system-dtd=mathml.dtd 
echo "  " slices
$SAXON  -o:$HSTYLE/xslices-restyle.xsl $HSTYLE/slices-restyle.xsl $HSTYLE/html2xhtml.xsl system-dtd=mathml.dtd 
echo "  " slices-common
$SAXON  -o:$HSTYLE/xslices-common-restyle.xsl $HSTYLE/slices-common-restyle.xsl $HSTYLE/html2xhtml.xsl system-dtd=mathml.dtd 
echo "  " xmlspec
$SAXON  -o:$HSTYLE/xxmlspec-restyle.xsl $HSTYLE/xmlspec-restyle.xsl $HSTYLE/html2xhtml.xsl system-dtd=mathml.dtd 
echo "  " mcd
$SAXON  -o:$HSTYLE/xmcd.xsl $HSTYLE/mcd.xsl $HSTYLE/html2xhtml.xsl system-dtd=mathml.dtd 
echo "  " xntn-presentation
$SAXON  -o:$HSTYLE/xntn-presentation.xsl $HSTYLE/ntn-presentation.xsl $HSTYLE/html2xhtml.xsl system-dtd=mathml.dtd 




echo make xhtml version
$SAXON $SOURCE/mathml-spec.xml $HSTYLE/mathmlx-restyle.xsl show.diff.markup=0





echo ""
echo ""
echo validate generated xhtml+mathml
for i in Overview.xml chapter?.xml appendix?.xml
do
 echo -n $i ""
 rxp -sxV $i 
done



echo ""
echo "making single file HTML (+MathML) version"
mv mathml.dtd  tmp.dtd
echo "" > mathml.dtd
cp  $HSTYLE/html5-restyle.xsl .
$SAXON  -o:mathml.html   -it:main html5-restyle.xsl
sed -i -e "s@></input></mtext>@/></mtext>@" mathml.html
rm html5-restyle.xsl
mv tmp.dtd mathml.dtd

echo "remove xhtml versions"
rm Overview.xml appendix*.xml chapter*.xml

# exit

echo ""
echo PDF
echo generate TeX files
export PATH=/tmp/texlive/bin/x86_64-linux:$PATH

cd $DRAFT

$SAXON  $SOURCE/mathml-spec.xml $PSTYLE/mathmlspec.xsl


if test ! -f image/w3c_home.png 
then
echo copy W3C logo
cp $SOURCE/../image/w3c_home.png image
fi


if test ! -f image/braids.png 
then
echo copy braids
cp $SOURCE/../image/braids.png image
fi

if test ! -f image/intersect.png 
then
echo copy intersect
cp $SOURCE/../image/intersect.png image
fi

if test ! -f image/intersect.png 
then
echo copy intersect
cp $SOURCE/../image/phasorangle.png image
fi

# get local tex style
cp $PSTYLE/pmml-new.sty .


# fix time to get reproducible pdf
export SOURCE_DATE_EPOCH=1502554859 # 2017/08/12  date +'%s'
export FORCE_SOURCE_DATE=1
export SOURCE_DATE_EPOCH_TEX_PRIMITIVES=1 # old version

# use nested if rather than while to limit looping
echo generate mathml.pdf

# debugging on travis:
echo one
# pdflatex mathml.tex
echo two
# pdflatex mathml.tex


pdflatex \\batchmode \\input mathml.tex
if (grep -i rerun mathml.log)
  then
  pdflatex \\batchmode \\input mathml.tex
  if (grep -i rerun mathml.log)
    then 
    pdflatex \\batchmode \\input mathml.tex
    if (grep -i rerun mathml.log)
      then
      pdflatex \\batchmode \\input mathml.tex
    fi
  fi
fi

# once more to see messages
# pdflatex mathml.tex





echo grep latex warnings
grep "^\!" mathml.log || true
(grep -i warning mathml.log | grep -v bookmarks | grep -v "Font Warning" ) || true
grep -i rerun mathml.log || true
grep -i " error" mathml.log || true
(grep Overfull mathml.log | sed -e "s/(\([0-9]\\.\)/(0\\1/"| sort -n ) || true



echo "images"
$SAXON  -o:images.tex $SOURCE/mathml-spec.xml $HSTYLE/images.xsl
if (cmp images.tex build/images.old)
then
echo images same
else
echo images differ
latex images.tex
echo ""
echo ""
echo running generated images script
bash images.sh
cp images.tex build/images.old
fi

git clean -f

exit

