//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.24 at 12:15:17 PM MESZ 
//


package org.w3c.wai.accessdb.om.testunit;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for statusType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="statusType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="unconfirmed"/>
 *     &lt;enumeration value="new"/>
 *     &lt;enumeration value="ballot"/>
 *     &lt;enumeration value="pending"/>
 *     &lt;enumeration value="fixes"/>
 *     &lt;enumeration value="edits"/>
 *     &lt;enumeration value="holding"/>
 *     &lt;enumeration value="rejected"/>
 *     &lt;enumeration value="accepted"/>
 *     &lt;enumeration value="deprecated"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "statusType")
@XmlEnum
public enum StatusType {

    @XmlEnumValue("unconfirmed")
    UNCONFIRMED("unconfirmed"),
    @XmlEnumValue("new")
    NEW("new"),
    @XmlEnumValue("ballot")
    BALLOT("ballot"),
    @XmlEnumValue("pending")
    PENDING("pending"),
    @XmlEnumValue("fixes")
    FIXES("fixes"),
    @XmlEnumValue("edits")
    EDITS("edits"),
    @XmlEnumValue("holding")
    HOLDING("holding"),
    @XmlEnumValue("rejected")
    REJECTED("rejected"),
    @XmlEnumValue("accepted")
    ACCEPTED("accepted"),
    @XmlEnumValue("deprecated")
    DEPRECATED("deprecated");
    private final String value;

    StatusType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static StatusType fromValue(String v) {
        for (StatusType c: StatusType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
