{
  "results": [
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.copy.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.copy",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.destination-atop.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.destination-atop",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.destination-in.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.destination-in",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.destination-out.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.destination-out",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.destination-over.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.destination-over",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.lighter.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.lighter",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.source-atop.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.source-atop",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.source-in.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.source-in",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.source-out.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.source-out",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.source-over.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.source-over",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.canvas.xor.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.canvas.xor",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.copy.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.destination-atop.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.destination-in.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.destination-out.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.destination-over.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.lighter.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.source-atop.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.source-in.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.source-out.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.source-over.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.clip.xor.html",
      "subtests": [
        {
          "name": "fill() does not affect pixels outside the clip region.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.globalAlpha.canvas.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.globalAlpha.canvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.globalAlpha.canvaspattern.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.globalAlpha.canvaspattern",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.globalAlpha.default.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.globalAlpha.default",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.globalAlpha.fill.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.globalAlpha.fill",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.globalAlpha.image.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.globalAlpha.image",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.globalAlpha.imagepattern.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.globalAlpha.imagepattern",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.globalAlpha.invalid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.globalAlpha.invalid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.globalAlpha.range.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.globalAlpha.range",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.copy.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.copy",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.destination-atop.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.destination-atop",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.destination-in.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.destination-in",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.destination-out.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.destination-out",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.destination-over.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.destination-over",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.lighter.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.lighter",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.source-atop.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.source-atop",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.source-in.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.source-in",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.source-out.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.source-out",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.source-over.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.source-over",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.image.xor.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.image.xor",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.operation.casesensitive.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.operation.casesensitive",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.operation.clear.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.operation.clear",
          "status": "FAIL",
          "message": "assert_true: ctx.globalCompositeOperation == 'xor' (got clear[string], expected xor[string]) expected true got false(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_true@http://web-platform.test:8000/resources/testharness.js:711:15\n_assertEqual@http://web-platform.test:8000/common/canvas-tests.js:63:16\nhttp://web-platform.test:8000/2dcontext/compositing/2d.composite.operation.clear.html:25:13\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.operation.darker.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.operation.darker",
          "status": "FAIL",
          "message": "assert_true: ctx.globalCompositeOperation == 'xor' (got darker[string], expected xor[string]) expected true got false(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_true@http://web-platform.test:8000/resources/testharness.js:711:15\n_assertEqual@http://web-platform.test:8000/common/canvas-tests.js:63:16\nhttp://web-platform.test:8000/2dcontext/compositing/2d.composite.operation.darker.html:25:13\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.operation.default.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.operation.default",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.operation.get.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.operation.get",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.operation.highlight.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.operation.highlight",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.operation.nullsuffix.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.operation.nullsuffix",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.operation.over.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.operation.over",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.operation.unrecognised.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.operation.unrecognised",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.copy.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.copy",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.destination-atop.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.destination-atop",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.destination-in.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.destination-in",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.destination-out.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.destination-out",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.destination-over.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.destination-over",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.lighter.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.lighter",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.source-atop.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.source-atop",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.source-in.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.source-in",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.source-out.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.source-out",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.source-over.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.source-over",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.solid.xor.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.solid.xor",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.copy.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.copy",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.destination-atop.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.destination-atop",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.destination-in.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.destination-in",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.destination-out.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.destination-out",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.destination-over.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.destination-over",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.lighter.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.lighter",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.source-atop.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.source-atop",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.source-in.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.source-in",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.source-out.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.source-out",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.source-over.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.source-over",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.transparent.xor.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.composite.transparent.xor",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.fill.copy.html",
      "subtests": [
        {
          "name": "fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.fill.destination-atop.html",
      "subtests": [
        {
          "name": "fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.fill.destination-in.html",
      "subtests": [
        {
          "name": "fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.fill.source-in.html",
      "subtests": [
        {
          "name": "fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.fill.source-out.html",
      "subtests": [
        {
          "name": "fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.image.copy.html",
      "subtests": [
        {
          "name": "drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.image.destination-atop.html",
      "subtests": [
        {
          "name": "drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.image.destination-in.html",
      "subtests": [
        {
          "name": "drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.image.source-in.html",
      "subtests": [
        {
          "name": "drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.image.source-out.html",
      "subtests": [
        {
          "name": "drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.nocontext.copy.html",
      "subtests": [
        {
          "name": "drawImage() of a canvas with no context draws pixels as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.nocontext.destination-atop.html",
      "subtests": [
        {
          "name": "drawImage() of a canvas with no context draws pixels as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.nocontext.destination-in.html",
      "subtests": [
        {
          "name": "drawImage() of a canvas with no context draws pixels as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.nocontext.source-in.html",
      "subtests": [
        {
          "name": "drawImage() of a canvas with no context draws pixels as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.nocontext.source-out.html",
      "subtests": [
        {
          "name": "drawImage() of a canvas with no context draws pixels as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.pattern.copy.html",
      "subtests": [
        {
          "name": "Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.pattern.destination-atop.html",
      "subtests": [
        {
          "name": "Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.pattern.destination-in.html",
      "subtests": [
        {
          "name": "Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.pattern.source-in.html",
      "subtests": [
        {
          "name": "Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/compositing/2d.composite.uncovered.pattern.source-out.html",
      "subtests": [
        {
          "name": "Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/conformance-requirements/2d.missingargs.html",
      "subtests": [
        {
          "name": "Missing arguments cause TypeError",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { g.addColorStop(); }\" threw object \"Error: IndexSizeError: DOM Exception 1\" (\"IndexSizeError\") expected object \"TypeError\" (\"TypeError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/conformance-requirements/2d.missingargs.html:137:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/conformance-requirements/2d.type.delete.html",
      "subtests": [
        {
          "name": "window.CanvasRenderingContext2D is Configurable",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/conformance-requirements/2d.voidreturn.html",
      "subtests": [
        {
          "name": "void methods return undefined",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.3arg.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.3arg",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.5arg.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.5arg",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.9arg.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.9arg.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.9arg.destpos.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.9arg.destpos",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.9arg.destsize.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.9arg.destsize",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.9arg.sourcepos.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.9arg.sourcepos",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.9arg.sourcesize.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.9arg.sourcesize",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.alpha.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.alpha",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.animated.apng.html",
      "subtests": [
        {
          "name": "drawImage() of an APNG with no poster frame draws the first frame",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.animated.gif.html",
      "subtests": [
        {
          "name": "drawImage() of an animated GIF draws the first frame",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.animated.poster.html",
      "subtests": [
        {
          "name": "drawImage() of an APNG draws the poster frame",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.broken.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.broken",
          "status": "FAIL",
          "message": "assert_true: got pixel [0,0,0,0] at (50,25), expected [0,255,0,255] +/- 2 expected true got false(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_true@http://web-platform.test:8000/resources/testharness.js:711:15\n_assertPixelApprox@http://web-platform.test:8000/common/canvas-tests.js:129:16\nhttp://web-platform.test:8000/2dcontext/drawing-images-to-the-canvas/2d.drawImage.broken.html:27:19\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.canvas.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.canvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.clip.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.clip",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.composite.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.composite",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.floatsource.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.floatsource",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.incomplete.emptysrc.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.incomplete.emptysrc",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.incomplete.immediate.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.incomplete.immediate",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.incomplete.nosrc.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.incomplete.nosrc",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.incomplete.reload.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.incomplete.reload",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.incomplete.removedsrc.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.incomplete.removedsrc",
          "status": "FAIL",
          "message": "assert_true: got pixel [255,0,0,255] at (50,25), expected [0,255,0,255] +/- 2 expected true got false(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_true@http://web-platform.test:8000/resources/testharness.js:711:15\n_assertPixelApprox@http://web-platform.test:8000/common/canvas-tests.js:129:16\nhttp://web-platform.test:8000/2dcontext/drawing-images-to-the-canvas/2d.drawImage.incomplete.removedsrc.html:28:19\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.negativedest.html",
      "subtests": [
        {
          "name": "Negative destination width/height represents the correct rectangle",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.negativedir.html",
      "subtests": [
        {
          "name": "Negative dimensions do not affect the direction of the image",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.negativesource.html",
      "subtests": [
        {
          "name": "Negative source width/height represents the correct rectangle",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.nonfinite.html",
      "subtests": [
        {
          "name": "drawImage() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.nowrap.html",
      "subtests": [
        {
          "name": "Stretched images do not get pixels wrapping around the edges",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.null.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.null",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.drawImage(null, 0, 0); }\" threw object \"Error: TypeMismatchError: DOM Exception 17\" (\"TypeMismatchError\") expected object \"TypeError\" (\"TypeError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/drawing-images-to-the-canvas/2d.drawImage.null.html:23:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.path.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.path",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.self.1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.self.1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.self.2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.self.2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.svg.html",
      "subtests": [
        {
          "name": "drawImage() of an SVG image",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.transform.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.transform",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.wrongtype.html",
      "subtests": [
        {
          "name": "Incorrect image types in drawImage do not match any defined overloads, so WebIDL throws a TypeError",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.zerocanvas.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.drawImage.zerocanvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.zerosource.html",
      "subtests": [
        {
          "name": "drawImage with zero-sized source rectangle throws INDEX_SIZE_ERR",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-images-to-the-canvas/2d.drawImage.zerosource.image.html",
      "subtests": [
        {
          "name": "drawImage with zero-sized source rectangle from image throws INDEX_SIZE_ERR",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.drawImage(document.getElementById('red-...\" did not throw(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:995:19\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/drawing-images-to-the-canvas/2d.drawImage.zerosource.image.html:25:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-paths-to-the-canvas/canvas_focus_drawCustomFocusRing_001.html",
      "subtests": [
        {
          "name": "drawCustomFocusRing must return false for an element that is not focused.",
          "status": "FAIL",
          "message": "undefined is not a function (evaluating 'context.drawCustomFocusRing(text1)')(stack: http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/canvas_focus_drawCustomFocusRing_001.html:28:51\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nhttp://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/canvas_focus_drawCustomFocusRing_001.html:21:11\nglobal code@http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/canvas_focus_drawCustomFocusRing_001.html:39:7)"
        },
        {
          "name": "drawCustomFocusRing must return false for an element that is not a descendant of the canvas element.",
          "status": "FAIL",
          "message": "undefined is not a function (evaluating 'context.drawCustomFocusRing(text0)')(stack: http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/canvas_focus_drawCustomFocusRing_001.html:37:51\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nhttp://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/canvas_focus_drawCustomFocusRing_001.html:31:11\nglobal code@http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/canvas_focus_drawCustomFocusRing_001.html:39:7)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_001.html",
      "subtests": [
        {
          "name": "drawFocusIfNeeded draws a focus ring.",
          "status": "FAIL",
          "message": "undefined is not a function (evaluating 'context.drawFocusIfNeeded(element)')(stack: http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_001.html:46:36\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nglobal code@http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_001.html:23:11)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_002.html",
      "subtests": [
        {
          "name": "drawFocusIfNeeded does not draw a focus ring if the element is not in focus.",
          "status": "FAIL",
          "message": "undefined is not a function (evaluating 'context.drawFocusIfNeeded(element)')(stack: http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_002.html:48:36\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nglobal code@http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_002.html:23:11)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_003.html",
      "subtests": [
        {
          "name": "drawFocusIfNeeded does not draw a focus ring if the element is not a descendant of the context.",
          "status": "FAIL",
          "message": "undefined is not a function (evaluating 'context.drawFocusIfNeeded(element)')(stack: http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_003.html:49:36\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nglobal code@http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_003.html:23:11)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_004.html",
      "subtests": [
        {
          "name": "drawFocusIfNeeded does draw a focus ring if the element is in focus.",
          "status": "FAIL",
          "message": "undefined is not a function (evaluating 'context.drawFocusIfNeeded(element)')(stack: http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_004.html:68:36\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nglobal code@http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_004.html:23:11)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_005.html",
      "subtests": [
        {
          "name": "drawFocusIfNeeded does draw a focus ring if the element is in focus and the user activated a particular focus ring.",
          "status": "FAIL",
          "message": "undefined is not a function (evaluating 'context.drawFocusIfNeeded(element)')(stack: http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_005.html:68:36\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nglobal code@http://web-platform.test:8000/2dcontext/drawing-paths-to-the-canvas/drawFocusIfNeeded_005.html:23:9)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.clearRect.basic.html",
      "subtests": [
        {
          "name": "clearRect clears to transparent black",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.clearRect.clip.html",
      "subtests": [
        {
          "name": "clearRect is affected by clipping regions",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.clearRect.globalalpha.html",
      "subtests": [
        {
          "name": "clearRect is not affected by globalAlpha",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.clearRect.globalcomposite.html",
      "subtests": [
        {
          "name": "clearRect is not affected by globalCompositeOperation",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.clearRect.negative.html",
      "subtests": [
        {
          "name": "clearRect of negative sizes works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.clearRect.nonfinite.html",
      "subtests": [
        {
          "name": "clearRect() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.clearRect.path.html",
      "subtests": [
        {
          "name": "clearRect does not affect the current path",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.clearRect.shadow.html",
      "subtests": [
        {
          "name": "clearRect does not draw shadows",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.clearRect.transform.html",
      "subtests": [
        {
          "name": "clearRect is affected by transforms",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.clearRect.zero.html",
      "subtests": [
        {
          "name": "clearRect of zero pixels has no effect",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.fillRect.basic.html",
      "subtests": [
        {
          "name": "fillRect works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.fillRect.clip.html",
      "subtests": [
        {
          "name": "fillRect is affected by clipping regions",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.fillRect.negative.html",
      "subtests": [
        {
          "name": "fillRect of negative sizes works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.fillRect.nonfinite.html",
      "subtests": [
        {
          "name": "fillRect() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.fillRect.path.html",
      "subtests": [
        {
          "name": "fillRect does not affect the current path",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.fillRect.shadow.html",
      "subtests": [
        {
          "name": "fillRect draws shadows",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.fillRect.transform.html",
      "subtests": [
        {
          "name": "fillRect is affected by transforms",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.fillRect.zero.html",
      "subtests": [
        {
          "name": "fillRect of zero pixels has no effect",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.basic.html",
      "subtests": [
        {
          "name": "strokeRect works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.clip.html",
      "subtests": [
        {
          "name": "strokeRect is affected by clipping regions",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.globalalpha.html",
      "subtests": [
        {
          "name": "strokeRect is affected by globalAlpha",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.globalcomposite.html",
      "subtests": [
        {
          "name": "strokeRect is not affected by globalCompositeOperation",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.negative.html",
      "subtests": [
        {
          "name": "strokeRect of negative sizes works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.nonfinite.html",
      "subtests": [
        {
          "name": "strokeRect() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.path.html",
      "subtests": [
        {
          "name": "strokeRect does not affect the current path",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.shadow.html",
      "subtests": [
        {
          "name": "strokeRect draws shadows",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.transform.html",
      "subtests": [
        {
          "name": "fillRect is affected by transforms",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.zero.1.html",
      "subtests": [
        {
          "name": "strokeRect of 0x0 pixels draws nothing",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.zero.2.html",
      "subtests": [
        {
          "name": "strokeRect of 0x0 pixels draws nothing, including caps and joins",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.zero.3.html",
      "subtests": [
        {
          "name": "strokeRect of Nx0 pixels draws a straight line",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.zero.4.html",
      "subtests": [
        {
          "name": "strokeRect of Nx0 pixels draws a closed line with no caps",
          "status": "FAIL",
          "message": "assert_true: got pixel [255,0,0,255] at (50,25), expected [0,0,0,0] expected true got false(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_true@http://web-platform.test:8000/resources/testharness.js:711:15\n_assertPixel@http://web-platform.test:8000/common/canvas-tests.js:114:16\nhttp://web-platform.test:8000/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.zero.4.html:27:13\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-rectangles-to-the-canvas/2d.strokeRect.zero.5.html",
      "subtests": [
        {
          "name": "strokeRect of Nx0 pixels draws a closed line with joins",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.align.center.html",
      "subtests": [
        {
          "name": "textAlign center is the center of the em squares (not the bounding box)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.align.end.ltr.html",
      "subtests": [
        {
          "name": "textAlign end with ltr is the right edge",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.align.end.rtl.html",
      "subtests": [
        {
          "name": "textAlign end with rtl is the left edge",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.align.left.html",
      "subtests": [
        {
          "name": "textAlign left is the left of the first em square (not the bounding box)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.align.right.html",
      "subtests": [
        {
          "name": "textAlign right is the right of the last em square (not the bounding box)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.align.start.ltr.html",
      "subtests": [
        {
          "name": "textAlign start with ltr is the left edge",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.align.start.rtl.html",
      "subtests": [
        {
          "name": "textAlign start with rtl is the right edge",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.baseline.alphabetic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.draw.baseline.alphabetic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.fill.maxWidth.bound.html",
      "subtests": [
        {
          "name": "fillText handles maxWidth based on line size, not bounding box size",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.fill.maxWidth.fontface.html",
      "subtests": [
        {
          "name": "fillText works on @font-face fonts",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.fill.maxWidth.negative.html",
      "subtests": [
        {
          "name": "fillText handles maxWidth correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.fill.maxWidth.small.html",
      "subtests": [
        {
          "name": "fillText handles maxWidth correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.fill.maxWidth.zero.html",
      "subtests": [
        {
          "name": "fillText handles maxWidth correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.fill.unaffected.html",
      "subtests": [
        {
          "name": "fillText does not start a new path or subpath",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.fontface.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.draw.fontface",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.fontface.notinpage.html",
      "subtests": [
        {
          "name": "@font-face fonts should work even if they are not used in the page",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.fontface.repeat.html",
      "subtests": [
        {
          "name": "Draw with the font immediately, then wait a bit until and draw again. (This crashes some version of WebKit.)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.space.basic.html",
      "subtests": [
        {
          "name": "U+0020 is rendered the correct size (1em wide)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.space.collapse.nonspace.html",
      "subtests": [
        {
          "name": "Non-space characters are not converted to U+0020 and collapsed",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.draw.stroke.unaffected.html",
      "subtests": [
        {
          "name": "strokeText does not start a new path or subpath",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.measure.width.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.measure.width.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/drawing-text-to-the-canvas/2d.text.measure.width.empty.html",
      "subtests": [
        {
          "name": "The empty string has zero width",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.default.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.default",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.get.semitransparent.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.get.semitransparent",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.get.solid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.get.solid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.get.transparent.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.get.transparent",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.invalidstring.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.invalidstring",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.invalidtype.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.invalidtype",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.current.basic.html",
      "subtests": [
        {
          "name": "currentColor is computed from the canvas element",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.current.changed.html",
      "subtests": [
        {
          "name": "currentColor is computed when the attribute is set, not when it is painted",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.current.removed.html",
      "subtests": [
        {
          "name": "currentColor is solid black when the canvas element is not in a document",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hex3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hex3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hex6.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hex6",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsl-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsl-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsl-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsl-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsl-3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsl-3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsl-4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsl-4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsl-5.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsl-5",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsl-6.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsl-6",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsl-clamp-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsl-clamp-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsl-clamp-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsl-clamp-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsl-clamp-3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsl-clamp-3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsl-clamp-4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsl-clamp-4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsla-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsla-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsla-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsla-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsla-clamp-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsla-clamp-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsla-clamp-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsla-clamp-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsla-clamp-3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsla-clamp-3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsla-clamp-4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsla-clamp-4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsla-clamp-5.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsla-clamp-5",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.hsla-clamp-6.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.hsla-clamp-6",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.html4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.html4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hex1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hex1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hex2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hex2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hex3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hex3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hex4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hex4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hex5.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hex5",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hex6.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hex6",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hex7.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hex7",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hex8.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hex8",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hsl-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hsl-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hsl-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hsl-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hsl-3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hsl-3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hsl-4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hsl-4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hsl-5.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hsl-5",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hsl-6.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hsl-6",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hsla-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hsla-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.hsla-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.hsla-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.name-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.name-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.name-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.name-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.name-3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.name-3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.name-4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.name-4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.name-5.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.name-5",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgb-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgb-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgb-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgb-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgb-3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgb-3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgb-4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgb-4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgb-5.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgb-5",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgb-6.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgb-6",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgb-7.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgb-7",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgba-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgba-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgba-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgba-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgba-3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgba-3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgba-4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgba-4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgba-5.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgba-5",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgba-6.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgba-6",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.invalid.rgba-7.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.invalid.rgba-7",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgb-clamp-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgb-clamp-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgb-clamp-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgb-clamp-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgb-clamp-3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgb-clamp-3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgb-clamp-4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgb-clamp-4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgb-clamp-5.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgb-clamp-5",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgb-eof.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgb-eof",
          "status": "FAIL",
          "message": "assert_true: got pixel [255,0,0,255] at (50,25), expected [0,255,0,255] expected true got false(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_true@http://web-platform.test:8000/resources/testharness.js:711:15\n_assertPixel@http://web-platform.test:8000/common/canvas-tests.js:114:16\nhttp://web-platform.test:8000/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgb-eof.html:27:13\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgb-num.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgb-num",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgb-percent.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgb-percent",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-clamp-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgba-clamp-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-clamp-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgba-clamp-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-eof.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgba-eof",
          "status": "FAIL",
          "message": "assert_true: got pixel [255,0,0,255] at (50,25), expected [0,255,0,255] expected true got false(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_true@http://web-platform.test:8000/resources/testharness.js:711:15\n_assertPixel@http://web-platform.test:8000/common/canvas-tests.js:114:16\nhttp://web-platform.test:8000/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-eof.html:27:13\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-num-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgba-num-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-num-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgba-num-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-percent.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgba-percent",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-solid-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgba-solid-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-solid-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgba-solid-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-solid-3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgba-solid-3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.rgba-solid-4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.rgba-solid-4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.svg-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.svg-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.svg-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.svg-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.system.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.system",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.transparent-1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.transparent-1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.fillStyle.parse.transparent-2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.fillStyle.parse.transparent-2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.empty.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.empty",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.alpha.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.alpha",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.colour.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.colour",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.colouralpha.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.colouralpha",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.multiple.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.multiple",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.outside.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.outside",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.overlap.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.overlap",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.overlap2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.overlap2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.solid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.solid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.vertical.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.vertical",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.zerosize.fill.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.zerosize.fill",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.zerosize.fillRect.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.zerosize.fillRect",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.zerosize.fillText.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.zerosize.fillText",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.zerosize.stroke.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.zerosize.stroke",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.zerosize.strokeRect.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.zerosize.strokeRect",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.interpolate.zerosize.strokeText.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.interpolate.zerosize.strokeText",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.linear.nonfinite.html",
      "subtests": [
        {
          "name": "createLinearGradient() throws TypeError if arguments are not finite",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.createLinearGradient(Infinity, 0, 1, 0); }\" threw object \"Error: NotSupportedError: DOM Exception 9\" (\"NotSupportedError\") expected object \"TypeError\" (\"TypeError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/fill-and-stroke-styles/2d.gradient.linear.nonfinite.html:23:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.linear.transform.1.html",
      "subtests": [
        {
          "name": "Linear gradient coordinates are relative to the coordinate space at the time of filling",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.linear.transform.2.html",
      "subtests": [
        {
          "name": "Linear gradient coordinates are relative to the coordinate space at the time of filling",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.linear.transform.3.html",
      "subtests": [
        {
          "name": "Linear gradient transforms do not experience broken caching effects",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.object.compare.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.object.compare",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.object.crosscanvas.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.object.crosscanvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.object.current.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.object.current",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.object.invalidcolour.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.object.invalidcolour",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.object.invalidoffset.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.object.invalidoffset",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.object.return.html",
      "subtests": [
        {
          "name": "createLinearGradient() and createRadialGradient() returns objects implementing CanvasGradient",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.object.type.html",
      "subtests": [
        {
          "name": "window.CanvasGradient exists and has the right properties",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.object.update.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.object.update",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.cone.behind.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.cone.behind",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.cone.beside.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.cone.beside",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.cone.bottom.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.cone.bottom",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.cone.cylinder.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.cone.cylinder",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.cone.front.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.cone.front",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.cone.shape1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.cone.shape1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.cone.shape2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.cone.shape2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.cone.top.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.cone.top",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.equal.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.equal",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.inside1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.inside1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.inside2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.inside2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.inside3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.inside3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.negative.html",
      "subtests": [
        {
          "name": "createRadialGradient() throws INDEX_SIZE_ERR if either radius is negative",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.nonfinite.html",
      "subtests": [
        {
          "name": "createRadialGradient() throws TypeError if arguments are not finite",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.createRadialGradient(Infinity, 0, 1, 0,...\" threw object \"Error: NotSupportedError: DOM Exception 9\" (\"NotSupportedError\") expected object \"TypeError\" (\"TypeError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/fill-and-stroke-styles/2d.gradient.radial.nonfinite.html:23:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.outside1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.outside1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.outside2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.outside2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.outside3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.outside3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.touch1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.touch1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.touch2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.touch2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.touch3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.gradient.radial.touch3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.transform.1.html",
      "subtests": [
        {
          "name": "Radial gradient coordinates are relative to the coordinate space at the time of filling",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.transform.2.html",
      "subtests": [
        {
          "name": "Radial gradient coordinates are relative to the coordinate space at the time of filling",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.gradient.radial.transform.3.html",
      "subtests": [
        {
          "name": "Radial gradient transforms do not experience broken caching effects",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.animated.gif.html",
      "subtests": [
        {
          "name": "createPattern() of an animated GIF draws the first frame",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.basic.canvas.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.basic.canvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.basic.image.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.basic.image",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.basic.nocontext.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.basic.nocontext",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.basic.type.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.basic.type",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.basic.zerocanvas.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.basic.zerocanvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.crosscanvas.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.crosscanvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.image.broken.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.image.broken",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.createPattern(img, 'repeat'); }\" did not throw(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:995:19\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/fill-and-stroke-styles/2d.pattern.image.broken.html:24:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.image.incomplete.emptysrc.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.image.incomplete.emptysrc",
          "status": "FAIL",
          "message": "assert_equals: ctx.createPattern(img, 'repeat') === null (got [object CanvasPattern][object], expected [object]) expected null but got object \"[object CanvasPattern]\"(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_equals@http://web-platform.test:8000/resources/testharness.js:747:15\n_assertSame@http://web-platform.test:8000/common/canvas-tests.js:43:18\nhttp://web-platform.test:8000/2dcontext/fill-and-stroke-styles/2d.pattern.image.incomplete.emptysrc.html:25:12\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.image.incomplete.immediate.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.image.incomplete.immediate",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.image.incomplete.nosrc.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.image.incomplete.nosrc",
          "status": "FAIL",
          "message": "assert_equals: ctx.createPattern(img, 'repeat') === null (got [object CanvasPattern][object], expected [object]) expected null but got object \"[object CanvasPattern]\"(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_equals@http://web-platform.test:8000/resources/testharness.js:747:15\n_assertSame@http://web-platform.test:8000/common/canvas-tests.js:43:18\nhttp://web-platform.test:8000/2dcontext/fill-and-stroke-styles/2d.pattern.image.incomplete.nosrc.html:24:12\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.image.incomplete.reload.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.image.incomplete.reload",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.image.incomplete.removedsrc.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.image.incomplete.removedsrc",
          "status": "FAIL",
          "message": "assert_equals: ctx.createPattern(img, 'repeat') === null (got [object CanvasPattern][object], expected [object]) expected null but got object \"[object CanvasPattern]\"(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_equals@http://web-platform.test:8000/resources/testharness.js:747:15\n_assertSame@http://web-platform.test:8000/common/canvas-tests.js:43:18\nhttp://web-platform.test:8000/2dcontext/fill-and-stroke-styles/2d.pattern.image.incomplete.removedsrc.html:25:12\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.image.null.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.image.null",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.createPattern(null, 'repeat'); }\" threw object \"Error: TypeMismatchError: DOM Exception 17\" (\"TypeMismatchError\") expected object \"TypeError\" (\"TypeError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/fill-and-stroke-styles/2d.pattern.image.null.html:23:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.image.string.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.image.string",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.image.undefined.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.image.undefined",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.modify.canvas1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.modify.canvas1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.modify.canvas2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.modify.canvas2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.modify.image1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.modify.image1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.modify.image2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.modify.image2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.norepeat.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.norepeat.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.norepeat.coord1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.norepeat.coord1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.norepeat.coord2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.norepeat.coord2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.norepeat.coord3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.norepeat.coord3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.norepeat.outside.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.norepeat.outside",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.orientation.canvas.html",
      "subtests": [
        {
          "name": "Canvas patterns do not get flipped when painted",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.orientation.image.html",
      "subtests": [
        {
          "name": "Image patterns do not get flipped when painted",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeat.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeat.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeat.coord1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeat.coord1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeat.coord2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeat.coord2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeat.coord3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeat.coord3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeat.outside.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeat.outside",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeatx.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeatx.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeatx.coord1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeatx.coord1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeatx.outside.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeatx.outside",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeaty.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeaty.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeaty.coord1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeaty.coord1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.paint.repeaty.outside.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.paint.repeaty.outside",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.repeat.case.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.repeat.case",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.repeat.empty.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.repeat.empty",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.repeat.null.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.repeat.null",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.repeat.nullsuffix.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.repeat.nullsuffix",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.repeat.undefined.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.repeat.undefined",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.repeat.unrecognised.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.repeat.unrecognised",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.pattern.repeat.unrecognisednull.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.pattern.repeat.unrecognisednull",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/fill-and-stroke-styles/2d.strokeStyle.default.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.strokeStyle.default",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/hit-regions/addHitRegions-NotSupportedError-01.html",
      "subtests": [
        {
          "name": "fillRect should not affect current default path and NotSupportedError should be thrown.",
          "status": "FAIL",
          "message": "assert_throws: fillRect should not affect current default path and NotSupportedError should be thrown. function \"function () {\n            var canvas = document.getElemen...\" threw object \"TypeError: undefined is not a function (evaluating 'conte...\" (\"TypeError\") expected object \"[object Object]\" (\"NotSupportedError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\nhttp://web-platform.test:8000/2dcontext/hit-regions/addHitRegions-NotSupportedError-01.html:15:18\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nglobal code@http://web-platform.test:8000/2dcontext/hit-regions/addHitRegions-NotSupportedError-01.html:14:5)"
        },
        {
          "name": "strokeRect should not affect current default path and NotSupportedError should be thrown.",
          "status": "FAIL",
          "message": "assert_throws: strokeRect should not affect current default path and NotSupportedError should be thrown. function \"function () {\n            var canvas = document.getElemen...\" threw object \"TypeError: undefined is not a function (evaluating 'conte...\" (\"TypeError\") expected object \"[object Object]\" (\"NotSupportedError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\nhttp://web-platform.test:8000/2dcontext/hit-regions/addHitRegions-NotSupportedError-01.html:34:18\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nglobal code@http://web-platform.test:8000/2dcontext/hit-regions/addHitRegions-NotSupportedError-01.html:33:5)"
        },
        {
          "name": "fillText should not affect current default path and NotSupportedError should be thrown.",
          "status": "FAIL",
          "message": "assert_throws: fillText should not affect current default path and NotSupportedError should be thrown. function \"function () {\n            var canvas = document.getElemen...\" threw object \"TypeError: undefined is not a function (evaluating 'conte...\" (\"TypeError\") expected object \"[object Object]\" (\"NotSupportedError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\nhttp://web-platform.test:8000/2dcontext/hit-regions/addHitRegions-NotSupportedError-01.html:53:18\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nglobal code@http://web-platform.test:8000/2dcontext/hit-regions/addHitRegions-NotSupportedError-01.html:52:5)"
        },
        {
          "name": "strokeText should not affect current default path and NotSupportedError shuld be thrown.",
          "status": "FAIL",
          "message": "assert_throws: strokeText should not affect current default path and NotSupportedError shuld be thrown. function \"function () {\n            var canvas = document.getElemen...\" threw object \"TypeError: undefined is not a function (evaluating 'conte...\" (\"TypeError\") expected object \"[object Object]\" (\"NotSupportedError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\nhttp://web-platform.test:8000/2dcontext/hit-regions/addHitRegions-NotSupportedError-01.html:72:18\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\ntest@http://web-platform.test:8000/resources/testharness.js:485:22\nglobal code@http://web-platform.test:8000/2dcontext/hit-regions/addHitRegions-NotSupportedError-01.html:71:5)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.cap.butt.html",
      "subtests": [
        {
          "name": "lineCap 'butt' is rendered correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.cap.closed.html",
      "subtests": [
        {
          "name": "Line caps are not drawn at the corners of an unclosed rectangle",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.cap.invalid.html",
      "subtests": [
        {
          "name": "Setting lineCap to invalid values is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.cap.open.html",
      "subtests": [
        {
          "name": "Line caps are drawn at the corners of an unclosed rectangle",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.cap.round.html",
      "subtests": [
        {
          "name": "lineCap 'round' is rendered correctly",
          "status": "FAIL",
          "message": "assert_true: got pixel [1,254,0,255] at (67,6), expected [0,255,0,255] expected true got false(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_true@http://web-platform.test:8000/resources/testharness.js:711:15\n_assertPixel@http://web-platform.test:8000/common/canvas-tests.js:114:16\nhttp://web-platform.test:8000/2dcontext/line-styles/2d.line.cap.round.html:68:13\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.cap.square.html",
      "subtests": [
        {
          "name": "lineCap 'square' is rendered correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.cap.valid.html",
      "subtests": [
        {
          "name": "Setting lineCap to valid values works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.cross.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.line.cross",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.defaults.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.line.defaults",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.join.bevel.html",
      "subtests": [
        {
          "name": "lineJoin 'bevel' is rendered correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.join.closed.html",
      "subtests": [
        {
          "name": "Line joins are drawn at the corner of a closed rectangle",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.join.invalid.html",
      "subtests": [
        {
          "name": "Setting lineJoin to invalid values is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.join.miter.html",
      "subtests": [
        {
          "name": "lineJoin 'miter' is rendered correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.join.open.html",
      "subtests": [
        {
          "name": "Line joins are not drawn at the corner of an unclosed rectangle",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.join.parallel.html",
      "subtests": [
        {
          "name": "Line joins are drawn at 180-degree joins",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.join.round.html",
      "subtests": [
        {
          "name": "lineJoin 'round' is rendered correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.join.valid.html",
      "subtests": [
        {
          "name": "Setting lineJoin to valid values works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.miter.acute.html",
      "subtests": [
        {
          "name": "Miter joins are drawn correctly with acute angles",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.miter.exceeded.html",
      "subtests": [
        {
          "name": "Miter joins are not drawn when the miter limit is exceeded",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.miter.invalid.html",
      "subtests": [
        {
          "name": "Setting miterLimit to invalid values is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.miter.lineedge.html",
      "subtests": [
        {
          "name": "Miter joins are not drawn when the miter limit is exceeded at the corners of a zero-height rectangle",
          "status": "FAIL",
          "message": "assert_true: got pixel [255,0,0,255] at (48,1), expected [0,255,0,255] expected true got false(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_true@http://web-platform.test:8000/resources/testharness.js:711:15\n_assertPixel@http://web-platform.test:8000/common/canvas-tests.js:114:16\nhttp://web-platform.test:8000/2dcontext/line-styles/2d.line.miter.lineedge.html:35:13\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.miter.obtuse.html",
      "subtests": [
        {
          "name": "Miter joins are drawn correctly with obtuse angles",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.miter.rightangle.html",
      "subtests": [
        {
          "name": "Miter joins are not drawn when the miter limit is exceeded, on exact right angles",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.miter.valid.html",
      "subtests": [
        {
          "name": "Setting miterLimit to valid values works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.miter.within.html",
      "subtests": [
        {
          "name": "Miter joins are drawn when the miter limit is not quite exceeded",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.union.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.line.union",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.width.basic.html",
      "subtests": [
        {
          "name": "lineWidth determines the width of line strokes",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.width.invalid.html",
      "subtests": [
        {
          "name": "Setting lineWidth to invalid values is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.width.scaledefault.html",
      "subtests": [
        {
          "name": "Default lineWidth strokes are affected by scale transformations",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.width.transformed.html",
      "subtests": [
        {
          "name": "Line stroke widths are affected by scale transformations",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/line-styles/2d.line.width.valid.html",
      "subtests": [
        {
          "name": "Setting lineWidth to valid values works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.angle.1.html",
      "subtests": [
        {
          "name": "arc() draws pi/2 .. -pi anticlockwise correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.angle.2.html",
      "subtests": [
        {
          "name": "arc() draws -3pi/2 .. -pi anticlockwise correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.angle.3.html",
      "subtests": [
        {
          "name": "arc() wraps angles mod 2pi when anticlockwise and end > start+2pi",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.angle.4.html",
      "subtests": [
        {
          "name": "arc() draws a full circle when clockwise and end > start+2pi",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.angle.5.html",
      "subtests": [
        {
          "name": "arc() wraps angles mod 2pi when clockwise and start > end+2pi",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.angle.6.html",
      "subtests": [
        {
          "name": "arc() draws a full circle when anticlockwise and start > end+2pi",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.default.html",
      "subtests": [
        {
          "name": "arc() with missing last argument defaults to clockwise",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.empty.html",
      "subtests": [
        {
          "name": "arc() with an empty path does not draw a straight line to the start point",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.end.html",
      "subtests": [
        {
          "name": "arc() adds the end point of the arc to the subpath",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.negative.html",
      "subtests": [
        {
          "name": "arc() with negative radius throws INDEX_SIZE_ERR",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.nonempty.html",
      "subtests": [
        {
          "name": "arc() with a non-empty path does draw a straight line to the start point",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.nonfinite.html",
      "subtests": [
        {
          "name": "arc() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.scale.1.html",
      "subtests": [
        {
          "name": "Non-uniformly scaled arcs are the right shape",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.scale.2.html",
      "subtests": [
        {
          "name": "Highly scaled arcs are the right shape",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.selfintersect.1.html",
      "subtests": [
        {
          "name": "arc() with lineWidth > 2*radius is drawn sensibly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.selfintersect.2.html",
      "subtests": [
        {
          "name": "arc() with lineWidth > 2*radius is drawn sensibly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.shape.1.html",
      "subtests": [
        {
          "name": "arc() from 0 to pi does not draw anything in the wrong half",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.shape.2.html",
      "subtests": [
        {
          "name": "arc() from 0 to pi draws stuff in the right half",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.shape.3.html",
      "subtests": [
        {
          "name": "arc() from 0 to -pi/2 does not draw anything in the wrong quadrant",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.shape.4.html",
      "subtests": [
        {
          "name": "arc() from 0 to -pi/2 draws stuff in the right quadrant",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.shape.5.html",
      "subtests": [
        {
          "name": "arc() from 0 to 5pi does not draw crazy things",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.twopie.1.html",
      "subtests": [
        {
          "name": "arc() draws nothing when end = start + 2pi-e and anticlockwise",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.twopie.2.html",
      "subtests": [
        {
          "name": "arc() draws a full circle when end = start + 2pi-e and clockwise",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.twopie.3.html",
      "subtests": [
        {
          "name": "arc() draws a full circle when end = start + 2pi+e and anticlockwise",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.twopie.4.html",
      "subtests": [
        {
          "name": "arc() draws nothing when end = start + 2pi+e and clockwise",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.zero.1.html",
      "subtests": [
        {
          "name": "arc() draws nothing when startAngle = endAngle and anticlockwise",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.zero.2.html",
      "subtests": [
        {
          "name": "arc() draws nothing when startAngle = endAngle and clockwise",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arc.zeroradius.html",
      "subtests": [
        {
          "name": "arc() with zero radius draws a line to the start point",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.coincide.1.html",
      "subtests": [
        {
          "name": "arcTo() has no effect if P0 = P1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.coincide.2.html",
      "subtests": [
        {
          "name": "arcTo() draws a straight line to P1 if P1 = P2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.collinear.1.html",
      "subtests": [
        {
          "name": "arcTo() with all points on a line, and P1 between P0/P2, draws a straight line to P1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.collinear.2.html",
      "subtests": [
        {
          "name": "arcTo() with all points on a line, and P2 between P0/P1, draws a straight line to P1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.collinear.3.html",
      "subtests": [
        {
          "name": "arcTo() with all points on a line, and P0 between P1/P2, draws a straight line to P1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.ensuresubpath.1.html",
      "subtests": [
        {
          "name": "If there is no subpath, the first control point is added (and nothing is drawn up to it)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.ensuresubpath.2.html",
      "subtests": [
        {
          "name": "If there is no subpath, the first control point is added",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.negative.html",
      "subtests": [
        {
          "name": "arcTo() with negative radius throws an exception",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.nonfinite.html",
      "subtests": [
        {
          "name": "arcTo() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.scale.html",
      "subtests": [
        {
          "name": "arcTo scales the curve, not just the control points",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.shape.curve1.html",
      "subtests": [
        {
          "name": "arcTo() curves in the right kind of shape",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.shape.curve2.html",
      "subtests": [
        {
          "name": "arcTo() curves in the right kind of shape",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.shape.end.html",
      "subtests": [
        {
          "name": "arcTo() does not draw anything from P1 to P2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.shape.start.html",
      "subtests": [
        {
          "name": "arcTo() draws a straight line from P0 to P1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.transformation.html",
      "subtests": [
        {
          "name": "arcTo joins up to the last subpath point correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.zero.1.html",
      "subtests": [
        {
          "name": "arcTo() with zero radius draws a straight line from P0 to P1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.arcTo.zero.2.html",
      "subtests": [
        {
          "name": "arcTo() with zero radius draws a straight line from P0 to P1, even when all points are collinear",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.beginPath.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.beginPath",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.bezierCurveTo.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.bezierCurveTo.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.bezierCurveTo.ensuresubpath.1.html",
      "subtests": [
        {
          "name": "If there is no subpath, the first control point is added (and nothing is drawn up to it)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.bezierCurveTo.ensuresubpath.2.html",
      "subtests": [
        {
          "name": "If there is no subpath, the first control point is added",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.bezierCurveTo.nonfinite.html",
      "subtests": [
        {
          "name": "bezierCurveTo() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.bezierCurveTo.scaled.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.bezierCurveTo.scaled",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.bezierCurveTo.shape.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.bezierCurveTo.shape",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.clip.basic.1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.clip.basic.1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.clip.basic.2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.clip.basic.2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.clip.empty.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.clip.empty",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.clip.intersect.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.clip.intersect",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.clip.unaffected.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.clip.unaffected",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.clip.winding.1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.clip.winding.1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.clip.winding.2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.clip.winding.2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.closePath.empty.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.closePath.empty",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.closePath.newline.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.closePath.newline",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.closePath.nextpoint.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.closePath.nextpoint",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.fill.closed.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.fill.closed.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.fill.closed.unaffected.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.fill.closed.unaffected",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.fill.overlap.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.fill.overlap",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.fill.winding.add.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.fill.winding.add",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.fill.winding.subtract.1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.fill.winding.subtract.1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.fill.winding.subtract.2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.fill.winding.subtract.2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.fill.winding.subtract.3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.fill.winding.subtract.3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.initial.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.initial",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.arc.html",
      "subtests": [
        {
          "name": "isPointInPath() works on arcs",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.basic.1.html",
      "subtests": [
        {
          "name": "isPointInPath() detects whether the point is inside the path",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.basic.2.html",
      "subtests": [
        {
          "name": "isPointInPath() detects whether the point is inside the path",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.bezier.html",
      "subtests": [
        {
          "name": "isPointInPath() works on Bezier curves",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.bigarc.html",
      "subtests": [
        {
          "name": "isPointInPath() works on unclosed arcs larger than 2pi",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.edge.html",
      "subtests": [
        {
          "name": "isPointInPath() counts points on the path as being inside",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.empty.html",
      "subtests": [
        {
          "name": "isPointInPath() works when there is no path",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.nonfinite.html",
      "subtests": [
        {
          "name": "isPointInPath() returns false for non-finite arguments",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.outside.html",
      "subtests": [
        {
          "name": "isPointInPath() works on paths outside the canvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.subpath.html",
      "subtests": [
        {
          "name": "isPointInPath() uses the current path, not just the subpath",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.transform.1.html",
      "subtests": [
        {
          "name": "isPointInPath() handles transformations correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.transform.2.html",
      "subtests": [
        {
          "name": "isPointInPath() handles transformations correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.transform.3.html",
      "subtests": [
        {
          "name": "isPointInPath() handles transformations correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.transform.4.html",
      "subtests": [
        {
          "name": "isPointInPath() handles transformations correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.unclosed.html",
      "subtests": [
        {
          "name": "isPointInPath() works on unclosed subpaths",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.isPointInPath.winding.html",
      "subtests": [
        {
          "name": "isPointInPath() uses the non-zero winding number rule",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.lineTo.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.lineTo.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.lineTo.ensuresubpath.1.html",
      "subtests": [
        {
          "name": "If there is no subpath, the point is added and nothing is drawn",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.lineTo.ensuresubpath.2.html",
      "subtests": [
        {
          "name": "If there is no subpath, the point is added and used for subsequent drawing",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.lineTo.nextpoint.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.lineTo.nextpoint",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.lineTo.nonfinite.html",
      "subtests": [
        {
          "name": "lineTo() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.moveTo.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.moveTo.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.moveTo.multiple.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.moveTo.multiple",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.moveTo.newsubpath.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.moveTo.newsubpath",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.moveTo.nonfinite.html",
      "subtests": [
        {
          "name": "moveTo() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.quadraticCurveTo.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.quadraticCurveTo.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.quadraticCurveTo.ensuresubpath.1.html",
      "subtests": [
        {
          "name": "If there is no subpath, the first control point is added (and nothing is drawn up to it)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.quadraticCurveTo.ensuresubpath.2.html",
      "subtests": [
        {
          "name": "If there is no subpath, the first control point is added",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.quadraticCurveTo.nonfinite.html",
      "subtests": [
        {
          "name": "quadraticCurveTo() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.quadraticCurveTo.scaled.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.quadraticCurveTo.scaled",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.quadraticCurveTo.shape.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.quadraticCurveTo.shape",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.closed.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.closed",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.end.1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.end.1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.end.2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.end.2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.negative.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.negative",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.newsubpath.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.newsubpath",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.nonfinite.html",
      "subtests": [
        {
          "name": "rect() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.selfintersect.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.selfintersect",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.winding.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.winding",
          "status": "FAIL",
          "message": "assert_true: got pixel [255,0,0,255] at (25,12), expected [0,255,0,255] expected true got false(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_true@http://web-platform.test:8000/resources/testharness.js:711:15\n_assertPixel@http://web-platform.test:8000/common/canvas-tests.js:114:16\nhttp://web-platform.test:8000/2dcontext/path-objects/2d.path.rect.winding.html:32:13\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.zero.1.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.zero.1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.zero.2.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.zero.2",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.zero.3.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.zero.3",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.zero.4.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.zero.4",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.zero.5.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.zero.5",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.rect.zero.6.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.rect.zero.6",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.empty.html",
      "subtests": [
        {
          "name": "Empty subpaths are not stroked",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.overlap.html",
      "subtests": [
        {
          "name": "Stroked subpaths are combined before being drawn",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.prune.arc.html",
      "subtests": [
        {
          "name": "Zero-length line segments from arcTo and arc are removed before stroking",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.prune.closed.html",
      "subtests": [
        {
          "name": "Zero-length line segments from closed paths are removed before stroking",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.prune.corner.html",
      "subtests": [
        {
          "name": "Zero-length line segments are removed before stroking with miters",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.prune.curve.html",
      "subtests": [
        {
          "name": "Zero-length line segments from quadraticCurveTo and bezierCurveTo are removed before stroking",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.prune.line.html",
      "subtests": [
        {
          "name": "Zero-length line segments from lineTo are removed before stroking",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.prune.rect.html",
      "subtests": [
        {
          "name": "Zero-length line segments from rect and strokeRect are removed before stroking",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.scale1.html",
      "subtests": [
        {
          "name": "Stroke line widths are scaled by the current transformation matrix",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.scale2.html",
      "subtests": [
        {
          "name": "Stroke line widths are scaled by the current transformation matrix",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.skew.html",
      "subtests": [
        {
          "name": "Strokes lines are skewed by the current transformation matrix",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.unaffected.html",
      "subtests": [
        {
          "name": "Stroking does not start a new path or subpath",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.stroke.union.html",
      "subtests": [
        {
          "name": "Strokes in opposite directions are unioned, not subtracted",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.transformation.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.path.transformation.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.transformation.changing.html",
      "subtests": [
        {
          "name": "Transformations are applied while building paths, not when drawing",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/path-objects/2d.path.transformation.multiple.html",
      "subtests": [
        {
          "name": "Transformations are applied while building paths, not when drawing",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create1.basic.html",
      "subtests": [
        {
          "name": "createImageData(imgdata) exists and returns something",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create1.initial.html",
      "subtests": [
        {
          "name": "createImageData(imgdata) returns transparent black data of the right size",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create1.this.html",
      "subtests": [
        {
          "name": "createImageData(imgdata) should throw when called with the wrong |this|",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create1.type.html",
      "subtests": [
        {
          "name": "createImageData(imgdata) returns an ImageData object containing a Uint8ClampedArray object",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create1.zero.html",
      "subtests": [
        {
          "name": "createImageData(null) throws TypeError",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.createImageData(null); }\" threw object \"Error: NotSupportedError: DOM Exception 9\" (\"NotSupportedError\") expected object \"TypeError\" (\"TypeError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/pixel-manipulation/2d.imageData.create1.zero.html:23:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create2.basic.html",
      "subtests": [
        {
          "name": "createImageData(sw, sh) exists and returns something",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create2.initial.html",
      "subtests": [
        {
          "name": "createImageData(sw, sh) returns transparent black data of the right size",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create2.large.html",
      "subtests": [
        {
          "name": "createImageData(sw, sh) works for sizes much larger than the canvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create2.negative.html",
      "subtests": [
        {
          "name": "createImageData(sw, sh) takes the absolute magnitude of the size arguments",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create2.nonfinite.html",
      "subtests": [
        {
          "name": "createImageData() throws TypeError if arguments are not finite",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.createImageData(Infinity, 10); }\" threw object \"Error: NotSupportedError: DOM Exception 9\" (\"NotSupportedError\") expected object \"TypeError\" (\"TypeError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/pixel-manipulation/2d.imageData.create2.nonfinite.html:23:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create2.round.html",
      "subtests": [
        {
          "name": "createImageData(w, h) is rounded the same as getImageData(0, 0, w, h)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create2.this.html",
      "subtests": [
        {
          "name": "createImageData(sw, sh) should throw when called with the wrong |this|",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create2.tiny.html",
      "subtests": [
        {
          "name": "createImageData(sw, sh) works for sizes smaller than one pixel",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create2.type.html",
      "subtests": [
        {
          "name": "createImageData(sw, sh) returns an ImageData object containing a Uint8ClampedArray object",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.create2.zero.html",
      "subtests": [
        {
          "name": "createImageData(sw, sh) throws INDEX_SIZE_ERR if size is zero",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.basic.html",
      "subtests": [
        {
          "name": "getImageData() exists and returns something",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.clamp.html",
      "subtests": [
        {
          "name": "getImageData() clamps colours to the range [0, 255]",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.length.html",
      "subtests": [
        {
          "name": "getImageData() returns a correctly-sized Uint8ClampedArray",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.nonfinite.html",
      "subtests": [
        {
          "name": "getImageData() throws TypeError if arguments are not finite",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.getImageData(Infinity, 10, 10, 10); }\" threw object \"Error: NotSupportedError: DOM Exception 9\" (\"NotSupportedError\") expected object \"TypeError\" (\"TypeError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/pixel-manipulation/2d.imageData.get.nonfinite.html:23:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.nonpremul.html",
      "subtests": [
        {
          "name": "getImageData() returns non-premultiplied colours",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.order.alpha.html",
      "subtests": [
        {
          "name": "getImageData() returns A in the fourth component",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.order.cols.html",
      "subtests": [
        {
          "name": "getImageData() returns leftmost columns first",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.order.rgb.html",
      "subtests": [
        {
          "name": "getImageData() returns R then G then B",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.order.rows.html",
      "subtests": [
        {
          "name": "getImageData() returns topmost rows first",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.range.html",
      "subtests": [
        {
          "name": "getImageData() returns values in the range [0, 255]",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.source.negative.html",
      "subtests": [
        {
          "name": "getImageData() works with negative width and height, and returns top-to-bottom left-to-right",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.source.outside.html",
      "subtests": [
        {
          "name": "getImageData() returns transparent black outside the canvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.source.size.html",
      "subtests": [
        {
          "name": "getImageData() returns bigger ImageData for bigger source rectangle",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.tiny.html",
      "subtests": [
        {
          "name": "getImageData() works for sizes smaller than one pixel",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.type.html",
      "subtests": [
        {
          "name": "getImageData() returns an ImageData object containing a Uint8ClampedArray object",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.unaffected.html",
      "subtests": [
        {
          "name": "getImageData() is not affected by context state",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.get.zero.html",
      "subtests": [
        {
          "name": "getImageData() throws INDEX_SIZE_ERR if size is zero",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.object.clamp.html",
      "subtests": [
        {
          "name": "ImageData.data clamps numbers to [0, 255]",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.object.ctor.html",
      "subtests": [
        {
          "name": "ImageData does not have a usable constructor",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { new window.ImageData(1,1); }\" did not throw(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:995:19\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/pixel-manipulation/2d.imageData.object.ctor.html:24:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.object.nan.html",
      "subtests": [
        {
          "name": "ImageData.data converts NaN to 0",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.object.properties.html",
      "subtests": [
        {
          "name": "ImageData objects have the right properties",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.object.readonly.html",
      "subtests": [
        {
          "name": "ImageData objects properties are read-only",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.object.round.html",
      "subtests": [
        {
          "name": "ImageData.data rounds numbers with round-to-zero",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.object.set.html",
      "subtests": [
        {
          "name": "ImageData.data can be modified",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.object.string.html",
      "subtests": [
        {
          "name": "ImageData.data converts strings to numbers with ToNumber",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.object.undefined.html",
      "subtests": [
        {
          "name": "ImageData.data converts undefined to 0",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.alpha.html",
      "subtests": [
        {
          "name": "putImageData() puts non-solid image data correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.basic.html",
      "subtests": [
        {
          "name": "putImageData() puts image data from getImageData() onto the canvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.clip.html",
      "subtests": [
        {
          "name": "putImageData() is not affected by clipping regions",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.created.html",
      "subtests": [
        {
          "name": "putImageData() puts image data from createImageData() onto the canvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.cross.html",
      "subtests": [
        {
          "name": "putImageData() accepts image data got from a different canvas",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.dirty.negative.html",
      "subtests": [
        {
          "name": "putImageData() handles negative-sized dirty rectangles correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.dirty.outside.html",
      "subtests": [
        {
          "name": "putImageData() handles dirty rectangles outside the canvas correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.dirty.rect1.html",
      "subtests": [
        {
          "name": "putImageData() only modifies areas inside the dirty rectangle, using width and height",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.dirty.rect2.html",
      "subtests": [
        {
          "name": "putImageData() only modifies areas inside the dirty rectangle, using x and y",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.dirty.zero.html",
      "subtests": [
        {
          "name": "putImageData() with zero-sized dirty rectangle puts nothing",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.modified.html",
      "subtests": [
        {
          "name": "putImageData() puts modified image data correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.nonfinite.html",
      "subtests": [
        {
          "name": "putImageData() throws TypeError if arguments are not finite",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.putImageData(imgdata, Infinity, 10); }\" threw object \"Error: NotSupportedError: DOM Exception 9\" (\"NotSupportedError\") expected object \"TypeError\" (\"TypeError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/pixel-manipulation/2d.imageData.put.nonfinite.html:24:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.null.html",
      "subtests": [
        {
          "name": "putImageData() with null imagedata throws TypeError",
          "status": "FAIL",
          "message": "assert_throws: function \"function () { ctx.putImageData(null, 0, 0); }\" threw object \"Error: TypeMismatchError: DOM Exception 17\" (\"TypeMismatchError\") expected object \"TypeError\" (\"TypeError\")(stack: assert@http://web-platform.test:8000/resources/testharness.js:2150:42\nassert_throws@http://web-platform.test:8000/resources/testharness.js:1005:23\n_assert_throws@http://web-platform.test:8000/common/canvas-tests.js:216:18\nhttp://web-platform.test:8000/2dcontext/pixel-manipulation/2d.imageData.put.null.html:23:15\nstep@http://web-platform.test:8000/resources/testharness.js:1210:30\nhttp://web-platform.test:8000/common/canvas-tests.js:182:19)"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.path.html",
      "subtests": [
        {
          "name": "putImageData() does not affect the current path",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.unaffected.html",
      "subtests": [
        {
          "name": "putImageData() is not affected by context state",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.unchanged.html",
      "subtests": [
        {
          "name": "putImageData(getImageData(...), ...) has no effect",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/pixel-manipulation/2d.imageData.put.wrongtype.html",
      "subtests": [
        {
          "name": "putImageData() does not accept non-ImageData objects",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.alpha.1.html",
      "subtests": [
        {
          "name": "Shadow colour alpha components are used",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.alpha.2.html",
      "subtests": [
        {
          "name": "Shadow colour alpha components are used",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.alpha.3.html",
      "subtests": [
        {
          "name": "Shadows are affected by globalAlpha",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.alpha.4.html",
      "subtests": [
        {
          "name": "Shadows with alpha components are correctly affected by globalAlpha",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.alpha.5.html",
      "subtests": [
        {
          "name": "Shadows of shapes with alpha components are drawn correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.attributes.shadowBlur.initial.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.shadow.attributes.shadowBlur.initial",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.attributes.shadowBlur.invalid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.shadow.attributes.shadowBlur.invalid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.attributes.shadowBlur.valid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.shadow.attributes.shadowBlur.valid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.attributes.shadowColor.initial.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.shadow.attributes.shadowColor.initial",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.attributes.shadowColor.invalid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.shadow.attributes.shadowColor.invalid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.attributes.shadowColor.valid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.shadow.attributes.shadowColor.valid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.attributes.shadowOffset.initial.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.shadow.attributes.shadowOffset.initial",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.attributes.shadowOffset.invalid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.shadow.attributes.shadowOffset.invalid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.attributes.shadowOffset.valid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.shadow.attributes.shadowOffset.valid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.canvas.alpha.html",
      "subtests": [
        {
          "name": "Shadows are drawn correctly for partially-transparent canvases",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.canvas.basic.html",
      "subtests": [
        {
          "name": "Shadows are drawn for canvases",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.canvas.transparent.1.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for transparent canvases",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.canvas.transparent.2.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for transparent parts of canvases",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.clip.1.html",
      "subtests": [
        {
          "name": "Shadows of clipped shapes are still drawn within the clipping region",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.clip.2.html",
      "subtests": [
        {
          "name": "Shadows are not drawn outside the clipping region",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.clip.3.html",
      "subtests": [
        {
          "name": "Shadows of clipped shapes are still drawn within the clipping region",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.composite.1.html",
      "subtests": [
        {
          "name": "Shadows are drawn using globalCompositeOperation",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.composite.2.html",
      "subtests": [
        {
          "name": "Shadows are drawn using globalCompositeOperation",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.composite.3.html",
      "subtests": [
        {
          "name": "Areas outside shadows are drawn correctly with destination-out",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.enable.blur.html",
      "subtests": [
        {
          "name": "Shadows are drawn if shadowBlur is set",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.enable.off.1.html",
      "subtests": [
        {
          "name": "Shadows are not drawn when only shadowColor is set",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.enable.off.2.html",
      "subtests": [
        {
          "name": "Shadows are not drawn when only shadowColor is set",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.enable.x.html",
      "subtests": [
        {
          "name": "Shadows are drawn if shadowOffsetX is set",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.enable.y.html",
      "subtests": [
        {
          "name": "Shadows are drawn if shadowOffsetY is set",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.gradient.alpha.html",
      "subtests": [
        {
          "name": "Shadows are drawn correctly for partially-transparent gradient fills",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.gradient.basic.html",
      "subtests": [
        {
          "name": "Shadows are drawn for gradient fills",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.gradient.transparent.1.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for transparent gradient fills",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.gradient.transparent.2.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for transparent parts of gradient fills",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.image.alpha.html",
      "subtests": [
        {
          "name": "Shadows are drawn correctly for partially-transparent images",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.image.basic.html",
      "subtests": [
        {
          "name": "Shadows are drawn for images",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.image.scale.html",
      "subtests": [
        {
          "name": "Shadows are drawn correctly for scaled images",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.image.section.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for areas outside image source rectangles",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.image.transparent.1.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for transparent images",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.image.transparent.2.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for transparent parts of images",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.offset.negativeX.html",
      "subtests": [
        {
          "name": "Shadows can be offset with negative x",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.offset.negativeY.html",
      "subtests": [
        {
          "name": "Shadows can be offset with negative y",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.offset.positiveX.html",
      "subtests": [
        {
          "name": "Shadows can be offset with positive x",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.offset.positiveY.html",
      "subtests": [
        {
          "name": "Shadows can be offset with positive y",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.outside.html",
      "subtests": [
        {
          "name": "Shadows of shapes outside the visible area can be offset onto the visible area",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.pattern.alpha.html",
      "subtests": [
        {
          "name": "Shadows are drawn correctly for partially-transparent fill patterns",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.pattern.basic.html",
      "subtests": [
        {
          "name": "Shadows are drawn for fill patterns",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.pattern.transparent.1.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for transparent fill patterns",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.pattern.transparent.2.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for transparent parts of fill patterns",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.stroke.basic.html",
      "subtests": [
        {
          "name": "Shadows are drawn for strokes",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.stroke.cap.1.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for areas outside stroke caps",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.stroke.cap.2.html",
      "subtests": [
        {
          "name": "Shadows are drawn for stroke caps",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.stroke.join.1.html",
      "subtests": [
        {
          "name": "Shadows are not drawn for areas outside stroke joins",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.stroke.join.2.html",
      "subtests": [
        {
          "name": "Shadows are drawn for stroke joins",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.stroke.join.3.html",
      "subtests": [
        {
          "name": "Shadows are drawn for stroke joins respecting miter limit",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.transform.1.html",
      "subtests": [
        {
          "name": "Shadows take account of transformations",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/shadows/2d.shadow.transform.2.html",
      "subtests": [
        {
          "name": "Shadow offsets are not affected by transformations",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.align.default.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.align.default",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.align.invalid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.align.invalid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.align.valid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.align.valid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.baseline.default.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.baseline.default",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.baseline.invalid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.baseline.invalid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.baseline.valid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.baseline.valid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.draw.baseline.bottom.html",
      "subtests": [
        {
          "name": "textBaseline bottom is the bottom of the em square (not the bounding box)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.draw.baseline.hanging.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.draw.baseline.hanging",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.draw.baseline.ideographic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.draw.baseline.ideographic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.draw.baseline.middle.html",
      "subtests": [
        {
          "name": "textBaseline middle is the middle of the em square (not the bounding box)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.draw.baseline.top.html",
      "subtests": [
        {
          "name": "textBaseline top is the top of the em square (not the bounding box)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.draw.space.collapse.end.html",
      "subtests": [
        {
          "name": "Space characters at the end of a line are collapsed (per CSS)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.draw.space.collapse.other.html",
      "subtests": [
        {
          "name": "Space characters are converted to U+0020, and collapsed (per CSS)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.draw.space.collapse.space.html",
      "subtests": [
        {
          "name": "Space characters are converted to U+0020, and collapsed (per CSS)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.draw.space.collapse.start.html",
      "subtests": [
        {
          "name": "Space characters at the start of a line are collapsed (per CSS)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.font.default.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.font.default",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.font.parse.basic.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.font.parse.basic",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.font.parse.complex.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.font.parse.complex",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.font.parse.invalid.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.font.parse.invalid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.font.parse.size.percentage.default.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.font.parse.size.percentage.default",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.font.parse.size.percentage.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.text.font.parse.size.percentage",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.font.parse.system.html",
      "subtests": [
        {
          "name": "System fonts must be computed to explicit values",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/text-styles/2d.text.measure.width.space.html",
      "subtests": [
        {
          "name": "Space characters are converted to U+0020 and collapsed (per CSS)",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.bitmap.html",
      "subtests": [
        {
          "name": "save()/restore() does not affect the current bitmap",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.clip.html",
      "subtests": [
        {
          "name": "save()/restore() affects the clipping path",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.fillStyle.html",
      "subtests": [
        {
          "name": "save()/restore() works for fillStyle",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.font.html",
      "subtests": [
        {
          "name": "save()/restore() works for font",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.globalAlpha.html",
      "subtests": [
        {
          "name": "save()/restore() works for globalAlpha",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.globalCompositeOperation.html",
      "subtests": [
        {
          "name": "save()/restore() works for globalCompositeOperation",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.lineCap.html",
      "subtests": [
        {
          "name": "save()/restore() works for lineCap",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.lineJoin.html",
      "subtests": [
        {
          "name": "save()/restore() works for lineJoin",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.lineWidth.html",
      "subtests": [
        {
          "name": "save()/restore() works for lineWidth",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.miterLimit.html",
      "subtests": [
        {
          "name": "save()/restore() works for miterLimit",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.path.html",
      "subtests": [
        {
          "name": "save()/restore() does not affect the current path",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.shadowBlur.html",
      "subtests": [
        {
          "name": "save()/restore() works for shadowBlur",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.shadowColor.html",
      "subtests": [
        {
          "name": "save()/restore() works for shadowColor",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.shadowOffsetX.html",
      "subtests": [
        {
          "name": "save()/restore() works for shadowOffsetX",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.shadowOffsetY.html",
      "subtests": [
        {
          "name": "save()/restore() works for shadowOffsetY",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.stack.html",
      "subtests": [
        {
          "name": "save()/restore() can be nested as a stack",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.stackdepth.html",
      "subtests": [
        {
          "name": "save()/restore() stack depth is not unreasonably limited",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.strokeStyle.html",
      "subtests": [
        {
          "name": "save()/restore() works for strokeStyle",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.textAlign.html",
      "subtests": [
        {
          "name": "save()/restore() works for textAlign",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.textBaseline.html",
      "subtests": [
        {
          "name": "save()/restore() works for textBaseline",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.transformation.html",
      "subtests": [
        {
          "name": "save()/restore() affects the current transformation matrix",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/the-canvas-state/2d.state.saverestore.underflow.html",
      "subtests": [
        {
          "name": "restore() with an empty stack has no effect",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.order.html",
      "subtests": [
        {
          "name": "Transformations are applied in the right order",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.rotate.direction.html",
      "subtests": [
        {
          "name": "rotate() is clockwise",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.rotate.nonfinite.html",
      "subtests": [
        {
          "name": "rotate() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.rotate.radians.html",
      "subtests": [
        {
          "name": "rotate() uses radians",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.rotate.wrap.html",
      "subtests": [
        {
          "name": "rotate() wraps large positive values correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.rotate.wrapnegative.html",
      "subtests": [
        {
          "name": "rotate() wraps large negative values correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.rotate.zero.html",
      "subtests": [
        {
          "name": "rotate() by 0 does nothing",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.scale.basic.html",
      "subtests": [
        {
          "name": "scale() works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.scale.large.html",
      "subtests": [
        {
          "name": "scale() with large scale factors works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.scale.multiple.html",
      "subtests": [
        {
          "name": "Multiple scale()s combine",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.scale.negative.html",
      "subtests": [
        {
          "name": "scale() with negative scale factors works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.scale.nonfinite.html",
      "subtests": [
        {
          "name": "scale() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.scale.zero.html",
      "subtests": [
        {
          "name": "scale() with a scale factor of zero works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.setTransform.multiple.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.transformation.setTransform.multiple",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.setTransform.nonfinite.html",
      "subtests": [
        {
          "name": "setTransform() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.setTransform.skewed.html",
      "subtests": [
        {
          "name": "Canvas test: 2d.transformation.setTransform.skewed",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.transform.identity.html",
      "subtests": [
        {
          "name": "transform() with the identity matrix does nothing",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.transform.multiply.html",
      "subtests": [
        {
          "name": "transform() multiplies the CTM",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.transform.nonfinite.html",
      "subtests": [
        {
          "name": "transform() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.transform.skewed.html",
      "subtests": [
        {
          "name": "transform() with skewy matrix transforms correctly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.translate.basic.html",
      "subtests": [
        {
          "name": "translate() works",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/2dcontext/transformations/2d.transformation.translate.nonfinite.html",
      "subtests": [
        {
          "name": "translate() with Infinity/NaN is ignored",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}