{
  "results": [
    {
      "test": "/domxpath/001.html",
      "subtests": [
        {
          "name": "HTML elements no namespace prefix",
          "status": "PASS",
          "message": null
        },
        {
          "name": "HTML elements namespace prefix",
          "status": "PASS",
          "message": null
        },
        {
          "name": "HTML elements mixed use of prefix",
          "status": "PASS",
          "message": null
        },
        {
          "name": "SVG elements no namespace prefix",
          "status": "PASS",
          "message": null
        },
        {
          "name": "SVG elements namespace prefix",
          "status": "PASS",
          "message": null
        },
        {
          "name": "HTML elements mixed case",
          "status": "PASS",
          "message": null
        },
        {
          "name": "SVG elements mixed case selector",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Non-ascii HTML element",
          "status": "FAIL",
          "message": "assert_array_equals: lengths differ, expected 0 got 1"
        },
        {
          "name": "Non-ascii HTML element2",
          "status": "FAIL",
          "message": "assert_array_equals: lengths differ, expected 0 got 1"
        },
        {
          "name": "Non-ascii HTML element3",
          "status": "FAIL",
          "message": "assert_array_equals: lengths differ, expected 0 got 1"
        },
        {
          "name": "Throw with invalid prefix",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: getExtractedNovelData is not defined"
    },
    {
      "test": "/domxpath/002.html",
      "subtests": [
        {
          "name": "Select html element based on attribute",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Select html element based on attribute mixed case",
          "status": "FAIL",
          "message": "assert_array_equals: lengths differ, expected 1 got 0"
        },
        {
          "name": "Select both HTML and SVG elements based on attribute",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Select HTML element with non-ascii attribute 1",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Select HTML element with non-ascii attribute 2",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Select HTML element with non-ascii attribute 3",
          "status": "FAIL",
          "message": "assert_array_equals: lengths differ, expected 1 got 0"
        },
        {
          "name": "Select SVG element based on mixed case attribute",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Select both HTML and SVG elements based on mixed case attribute",
          "status": "FAIL",
          "message": "assert_array_equals: lengths differ, expected 1 got 0"
        },
        {
          "name": "Select SVG elements with refX attribute",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Select SVG elements with refX attribute incorrect case",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Select SVG elements with refX attribute lowercase",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Select SVG element with non-ascii attribute 1",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Select SVG element with non-ascii attribute 2",
          "status": "PASS",
          "message": null
        },
        {
          "name": "xmlns attribute",
          "status": "PASS",
          "message": null
        },
        {
          "name": "svg element with XLink attribute",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "ERROR",
      "message": "Uncaught ReferenceError: getExtractedNovelData is not defined"
    },
    {
      "test": "/domxpath/evaluator-constructor.html",
      "subtests": [
        {
          "name": "Constructor with 'new'",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Constructor without 'new'",
          "status": "FAIL",
          "message": "DOM object constructor cannot be called as a function.(stack: TypeError: DOM object constructor cannot be called as a function.\n    at Object.<anonymous> (http://www.w3c-test.org/domxpath/evaluator-constructor.html:14:11)\n    at Object.Test.step (http://www.w3c-test.org/resources/testharness.js:798:25)\n    at test (http://www.w3c-test.org/resources/testharness.js:73:18)\n    at http://www.w3c-test.org/domxpath/evaluator-constructor.html:13:1)"
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}