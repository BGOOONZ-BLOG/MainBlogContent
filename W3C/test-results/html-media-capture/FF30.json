{
  "results": [
    {
      "test": "/html-media-capture/capture_fallback_file_upload.html",
      "subtests": [
        {
          "name": "Check if input.capture fallback to file upload when the accept attribute value is set to a MIME type that has no associated capture control type",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/html-media-capture/capture_reflect.html",
      "subtests": [
        {
          "name": "Element input should have own property capture",
          "status": "PASS",
          "message": null
        },
        {
          "name": "input.capture is false when the capture attribute is absent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "input.capture is true when the capture attribute is present",
          "status": "PASS",
          "message": null
        },
        {
          "name": "input.capture is true when the capture attribute is present as empty string",
          "status": "PASS",
          "message": null
        },
        {
          "name": "input.capture is true when the capture attribute is present as canonical name",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/html-media-capture/idlharness.html",
      "subtests": [
        {
          "name": "HTMLInputElement interface: attribute capture",
          "status": "FAIL",
          "message": "assert_true: The prototype object must have a property \"capture\" expected true got false"
        },
        {
          "name": "HTMLInputElement must be primary interface of [object HTMLInputElement]",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Stringification of [object HTMLInputElement]",
          "status": "PASS",
          "message": null
        },
        {
          "name": "HTMLInputElement interface: [object HTMLInputElement] must inherit property \"capture\" with the proper type (0)",
          "status": "FAIL",
          "message": "assert_inherits: property \"capture\" found on object expected in prototype chain"
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}